/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/public";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(460), __webpack_require__(462), __webpack_require__(6), __webpack_require__(463), __webpack_require__(46)], __WEBPACK_AMD_DEFINE_RESULT__ = function (exports, _lib, _commons, _fableCore, _react, _fableElmish, _reactDom) {
	    "use strict";
	
	    Object.defineProperty(exports, "__esModule", {
	        value: true
	    });
	    exports.App = exports.program = exports.Msg = exports.Model = exports.ReactToolbox = undefined;
	    exports.init = init;
	    exports.update = update;
	    exports.view = view;
	
	    var lib_1 = _interopRequireWildcard(_lib);
	
	    var commons_scss = _interopRequireWildcard(_commons);
	
	    var react = _interopRequireWildcard(_react);
	
	    var react_dom = _interopRequireWildcard(_reactDom);
	
	    function _interopRequireWildcard(obj) {
	        if (obj && obj.__esModule) {
	            return obj;
	        } else {
	            var newObj = {};
	
	            if (obj != null) {
	                for (var key in obj) {
	                    if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	                }
	            }
	
	            newObj.default = obj;
	            return newObj;
	        }
	    }
	
	    function _possibleConstructorReturn(self, call) {
	        if (!self) {
	            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	        }
	
	        return call && (typeof call === "object" || typeof call === "function") ? call : self;
	    }
	
	    function _inherits(subClass, superClass) {
	        if (typeof superClass !== "function" && superClass !== null) {
	            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	        }
	
	        subClass.prototype = Object.create(superClass && superClass.prototype, {
	            constructor: {
	                value: subClass,
	                enumerable: false,
	                writable: true,
	                configurable: true
	            }
	        });
	        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	    }
	
	    function _classCallCheck(instance, Constructor) {
	        if (!(instance instanceof Constructor)) {
	            throw new TypeError("Cannot call a class as a function");
	        }
	    }
	
	    var _createClass = function () {
	        function defineProperties(target, props) {
	            for (var i = 0; i < props.length; i++) {
	                var descriptor = props[i];
	                descriptor.enumerable = descriptor.enumerable || false;
	                descriptor.configurable = true;
	                if ("value" in descriptor) descriptor.writable = true;
	                Object.defineProperty(target, descriptor.key, descriptor);
	            }
	        }
	
	        return function (Constructor, protoProps, staticProps) {
	            if (protoProps) defineProperties(Constructor.prototype, protoProps);
	            if (staticProps) defineProperties(Constructor, staticProps);
	            return Constructor;
	        };
	    }();
	
	    var ReactToolbox = exports.ReactToolbox = function ($exports) {
	        var lib = $exports.lib = lib_1;
	        var styles = $exports.styles = commons_scss;
	
	        var AppBarProps = $exports.AppBarProps = function () {
	            function AppBarProps(caseName, fields) {
	                _classCallCheck(this, AppBarProps);
	
	                this.Case = caseName;
	                this.Fields = fields;
	            }
	
	            _createClass(AppBarProps, [{
	                key: "Equals",
	                value: function Equals(other) {
	                    return _fableCore.Util.equalsUnions(this, other);
	                }
	            }, {
	                key: "CompareTo",
	                value: function CompareTo(other) {
	                    return _fableCore.Util.compareUnions(this, other);
	                }
	            }]);
	
	            return AppBarProps;
	        }();
	
	        _fableCore.Util.setInterfaces(AppBarProps.prototype, ["FSharpUnion", "System.IEquatable", "System.IComparable", "Fable.Helpers.React.Props.IHTMLProp"], "Counter.ReactToolbox.AppBarProps");
	
	        return $exports;
	    }({});
	
	    var Model = exports.Model = function () {
	        function Model(count) {
	            _classCallCheck(this, Model);
	
	            this.count = count;
	        }
	
	        _createClass(Model, [{
	            key: "Equals",
	            value: function Equals(other) {
	                return _fableCore.Util.equalsRecords(this, other);
	            }
	        }, {
	            key: "CompareTo",
	            value: function CompareTo(other) {
	                return _fableCore.Util.compareRecords(this, other);
	            }
	        }]);
	
	        return Model;
	    }();
	
	    _fableCore.Util.setInterfaces(Model.prototype, ["FSharpRecord", "System.IEquatable", "System.IComparable"], "Counter.Model");
	
	    var Msg = exports.Msg = function () {
	        function Msg(caseName, fields) {
	            _classCallCheck(this, Msg);
	
	            this.Case = caseName;
	            this.Fields = fields;
	        }
	
	        _createClass(Msg, [{
	            key: "Equals",
	            value: function Equals(other) {
	                return _fableCore.Util.equalsUnions(this, other);
	            }
	        }, {
	            key: "CompareTo",
	            value: function CompareTo(other) {
	                return _fableCore.Util.compareUnions(this, other);
	            }
	        }]);
	
	        return Msg;
	    }();
	
	    _fableCore.Util.setInterfaces(Msg.prototype, ["FSharpUnion", "System.IEquatable", "System.IComparable"], "Counter.Msg");
	
	    function init() {
	        return new Model(0);
	    }
	
	    function update(msg, _arg1) {
	        return msg.Case === "Decrement" ? new Model(_arg1.count - 1) : new Model(_arg1.count + 1);
	    }
	
	    function view(_arg1, dispatch) {
	        var onClick = function onClick(msg) {
	            return ["onClick", function (_arg1_1) {
	                dispatch(msg);
	            }];
	        };
	
	        return react.createElement.apply(react, ["div", {}].concat([react.createElement.apply(react, ["AppBar", {
	            title: "Hello world"
	        }].concat([])), react.createElement.apply(react, ["button", _fableCore.Seq.fold(function (o, kv) {
	            o[kv[0]] = kv[1];
	            return o;
	        }, {}, [onClick(new Msg("Decrement", []))])].concat(["-"])), react.createElement.apply(react, ["div", {}].concat([String(_arg1.count)])), react.createElement.apply(react, ["button", _fableCore.Seq.fold(function (o, kv) {
	            o[kv[0]] = kv[1];
	            return o;
	        }, {}, [onClick(new Msg("Increment", []))])].concat(["+"]))]));
	    }
	
	    var program = exports.program = _fableElmish.ProgramModule.withConsoleTrace(_fableElmish.ProgramModule.mkSimple(function (arg00_) {
	        return init(arg00_);
	    }, function (msg) {
	        return function (arg10_) {
	            return update(msg, arg10_);
	        };
	    }));
	
	    var App = exports.App = function (_Component) {
	        _inherits(App, _Component);
	
	        function App() {
	            _classCallCheck(this, App);
	
	            var _this2 = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));
	
	            _this2.this = {
	                contents: null
	            };
	            var _this = _this2.this;
	            _this2.this.contents = _this2;
	            _this2.dispatch = _fableElmish.ProgramModule.run(function (state) {
	                _this2.safeState(state);
	            }, program);
	            _this2["init@73"] = 1;
	            return _this2;
	        }
	
	        _createClass(App, [{
	            key: "componentDidMount",
	            value: function componentDidMount() {
	                this.props = true;
	            }
	        }, {
	            key: "render",
	            value: function render() {
	                return view(this.state, this.dispatch);
	            }
	        }, {
	            key: "safeState",
	            value: function safeState(state) {
	                var matchValue = this.this.contents.props;
	
	                if (matchValue) {
	                    this.this.contents.setState(state);
	                } else {
	                    this.this.contents.state = state;
	                }
	            }
	        }]);
	
	        return App;
	    }(_react.Component);
	
	    _fableCore.Util.setInterfaces(App.prototype, [], "Counter.App");
	
	    react_dom.render(react.createElement.apply(react, [App, _fableCore.Util.toPlainJsObj()].concat([])), document.getElementsByClassName("counter")[0]);
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TimePicker = exports.Tooltip = exports.Table = exports.Switch = exports.Snackbar = exports.Slider = exports.Ripple = exports.ProgressBar = exports.Navigation = exports.Link = exports.Input = exports.Form = exports.FontIcon = exports.Dropdown = exports.Drawer = exports.Dialog = exports.DatePicker = exports.Checkbox = exports.Chip = exports.Avatar = exports.Autocomplete = exports.AppBar = undefined;
	
	var _button = __webpack_require__(2);
	
	Object.keys(_button).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _button[key];
	    }
	  });
	});
	
	var _card = __webpack_require__(196);
	
	Object.keys(_card).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _card[key];
	    }
	  });
	});
	
	var _layout = __webpack_require__(208);
	
	Object.keys(_layout).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _layout[key];
	    }
	  });
	});
	
	var _list = __webpack_require__(215);
	
	Object.keys(_list).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _list[key];
	    }
	  });
	});
	
	var _menu = __webpack_require__(233);
	
	Object.keys(_menu).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _menu[key];
	    }
	  });
	});
	
	var _radio = __webpack_require__(242);
	
	Object.keys(_radio).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _radio[key];
	    }
	  });
	});
	
	var _tabs = __webpack_require__(249);
	
	Object.keys(_tabs).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _tabs[key];
	    }
	  });
	});
	
	__webpack_require__(256);
	
	var _app_bar = __webpack_require__(355);
	
	var _app_bar2 = _interopRequireDefault(_app_bar);
	
	var _autocomplete = __webpack_require__(359);
	
	var _autocomplete2 = _interopRequireDefault(_autocomplete);
	
	var _avatar = __webpack_require__(203);
	
	var _avatar2 = _interopRequireDefault(_avatar);
	
	var _chip = __webpack_require__(363);
	
	var _chip2 = _interopRequireDefault(_chip);
	
	var _checkbox = __webpack_require__(216);
	
	var _checkbox2 = _interopRequireDefault(_checkbox);
	
	var _date_picker = __webpack_require__(371);
	
	var _date_picker2 = _interopRequireDefault(_date_picker);
	
	var _dialog = __webpack_require__(397);
	
	var _dialog2 = _interopRequireDefault(_dialog);
	
	var _drawer = __webpack_require__(405);
	
	var _drawer2 = _interopRequireDefault(_drawer);
	
	var _dropdown = __webpack_require__(409);
	
	var _dropdown2 = _interopRequireDefault(_dropdown);
	
	var _font_icon = __webpack_require__(252);
	
	var _font_icon2 = _interopRequireDefault(_font_icon);
	
	var _form = __webpack_require__(413);
	
	var _form2 = _interopRequireDefault(_form);
	
	var _input = __webpack_require__(366);
	
	var _input2 = _interopRequireDefault(_input);
	
	var _link = __webpack_require__(438);
	
	var _link2 = _interopRequireDefault(_link);
	
	var _navigation = __webpack_require__(442);
	
	var _navigation2 = _interopRequireDefault(_navigation);
	
	var _progress_bar = __webpack_require__(427);
	
	var _progress_bar2 = _interopRequireDefault(_progress_bar);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _slider = __webpack_require__(426);
	
	var _slider2 = _interopRequireDefault(_slider);
	
	var _snackbar = __webpack_require__(446);
	
	var _snackbar2 = _interopRequireDefault(_snackbar);
	
	var _switch = __webpack_require__(432);
	
	var _switch2 = _interopRequireDefault(_switch);
	
	var _table = __webpack_require__(450);
	
	var _table2 = _interopRequireDefault(_table);
	
	var _tooltip = __webpack_require__(456);
	
	var _tooltip2 = _interopRequireDefault(_tooltip);
	
	var _time_picker = __webpack_require__(435);
	
	var _time_picker2 = _interopRequireDefault(_time_picker);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.AppBar = _app_bar2.default; // Import polyfills for IE11
	
	exports.Autocomplete = _autocomplete2.default;
	exports.Avatar = _avatar2.default;
	exports.Chip = _chip2.default;
	exports.Checkbox = _checkbox2.default;
	exports.DatePicker = _date_picker2.default;
	exports.Dialog = _dialog2.default;
	exports.Drawer = _drawer2.default;
	exports.Dropdown = _dropdown2.default;
	exports.FontIcon = _font_icon2.default;
	exports.Form = _form2.default;
	exports.Input = _input2.default;
	exports.Link = _link2.default;
	exports.Navigation = _navigation2.default;
	exports.ProgressBar = _progress_bar2.default;
	exports.Ripple = _ripple2.default;
	exports.Slider = _slider2.default;
	exports.Snackbar = _snackbar2.default;
	exports.Switch = _switch2.default;
	exports.Table = _table2.default;
	exports.Tooltip = _tooltip2.default;
	exports.TimePicker = _time_picker2.default;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.IconButton = exports.Button = undefined;
	
	var _identifiers = __webpack_require__(3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _Button = __webpack_require__(42);
	
	var _IconButton = __webpack_require__(188);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _theme = __webpack_require__(194);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Button = (0, _Button.buttonFactory)((0, _ripple2.default)({ centered: false }), _FontIcon2.default);
	var IconButton = (0, _IconButton.iconButtonFactory)((0, _ripple2.default)({ centered: true }), _FontIcon2.default);
	var ThemedButton = (0, _reactCssThemr.themr)(_identifiers.BUTTON, _theme2.default)(Button);
	var ThemedIconButton = (0, _reactCssThemr.themr)(_identifiers.BUTTON, _theme2.default)(IconButton);
	
	exports.default = ThemedButton;
	exports.Button = ThemedButton;
	exports.IconButton = ThemedIconButton;

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var APP_BAR = exports.APP_BAR = 'RTAppBar';
	var AUTOCOMPLETE = exports.AUTOCOMPLETE = 'RTAutocomplete';
	var AVATAR = exports.AVATAR = 'RTAvatar';
	var BUTTON = exports.BUTTON = 'RTButton';
	var CARD = exports.CARD = 'RTCard';
	var CHIP = exports.CHIP = 'RTChip';
	var CHECKBOX = exports.CHECKBOX = 'RTCheckbox';
	var DATE_PICKER = exports.DATE_PICKER = 'RTDatePicker';
	var DIALOG = exports.DIALOG = 'RTDialog';
	var DROPDOWN = exports.DROPDOWN = 'RTDropdown';
	var INPUT = exports.INPUT = 'RTInput';
	var LAYOUT = exports.LAYOUT = 'RTLayout';
	var LINK = exports.LINK = 'RTLink';
	var LIST = exports.LIST = 'RTList';
	var MENU = exports.MENU = 'RTMenu';
	var NAVIGATION = exports.NAVIGATION = 'RTNavigation';
	var OVERLAY = exports.OVERLAY = 'RTOverlay';
	var PROGRESS_BAR = exports.PROGRESS_BAR = 'RTProgressBar';
	var RADIO = exports.RADIO = 'RTRadio';
	var RIPPLE = exports.RIPPLE = 'RTRipple';
	var SLIDER = exports.SLIDER = 'RTSlider';
	var SNACKBAR = exports.SNACKBAR = 'RTSnackbar';
	var SWITCH = exports.SWITCH = 'RTSwitch';
	var TABLE = exports.TABLE = 'RTTable';
	var TABS = exports.TABS = 'RTTabs';
	var TOOLTIP = exports.TOOLTIP = 'RTTooltip';
	var TIME_PICKER = exports.TIME_PICKER = 'RTTimePicker';

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ThemeProvider = __webpack_require__(5);
	
	Object.defineProperty(exports, 'ThemeProvider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ThemeProvider).default;
	  }
	});
	
	var _themr = __webpack_require__(40);
	
	Object.defineProperty(exports, 'themr', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_themr).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp;
	
	var _react = __webpack_require__(6);
	
	var _themrShape = __webpack_require__(39);
	
	var _themrShape2 = _interopRequireDefault(_themrShape);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ThemeProvider = (_temp = _class = function (_Component) {
	  _inherits(ThemeProvider, _Component);
	
	  function ThemeProvider() {
	    _classCallCheck(this, ThemeProvider);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ThemeProvider).apply(this, arguments));
	  }
	
	  _createClass(ThemeProvider, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        themr: {
	          theme: this.props.theme
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react.Children.only(this.props.children);
	    }
	  }]);
	
	  return ThemeProvider;
	}(_react.Component), _class.propTypes = {
	  children: _react.PropTypes.element.isRequired,
	  theme: _react.PropTypes.object.isRequired
	}, _class.defaultProps = {
	  theme: {}
	}, _class.childContextTypes = {
	  themr: _themrShape2.default.isRequired
	}, _temp);
	exports.default = ThemeProvider;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(7);


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var ReactChildren = __webpack_require__(10);
	var ReactComponent = __webpack_require__(22);
	var ReactPureComponent = __webpack_require__(25);
	var ReactClass = __webpack_require__(26);
	var ReactDOMFactories = __webpack_require__(31);
	var ReactElement = __webpack_require__(14);
	var ReactPropTypes = __webpack_require__(36);
	var ReactVersion = __webpack_require__(37);
	
	var onlyChild = __webpack_require__(38);
	var warning = __webpack_require__(16);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(32);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 8 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(11);
	var ReactElement = __webpack_require__(14);
	
	var emptyFunction = __webpack_require__(17);
	var traverseAllChildren = __webpack_require__(19);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 12 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var ReactCurrentOwner = __webpack_require__(15);
	
	var warning = __webpack_require__(16);
	var canDefineProperty = __webpack_require__(18);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(17);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 17 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactElement = __webpack_require__(14);
	
	var getIteratorFn = __webpack_require__(20);
	var invariant = __webpack_require__(13);
	var KeyEscapeUtils = __webpack_require__(21);
	var warning = __webpack_require__(16);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 20 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactNoopUpdateQueue = __webpack_require__(23);
	
	var canDefineProperty = __webpack_require__(18);
	var emptyObject = __webpack_require__(24);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(16);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var ReactComponent = __webpack_require__(22);
	var ReactNoopUpdateQueue = __webpack_require__(23);
	
	var emptyObject = __webpack_require__(24);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var ReactComponent = __webpack_require__(22);
	var ReactElement = __webpack_require__(14);
	var ReactPropTypeLocations = __webpack_require__(27);
	var ReactPropTypeLocationNames = __webpack_require__(29);
	var ReactNoopUpdateQueue = __webpack_require__(23);
	
	var emptyObject = __webpack_require__(24);
	var invariant = __webpack_require__(13);
	var keyMirror = __webpack_require__(28);
	var keyOf = __webpack_require__(30);
	var warning = __webpack_require__(16);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(28);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 30 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(14);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(32);
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactComponentTreeHook = __webpack_require__(33);
	var ReactElement = __webpack_require__(14);
	var ReactPropTypeLocations = __webpack_require__(27);
	
	var checkReactTypeSpec = __webpack_require__(34);
	
	var canDefineProperty = __webpack_require__(18);
	var getIteratorFn = __webpack_require__(20);
	var warning = __webpack_require__(16);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	    }
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeHook
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(15);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var itemMap;
	var rootIDSet;
	
	var itemByKey;
	var rootByKey;
	
	if (canUseCollections) {
	  itemMap = new Map();
	  rootIDSet = new Set();
	} else {
	  itemByKey = {};
	  rootByKey = {};
	}
	
	var unmountedIDs = [];
	
	// Use non-numeric keys to prevent V8 performance issues:
	// https://github.com/facebook/react/pull/7232
	function getKeyFromID(id) {
	  return '.' + id;
	}
	function getIDFromKey(key) {
	  return parseInt(key.substr(1), 10);
	}
	
	function get(id) {
	  if (canUseCollections) {
	    return itemMap.get(id);
	  } else {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  }
	}
	
	function remove(id) {
	  if (canUseCollections) {
	    itemMap['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  }
	}
	
	function create(id, element, parentID) {
	  var item = {
	    element: element,
	    parentID: parentID,
	    text: null,
	    childIDs: [],
	    isMounted: false,
	    updateCount: 0
	  };
	
	  if (canUseCollections) {
	    itemMap.set(id, item);
	  } else {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  }
	}
	
	function addRoot(id) {
	  if (canUseCollections) {
	    rootIDSet.add(id);
	  } else {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  }
	}
	
	function removeRoot(id) {
	  if (canUseCollections) {
	    rootIDSet['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  }
	}
	
	function getRegisteredIDs() {
	  if (canUseCollections) {
	    return Array.from(itemMap.keys());
	  } else {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  }
	}
	
	function getRootIDs() {
	  if (canUseCollections) {
	    return Array.from(rootIDSet.keys());
	  } else {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  }
	}
	
	function purgeDeep(id) {
	  var item = get(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    remove(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = get(id);
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = get(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent ID is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    create(id, element, parentID);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = get(id);
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = get(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = get(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = get(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = get(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = get(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = get(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = get(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRegisteredIDs: getRegisteredIDs,
	
	  getRootIDs: getRootIDs
	};
	
	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactPropTypeLocationNames = __webpack_require__(29);
	var ReactPropTypesSecret = __webpack_require__(35);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(33);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(33);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(14);
	var ReactPropTypeLocationNames = __webpack_require__(29);
	var ReactPropTypesSecret = __webpack_require__(35);
	
	var emptyFunction = __webpack_require__(17);
	var getIteratorFn = __webpack_require__(20);
	var warning = __webpack_require__(16);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;
	
	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 37 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '15.3.1';

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactElement = __webpack_require__(14);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(6);
	
	exports.default = _react.PropTypes.shape({
	  theme: _react.PropTypes.object.isRequired
	});

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(41);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var COMPOSE_DEEPLY = 'deeply';
	var COMPOSE_SOFTLY = 'softly';
	var DONT_COMPOSE = false;
	
	var DEFAULT_OPTIONS = {
	  composeTheme: COMPOSE_DEEPLY,
	  withRef: false
	};
	
	exports.default = function (componentName, localTheme) {
	  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	  return function (ThemedComponent) {
	    var _class, _temp;
	
	    var _DEFAULT_OPTIONS$opti = _extends({}, DEFAULT_OPTIONS, options);
	
	    var optionComposeTheme = _DEFAULT_OPTIONS$opti.composeTheme;
	    var optionWithRef = _DEFAULT_OPTIONS$opti.withRef;
	
	    validateComposeOption(optionComposeTheme);
	    return _temp = _class = function (_Component) {
	      _inherits(Themed, _Component);
	
	      function Themed() {
	        _classCallCheck(this, Themed);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Themed).apply(this, arguments));
	      }
	
	      _createClass(Themed, [{
	        key: 'getWrappedInstance',
	        value: function getWrappedInstance() {
	          (0, _invariant2.default)(optionWithRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the third argument of themr() call.');
	
	          return this.refs.wrappedInstance;
	        }
	      }, {
	        key: 'getThemeNotComposed',
	        value: function getThemeNotComposed() {
	          if (this.props.theme) return this.props.theme;
	          if (localTheme) return localTheme;
	          return this.getContextTheme();
	        }
	      }, {
	        key: 'getContextTheme',
	        value: function getContextTheme() {
	          return this.context.themr ? this.context.themr.theme[componentName] : {};
	        }
	      }, {
	        key: 'getTheme',
	        value: function getTheme() {
	          return this.props.composeTheme === COMPOSE_SOFTLY ? Object.assign({}, this.getContextTheme(), localTheme, this.props.theme) : themeable(themeable(this.getContextTheme(), localTheme), this.props.theme);
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var _props = this.props;
	          var composeTheme = _props.composeTheme;
	
	          var rest = _objectWithoutProperties(_props, ['composeTheme']);
	
	          var renderedElement = void 0;
	
	          if (optionWithRef) {
	            renderedElement = _react2.default.createElement(ThemedComponent, _extends({}, rest, {
	              ref: 'wrappedInstance',
	              theme: composeTheme ? this.getTheme() : this.getThemeNotComposed()
	            }));
	          } else {
	            renderedElement = _react2.default.createElement(ThemedComponent, _extends({}, rest, {
	              theme: composeTheme ? this.getTheme() : this.getThemeNotComposed()
	            }));
	          }
	
	          return renderedElement;
	        }
	      }]);
	
	      return Themed;
	    }(_react.Component), _class.displayName = 'Themed ' + ThemedComponent.name, _class.contextTypes = {
	      themr: _react.PropTypes.object
	    }, _class.propTypes = {
	      composeTheme: _react.PropTypes.oneOf([COMPOSE_DEEPLY, COMPOSE_SOFTLY, DONT_COMPOSE]),
	      theme: _react.PropTypes.object
	    }, _class.defaultProps = {
	      composeTheme: optionComposeTheme
	    }, _temp;
	  };
	};
	
	function themeable() {
	  var style = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var theme = arguments[1];
	
	  if (!theme) return style;
	  return [].concat(_toConsumableArray(Object.keys(theme)), _toConsumableArray(Object.keys(style))).reduce(function (result, key) {
	    return typeof theme[key] === 'string' && style[key] && theme[key].indexOf(style[key]) === -1 ? _extends({}, result, _defineProperty({}, key, style[key] + ' ' + theme[key])) : _extends({}, result, _defineProperty({}, key, theme[key] || style[key]));
	  }, {});
	}
	
	function validateComposeOption(composeTheme) {
	  if ([COMPOSE_DEEPLY, COMPOSE_SOFTLY, DONT_COMPOSE].indexOf(composeTheme) === -1) {
	    throw new Error('Invalid composeTheme option for react-css-themr. Valid composition options are ' + COMPOSE_DEEPLY + ', ' + COMPOSE_SOFTLY + ' and ' + DONT_COMPOSE + '. The given option was ' + composeTheme);
	  }
	}

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Button = exports.buttonFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(ripple, FontIcon) {
	  var Button = function (_Component) {
	    _inherits(Button, _Component);
	
	    function Button() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Button);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Button)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleMouseUp = function (event) {
	        _this.refs.button.blur();
	        if (_this.props.onMouseUp) _this.props.onMouseUp(event);
	      }, _this.handleMouseLeave = function (event) {
	        _this.refs.button.blur();
	        if (_this.props.onMouseLeave) _this.props.onMouseLeave(event);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Button, [{
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var _props = this.props;
	        var accent = _props.accent;
	        var children = _props.children;
	        var className = _props.className;
	        var flat = _props.flat;
	        var floating = _props.floating;
	        var href = _props.href;
	        var icon = _props.icon;
	        var inverse = _props.inverse;
	        var label = _props.label;
	        var mini = _props.mini;
	        var neutral = _props.neutral;
	        var primary = _props.primary;
	        var theme = _props.theme;
	        var raised = _props.raised;
	
	        var others = _objectWithoutProperties(_props, ['accent', 'children', 'className', 'flat', 'floating', 'href', 'icon', 'inverse', 'label', 'mini', 'neutral', 'primary', 'theme', 'raised']);
	
	        var element = href ? 'a' : 'button';
	        var level = primary ? 'primary' : accent ? 'accent' : 'neutral';
	        var shape = flat ? 'flat' : raised ? 'raised' : floating ? 'floating' : 'flat';
	
	        var classes = (0, _classnames3.default)(theme.button, [theme[shape]], (_classnames = {}, _defineProperty(_classnames, theme[level], neutral), _defineProperty(_classnames, theme.mini, mini), _defineProperty(_classnames, theme.inverse, inverse), _classnames), className);
	
	        var props = _extends({}, others, {
	          href: href,
	          ref: 'button',
	          className: classes,
	          disabled: this.props.disabled,
	          onMouseUp: this.handleMouseUp,
	          onMouseLeave: this.handleMouseLeave,
	          'data-react-toolbox': 'button'
	        });
	
	        return _react2.default.createElement(element, props, icon ? _react2.default.createElement(FontIcon, { className: theme.icon, value: icon }) : null, label, children);
	      }
	    }]);
	
	    return Button;
	  }(_react.Component);
	
	  Button.propTypes = {
	    accent: _react.PropTypes.bool,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    flat: _react.PropTypes.bool,
	    floating: _react.PropTypes.bool,
	    href: _react.PropTypes.string,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    inverse: _react.PropTypes.bool,
	    label: _react.PropTypes.string,
	    mini: _react.PropTypes.bool,
	    neutral: _react.PropTypes.bool,
	    onMouseLeave: _react.PropTypes.func,
	    onMouseUp: _react.PropTypes.func,
	    primary: _react.PropTypes.bool,
	    raised: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      accent: _react.PropTypes.string,
	      button: _react.PropTypes.string,
	      flat: _react.PropTypes.string,
	      floating: _react.PropTypes.string,
	      icon: _react.PropTypes.string,
	      inverse: _react.PropTypes.string,
	      mini: _react.PropTypes.string,
	      neutral: _react.PropTypes.string,
	      primary: _react.PropTypes.string,
	      raised: _react.PropTypes.string,
	      rippleWrapper: _react.PropTypes.string,
	      toggle: _react.PropTypes.string
	    }),
	    type: _react.PropTypes.string
	  };
	  Button.defaultProps = {
	    accent: false,
	    className: '',
	    flat: false,
	    floating: false,
	    mini: false,
	    neutral: true,
	    primary: false,
	    raised: false
	  };
	
	
	  return ripple(Button);
	};
	
	var Button = factory((0, _Ripple2.default)({ centered: false }), _FontIcon2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.BUTTON)(Button);
	exports.buttonFactory = factory;
	exports.Button = Button;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.FontIcon = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var FontIcon = function FontIcon(_ref) {
	  var children = _ref.children;
	  var className = _ref.className;
	  var value = _ref.value;
	
	  var other = _objectWithoutProperties(_ref, ['children', 'className', 'value']);
	
	  return _react2.default.createElement(
	    'span',
	    _extends({
	      'data-react-toolbox': 'font-icon',
	      className: (0, _classnames2.default)({ 'material-icons': typeof value === 'string' || typeof children === 'string' }, className)
	    }, other),
	    value,
	    children
	  );
	};
	
	FontIcon.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element])
	};
	
	FontIcon.defaultProps = {
	  className: ''
	};
	
	exports.default = FontIcon;
	exports.FontIcon = FontIcon;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(46);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _immutabilityHelper = __webpack_require__(184);
	
	var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _prefixer = __webpack_require__(186);
	
	var _prefixer2 = _interopRequireDefault(_prefixer);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var defaults = {
	  centered: false,
	  className: '',
	  multiple: true,
	  spread: 2,
	  theme: {}
	};
	
	var rippleFactory = function rippleFactory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  var _defaults$options = _extends({}, defaults, options);
	
	  var defaultCentered = _defaults$options.centered;
	  var defaultClassName = _defaults$options.className;
	  var defaultMultiple = _defaults$options.multiple;
	  var defaultSpread = _defaults$options.spread;
	  var defaultTheme = _defaults$options.theme;
	
	  var props = _objectWithoutProperties(_defaults$options, ['centered', 'className', 'multiple', 'spread', 'theme']);
	
	  return function (ComposedComponent) {
	    var RippledComponent = function (_Component) {
	      _inherits(RippledComponent, _Component);
	
	      function RippledComponent() {
	        var _Object$getPrototypeO;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, RippledComponent);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(RippledComponent)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	          ripples: {}
	        }, _this.handleMouseDown = function (event) {
	          if (_this.props.onMouseDown) _this.props.onMouseDown(event);
	          if (!_this.props.disabled) {
	            var _events$getMousePosit = _events2.default.getMousePosition(event);
	
	            var x = _events$getMousePosit.x;
	            var y = _events$getMousePosit.y;
	
	            _this.animateRipple(x, y, false);
	          }
	        }, _this.handleTouchStart = function (event) {
	          if (_this.props.onTouchStart) _this.props.onTouchStart(event);
	          if (!_this.props.disabled) {
	            var _events$getTouchPosit = _events2.default.getTouchPosition(event);
	
	            var x = _events$getTouchPosit.x;
	            var y = _events$getTouchPosit.y;
	
	            _this.animateRipple(x, y, true);
	          }
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	      }
	
	      _createClass(RippledComponent, [{
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps, prevState) {
	          // If a new ripple was just added, add a remove event listener to its animation
	          if (Object.keys(prevState.ripples).length < Object.keys(this.state.ripples).length) {
	            this.addRippleRemoveEventListener(this.getLastKey());
	          }
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          var _this2 = this;
	
	          // Remove document event listeners for ripple if they still exists
	          Object.keys(this.state.ripples).forEach(function (key) {
	            _this2.state.ripples[key].endRipple();
	          });
	        }
	
	        /**
	         * Add an event listener to the reference with given key so when the animation transition
	         * ends we can be sure that it finished and it can be safely removed from the state.
	         * This function is called whenever a new ripple is added to the component.
	         *
	         * @param {String} rippleKey Is the key of the ripple to add the event.
	         */
	
	      }, {
	        key: 'addRippleRemoveEventListener',
	        value: function addRippleRemoveEventListener(rippleKey) {
	          var self = this;
	          _events2.default.addEventListenerOnTransitionEnded(this.refs[rippleKey], function onOpacityEnd(e) {
	            if (e.propertyName === 'opacity') {
	              if (self.props.onRippleEnded) self.props.onRippleEnded(e);
	              _events2.default.removeEventListenerOnTransitionEnded(self.refs[rippleKey], onOpacityEnd);
	              self.setState({ ripples: _utils2.default.removeObjectKey(rippleKey, self.state.ripples) });
	            }
	          });
	        }
	
	        /**
	         * Start a ripple animation on an specific point with touch or mouse events. First
	         * decides if the animation should trigger. If the ripple is multiple or there is no
	         * ripple present, it creates a new key. If it's a simple ripple and already exists,
	         * it just restarts the current ripple. The animation happens in two state changes
	         * to allow triggering via css.
	         *
	         * @param {Number} x Coordinate X on the screen where animation should start
	         * @param {Number} y Coordinate Y on the screen where animation should start
	         * @param {Boolean} isTouch Use events from touch or mouse.
	         */
	
	      }, {
	        key: 'animateRipple',
	        value: function animateRipple(x, y, isTouch) {
	          var _this3 = this;
	
	          if (this.rippleShouldTrigger(isTouch)) {
	            (function () {
	              var _getDescriptor = _this3.getDescriptor(x, y);
	
	              var top = _getDescriptor.top;
	              var left = _getDescriptor.left;
	              var width = _getDescriptor.width;
	
	              var noRipplesActive = Object.keys(_this3.state.ripples).length === 0;
	              var key = _this3.props.rippleMultiple || noRipplesActive ? _this3.getNextKey() : _this3.getLastKey();
	              var endRipple = _this3.addRippleDeactivateEventListener(isTouch, key);
	              var initialState = { active: false, restarting: true, top: top, left: left, width: width, endRipple: endRipple };
	              var runningState = { active: true, restarting: false };
	              _this3.setState((0, _immutabilityHelper2.default)(_this3.state, { ripples: _defineProperty({}, key, { $set: initialState }) }), function () {
	                _this3.refs[key].offsetWidth; //eslint-disable-line no-unused-expressions
	                _this3.setState((0, _immutabilityHelper2.default)(_this3.state, { ripples: _defineProperty({}, key, { $merge: runningState }) }));
	              });
	            })();
	          }
	        }
	
	        /**
	         * Determine if a ripple should start depending if its a touch event. For mobile both
	         * touchStart and mouseDown are launched so in case is touch we should always trigger
	         * but if its not we should check if a touch was already triggered to decide.
	         *
	         * @param {Boolean} isTouch True in case a touch event triggered the ripple false otherwise.
	         * @return {Boolean} True in case the ripple should trigger or false if it shouldn't.
	         */
	
	      }, {
	        key: 'rippleShouldTrigger',
	        value: function rippleShouldTrigger(isTouch) {
	          var shouldStart = isTouch ? true : !this.touchCache;
	          this.touchCache = isTouch;
	          return shouldStart;
	        }
	
	        /**
	         * Find out a descriptor object for the ripple element being created depending on
	         * the position where the it was triggered and the component's dimensions.
	         *
	         * @param {Number} x Coordinate x in the viewport where ripple was triggered
	         * @param {Number} y Coordinate y in the viewport where ripple was triggered
	         * @return {Object} Descriptor element including position and size of the element
	         */
	
	      }, {
	        key: 'getDescriptor',
	        value: function getDescriptor(x, y) {
	          var _ReactDOM$findDOMNode = _reactDom2.default.findDOMNode(this).getBoundingClientRect();
	
	          var left = _ReactDOM$findDOMNode.left;
	          var top = _ReactDOM$findDOMNode.top;
	          var height = _ReactDOM$findDOMNode.height;
	          var width = _ReactDOM$findDOMNode.width;
	          var _props = this.props;
	          var centered = _props.rippleCentered;
	          var spread = _props.rippleSpread;
	
	          return {
	            left: centered ? 0 : x - left - width / 2,
	            top: centered ? 0 : y - top - height / 2,
	            width: width * spread
	          };
	        }
	
	        /**
	         * Increments and internal counter and returns the next value as a string. It
	         * is used to assign key references to new ripple elements.
	         *
	         * @return {String} Key to be assigned to a ripple.
	         */
	
	      }, {
	        key: 'getNextKey',
	        value: function getNextKey() {
	          this.currentCount = this.currentCount ? this.currentCount + 1 : 1;
	          return 'ripple' + this.currentCount;
	        }
	
	        /**
	         * Return the last generated key for a ripple element. When there is only one ripple
	         * and to get the reference when a ripple was just created.
	         *
	         * @return {String} The last generated ripple key.
	         */
	
	      }, {
	        key: 'getLastKey',
	        value: function getLastKey() {
	          return 'ripple' + this.currentCount;
	        }
	
	        /**
	         * Add an event listener to the document needed to deactivate a ripple and make it dissappear.
	         * Deactivation can happen with a touchend or mouseup depending on the trigger type. The
	         * ending function is created from a factory function and returned.
	         *
	         * @param {Boolean} isTouch True in case the trigger was a touch event false otherwise.
	         * @param {String} rippleKey It's a key to identify the ripple that should be deactivated.
	         * @return {Function} Callback function that deactivates the ripple and removes the event listener
	         */
	
	      }, {
	        key: 'addRippleDeactivateEventListener',
	        value: function addRippleDeactivateEventListener(isTouch, rippleKey) {
	          var eventType = isTouch ? 'touchend' : 'mouseup';
	          var endRipple = this.createRippleDeactivateCallback(eventType, rippleKey);
	          document.addEventListener(eventType, endRipple);
	          return endRipple;
	        }
	
	        /**
	         * Generates a function that can be called to deactivate a given ripple and remove its finishing
	         * event listener. If is generated because we need to store it to be called on unmount in case
	         * the ripple is still running.
	         *
	         * @param {String} eventType Is the event type that can be touchend or mouseup
	         * @param {String} rippleKey Is the key representing the ripple
	         * @return {Function} Callback function that deactivates the ripple and removes the listener
	         */
	
	      }, {
	        key: 'createRippleDeactivateCallback',
	        value: function createRippleDeactivateCallback(eventType, rippleKey) {
	          var self = this;
	          return function endRipple() {
	            document.removeEventListener(eventType, endRipple);
	            self.setState({ ripples: (0, _immutabilityHelper2.default)(self.state.ripples, _defineProperty({}, rippleKey, { $merge: { active: false } })) });
	          };
	        }
	      }, {
	        key: 'renderRipple',
	        value: function renderRipple(key, className, _ref) {
	          var _classnames;
	
	          var active = _ref.active;
	          var left = _ref.left;
	          var restarting = _ref.restarting;
	          var top = _ref.top;
	          var width = _ref.width;
	
	          var scale = restarting ? 0 : 1;
	          var transform = 'translate3d(' + (-width / 2 + left) + 'px, ' + (-width / 2 + top) + 'px, 0) scale(' + scale + ')';
	          var _className = (0, _classnames3.default)(this.props.theme.ripple, (_classnames = {}, _defineProperty(_classnames, this.props.theme.rippleActive, active), _defineProperty(_classnames, this.props.theme.rippleRestarting, restarting), _classnames), className);
	          return _react2.default.createElement(
	            'span',
	            _extends({ key: key, 'data-react-toolbox': 'ripple', className: this.props.theme.rippleWrapper }, props),
	            _react2.default.createElement('span', {
	              role: 'ripple',
	              ref: key,
	              className: _className,
	              style: (0, _prefixer2.default)({ transform: transform }, { width: width, height: width })
	            })
	          );
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var _this4 = this;
	
	          var ripples = this.state.ripples;
	          var _props2 = this.props;
	          var onRippleEnded = _props2.onRippleEnded;
	          var rippleCentered = _props2.rippleCentered;
	          var rippleMultiple = _props2.rippleMultiple;
	          var rippleSpread = _props2.rippleSpread;
	          var children = _props2.children;
	          var ripple = _props2.ripple;
	          var rippleClassName = _props2.rippleClassName;
	
	          var other = _objectWithoutProperties(_props2, ['onRippleEnded', 'rippleCentered', 'rippleMultiple', 'rippleSpread', 'children', 'ripple', 'rippleClassName']);
	
	          if (!ripple) return _react2.default.createElement(ComposedComponent, _extends({ children: children }, other));
	          return _react2.default.createElement(
	            ComposedComponent,
	            _extends({}, other, { onMouseDown: this.handleMouseDown, onTouchStart: this.handleTouchStart }),
	            children,
	            Object.keys(ripples).map(function (key) {
	              return _this4.renderRipple(key, rippleClassName, ripples[key]);
	            })
	          );
	        }
	      }]);
	
	      return RippledComponent;
	    }(_react.Component);
	
	    RippledComponent.propTypes = {
	      children: _react.PropTypes.any,
	      disabled: _react.PropTypes.bool,
	      onRippleEnded: _react.PropTypes.func,
	      ripple: _react.PropTypes.bool,
	      rippleCentered: _react.PropTypes.bool,
	      rippleClassName: _react.PropTypes.string,
	      rippleMultiple: _react.PropTypes.bool,
	      rippleSpread: _react.PropTypes.number,
	      theme: _react.PropTypes.shape({
	        ripple: _react.PropTypes.string,
	        rippleActive: _react.PropTypes.string,
	        rippleRestarting: _react.PropTypes.string,
	        rippleWrapper: _react.PropTypes.string
	      })
	    };
	    RippledComponent.defaultProps = {
	      disabled: false,
	      ripple: true,
	      rippleCentered: defaultCentered,
	      rippleClassName: defaultClassName,
	      rippleMultiple: defaultMultiple,
	      rippleSpread: defaultSpread
	    };
	
	
	    return (0, _reactCssThemr.themr)(_identifiers.RIPPLE, defaultTheme)(RippledComponent);
	  };
	};
	
	exports.default = rippleFactory;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(47);


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactDefaultInjection = __webpack_require__(51);
	var ReactMount = __webpack_require__(174);
	var ReactReconciler = __webpack_require__(71);
	var ReactUpdates = __webpack_require__(68);
	var ReactVersion = __webpack_require__(37);
	
	var findDOMNode = __webpack_require__(179);
	var getHostComponentFromComposite = __webpack_require__(180);
	var renderSubtreeIntoContainer = __webpack_require__(181);
	var warning = __webpack_require__(16);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(61);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(74);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(182);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(183);
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	}
	
	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var DOMProperty = __webpack_require__(49);
	var ReactDOMComponentFlags = __webpack_require__(50);
	
	var invariant = __webpack_require__(13);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 50 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(52);
	var ChangeEventPlugin = __webpack_require__(67);
	var DefaultEventPluginOrder = __webpack_require__(85);
	var EnterLeaveEventPlugin = __webpack_require__(86);
	var HTMLDOMPropertyConfig = __webpack_require__(91);
	var ReactComponentBrowserEnvironment = __webpack_require__(92);
	var ReactDOMComponent = __webpack_require__(106);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactDOMEmptyComponent = __webpack_require__(145);
	var ReactDOMTreeTraversal = __webpack_require__(146);
	var ReactDOMTextComponent = __webpack_require__(147);
	var ReactDefaultBatchingStrategy = __webpack_require__(148);
	var ReactEventListener = __webpack_require__(149);
	var ReactInjection = __webpack_require__(152);
	var ReactReconcileTransaction = __webpack_require__(153);
	var SVGDOMPropertyConfig = __webpack_require__(161);
	var SelectEventPlugin = __webpack_require__(162);
	var SimpleEventPlugin = __webpack_require__(163);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(53);
	var EventPropagators = __webpack_require__(54);
	var ExecutionEnvironment = __webpack_require__(61);
	var FallbackCompositionState = __webpack_require__(62);
	var SyntheticCompositionEvent = __webpack_require__(64);
	var SyntheticInputEvent = __webpack_require__(66);
	
	var keyOf = __webpack_require__(30);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(28);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(53);
	var EventPluginHub = __webpack_require__(55);
	var EventPluginUtils = __webpack_require__(57);
	
	var accumulateInto = __webpack_require__(59);
	var forEachAccumulated = __webpack_require__(60);
	var warning = __webpack_require__(16);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var EventPluginRegistry = __webpack_require__(56);
	var EventPluginUtils = __webpack_require__(57);
	var ReactErrorUtils = __webpack_require__(58);
	
	var accumulateInto = __webpack_require__(59);
	var forEachAccumulated = __webpack_require__(60);
	var invariant = __webpack_require__(13);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var EventConstants = __webpack_require__(53);
	var ReactErrorUtils = __webpack_require__(58);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var PooledClass = __webpack_require__(11);
	
	var getTextContentAccessor = __webpack_require__(63);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(65);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var PooledClass = __webpack_require__(11);
	
	var emptyFunction = __webpack_require__(17);
	var warning = __webpack_require__(16);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(65);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(53);
	var EventPluginHub = __webpack_require__(55);
	var EventPropagators = __webpack_require__(54);
	var ExecutionEnvironment = __webpack_require__(61);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactUpdates = __webpack_require__(68);
	var SyntheticEvent = __webpack_require__(65);
	
	var getEventTarget = __webpack_require__(82);
	var isEventSupported = __webpack_require__(83);
	var isTextInputElement = __webpack_require__(84);
	var keyOf = __webpack_require__(30);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var CallbackQueue = __webpack_require__(69);
	var PooledClass = __webpack_require__(11);
	var ReactFeatureFlags = __webpack_require__(70);
	var ReactReconciler = __webpack_require__(71);
	var Transaction = __webpack_require__(81);
	
	var invariant = __webpack_require__(13);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var PooledClass = __webpack_require__(11);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	_assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },
	
	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 70 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(72);
	var ReactInstrumentation = __webpack_require__(74);
	
	var warning = __webpack_require__(16);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(73);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */
	
	'use strict';
	
	var debugTool = null;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(75);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningHook = __webpack_require__(76);
	var ReactHostOperationHistoryHook = __webpack_require__(77);
	var ReactComponentTreeHook = __webpack_require__(33);
	var ReactChildrenMutationWarningHook = __webpack_require__(78);
	var ExecutionEnvironment = __webpack_require__(61);
	
	var performanceNow = __webpack_require__(79);
	var warning = __webpack_require__(16);
	
	var hooks = [];
	var didHookThrowForEvent = {};
	
	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}
	
	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;
	
	var lifeCycleTimerHasWarned = false;
	
	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  var allowRoot = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	
	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();
	
	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onError: function (debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	ReactDebugTool.addHook(ReactChildrenMutationWarningHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningHook
	 */
	
	'use strict';
	
	var warning = __webpack_require__(16);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryHook
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildrenMutationWarningHook
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(33);
	
	var warning = __webpack_require__(16);
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element._shadowChildren === undefined) {
	    return;
	  }
	  if (element._shadowChildren === element.props.children) {
	    return;
	  }
	  var isMutated = false;
	  if (Array.isArray(element._shadowChildren)) {
	    if (element._shadowChildren.length === element.props.children.length) {
	      for (var i = 0; i < element._shadowChildren.length; i++) {
	        if (element._shadowChildren[i] !== element.props.children[i]) {
	          isMutated = true;
	        }
	      }
	    } else {
	      isMutated = true;
	    }
	  }
	  if (!Array.isArray(element._shadowChildren) || isMutated) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Component\'s children should not be mutated.%s', ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}
	
	var ReactChildrenMutationWarningHook = {
	  onMountComponent: function (debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  },
	  onUpdateComponent: function (debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  }
	};
	
	module.exports = ReactChildrenMutationWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(80);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(30);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(53);
	var EventPropagators = __webpack_require__(54);
	var ReactDOMComponentTree = __webpack_require__(48);
	var SyntheticMouseEvent = __webpack_require__(87);
	
	var keyOf = __webpack_require__(30);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(88);
	var ViewportMetrics = __webpack_require__(89);
	
	var getEventModifierState = __webpack_require__(90);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(65);
	
	var getEventTarget = __webpack_require__(82);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 89 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 90 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(93);
	var ReactDOMIDOperations = __webpack_require__(105);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(94);
	var Danger = __webpack_require__(100);
	var ReactMultiChildUpdateTypes = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactInstrumentation = __webpack_require__(74);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(97);
	var setInnerHTML = __webpack_require__(96);
	var setTextContent = __webpack_require__(98);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(95);
	var setInnerHTML = __webpack_require__(96);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(97);
	var setTextContent = __webpack_require__(98);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 95 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	var DOMNamespaces = __webpack_require__(95);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(97);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	var escapeTextContentForBrowser = __webpack_require__(99);
	var setInnerHTML = __webpack_require__(96);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 99 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var DOMLazyTree = __webpack_require__(94);
	var ExecutionEnvironment = __webpack_require__(61);
	
	var createNodesFromMarkup = __webpack_require__(101);
	var emptyFunction = __webpack_require__(17);
	var invariant = __webpack_require__(13);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var createArrayFromMixed = __webpack_require__(102);
	var getMarkupWrap = __webpack_require__(103);
	var invariant = __webpack_require__(13);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(28);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(48);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var AutoFocusUtils = __webpack_require__(107);
	var CSSPropertyOperations = __webpack_require__(109);
	var DOMLazyTree = __webpack_require__(94);
	var DOMNamespaces = __webpack_require__(95);
	var DOMProperty = __webpack_require__(49);
	var DOMPropertyOperations = __webpack_require__(117);
	var EventConstants = __webpack_require__(53);
	var EventPluginHub = __webpack_require__(55);
	var EventPluginRegistry = __webpack_require__(56);
	var ReactBrowserEventEmitter = __webpack_require__(119);
	var ReactDOMButton = __webpack_require__(122);
	var ReactDOMComponentFlags = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactDOMInput = __webpack_require__(124);
	var ReactDOMOption = __webpack_require__(126);
	var ReactDOMSelect = __webpack_require__(127);
	var ReactDOMTextarea = __webpack_require__(128);
	var ReactInstrumentation = __webpack_require__(74);
	var ReactMultiChild = __webpack_require__(129);
	var ReactServerRenderingTransaction = __webpack_require__(141);
	
	var emptyFunction = __webpack_require__(17);
	var escapeTextContentForBrowser = __webpack_require__(99);
	var invariant = __webpack_require__(13);
	var isEventSupported = __webpack_require__(83);
	var keyOf = __webpack_require__(30);
	var shallowEqual = __webpack_require__(136);
	var validateDOMNesting = __webpack_require__(144);
	var warning = __webpack_require__(16);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(48);
	
	var focusNode = __webpack_require__(108);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 108 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(110);
	var ExecutionEnvironment = __webpack_require__(61);
	var ReactInstrumentation = __webpack_require__(74);
	
	var camelizeStyleName = __webpack_require__(111);
	var dangerousStyleValue = __webpack_require__(113);
	var hyphenateStyleName = __webpack_require__(114);
	var memoizeStringOnly = __webpack_require__(116);
	var warning = __webpack_require__(16);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(112);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 112 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(110);
	var warning = __webpack_require__(16);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(115);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 115 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 116 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactInstrumentation = __webpack_require__(74);
	
	var quoteAttributeValueForBrowser = __webpack_require__(118);
	var warning = __webpack_require__(16);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(99);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var EventConstants = __webpack_require__(53);
	var EventPluginRegistry = __webpack_require__(56);
	var ReactEventEmitterMixin = __webpack_require__(120);
	var ViewportMetrics = __webpack_require__(89);
	
	var getVendorPrefixedEventName = __webpack_require__(121);
	var isEventSupported = __webpack_require__(83);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(55);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var DisabledInputUtils = __webpack_require__(123);
	
	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 123 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */
	
	'use strict';
	
	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }
	
	    return hostProps;
	  }
	};
	
	module.exports = DisabledInputUtils;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var DisabledInputUtils = __webpack_require__(123);
	var DOMPropertyOperations = __webpack_require__(117);
	var LinkedValueUtils = __webpack_require__(125);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactUpdates = __webpack_require__(68);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactPropTypes = __webpack_require__(36);
	var ReactPropTypeLocations = __webpack_require__(27);
	var ReactPropTypesSecret = __webpack_require__(35);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var ReactChildren = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactDOMSelect = __webpack_require__(127);
	
	var warning = __webpack_require__(16);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var DisabledInputUtils = __webpack_require__(123);
	var LinkedValueUtils = __webpack_require__(125);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactUpdates = __webpack_require__(68);
	
	var warning = __webpack_require__(16);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var DisabledInputUtils = __webpack_require__(123);
	var LinkedValueUtils = __webpack_require__(125);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactUpdates = __webpack_require__(68);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactComponentEnvironment = __webpack_require__(130);
	var ReactInstanceMap = __webpack_require__(131);
	var ReactInstrumentation = __webpack_require__(74);
	var ReactMultiChildUpdateTypes = __webpack_require__(104);
	
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactReconciler = __webpack_require__(71);
	var ReactChildReconciler = __webpack_require__(132);
	
	var emptyFunction = __webpack_require__(17);
	var flattenChildren = __webpack_require__(140);
	var invariant = __webpack_require__(13);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(71);
	
	var instantiateReactComponent = __webpack_require__(133);
	var KeyEscapeUtils = __webpack_require__(21);
	var shouldUpdateReactComponent = __webpack_require__(137);
	var traverseAllChildren = __webpack_require__(19);
	var warning = __webpack_require__(16);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(33);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(33);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var ReactCompositeComponent = __webpack_require__(134);
	var ReactEmptyComponent = __webpack_require__(138);
	var ReactHostComponent = __webpack_require__(139);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	var nextDebugID = 1;
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var ReactComponentEnvironment = __webpack_require__(130);
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactElement = __webpack_require__(14);
	var ReactErrorUtils = __webpack_require__(58);
	var ReactInstanceMap = __webpack_require__(131);
	var ReactInstrumentation = __webpack_require__(74);
	var ReactNodeTypes = __webpack_require__(135);
	var ReactPropTypeLocations = __webpack_require__(27);
	var ReactReconciler = __webpack_require__(71);
	
	var checkReactTypeSpec = __webpack_require__(34);
	var emptyObject = __webpack_require__(24);
	var invariant = __webpack_require__(13);
	var shallowEqual = __webpack_require__(136);
	var shouldUpdateReactComponent = __webpack_require__(137);
	var warning = __webpack_require__(16);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}
	
	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var selfDebugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      selfDebugID = this._debugID;
	    }
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), selfDebugID);
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (process.env.NODE_ENV !== 'production') {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = this._debugID;
	      }
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), selfDebugID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactElement = __webpack_require__(14);
	
	var invariant = __webpack_require__(13);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 137 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 138 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var invariant = __webpack_require__(13);
	
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(21);
	var traverseAllChildren = __webpack_require__(19);
	var warning = __webpack_require__(16);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(33);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(33);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var PooledClass = __webpack_require__(11);
	var Transaction = __webpack_require__(81);
	var ReactInstrumentation = __webpack_require__(74);
	var ReactServerUpdateQueue = __webpack_require__(142);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(143);
	var Transaction = __webpack_require__(81);
	var warning = __webpack_require__(16);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */
	
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactInstanceMap = __webpack_require__(131);
	var ReactInstrumentation = __webpack_require__(74);
	var ReactUpdates = __webpack_require__(68);
	
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var emptyFunction = __webpack_require__(17);
	var warning = __webpack_require__(16);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var DOMLazyTree = __webpack_require__(94);
	var ReactDOMComponentTree = __webpack_require__(48);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var invariant = __webpack_require__(13);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12),
	    _assign = __webpack_require__(9);
	
	var DOMChildrenOperations = __webpack_require__(93);
	var DOMLazyTree = __webpack_require__(94);
	var ReactDOMComponentTree = __webpack_require__(48);
	
	var escapeTextContentForBrowser = __webpack_require__(99);
	var invariant = __webpack_require__(13);
	var validateDOMNesting = __webpack_require__(144);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var ReactUpdates = __webpack_require__(68);
	var Transaction = __webpack_require__(81);
	
	var emptyFunction = __webpack_require__(17);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var EventListener = __webpack_require__(150);
	var ExecutionEnvironment = __webpack_require__(61);
	var PooledClass = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactUpdates = __webpack_require__(68);
	
	var getEventTarget = __webpack_require__(82);
	var getUnboundedScrollPosition = __webpack_require__(151);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(17);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 151 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var EventPluginHub = __webpack_require__(55);
	var EventPluginUtils = __webpack_require__(57);
	var ReactComponentEnvironment = __webpack_require__(130);
	var ReactClass = __webpack_require__(26);
	var ReactEmptyComponent = __webpack_require__(138);
	var ReactBrowserEventEmitter = __webpack_require__(119);
	var ReactHostComponent = __webpack_require__(139);
	var ReactUpdates = __webpack_require__(68);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var CallbackQueue = __webpack_require__(69);
	var PooledClass = __webpack_require__(11);
	var ReactBrowserEventEmitter = __webpack_require__(119);
	var ReactInputSelection = __webpack_require__(154);
	var ReactInstrumentation = __webpack_require__(74);
	var Transaction = __webpack_require__(81);
	var ReactUpdateQueue = __webpack_require__(143);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(155);
	
	var containsNode = __webpack_require__(157);
	var focusNode = __webpack_require__(108);
	var getActiveElement = __webpack_require__(160);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var getNodeForCharacterOffset = __webpack_require__(156);
	var getTextContentAccessor = __webpack_require__(63);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(158);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(159);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 159 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 160 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 161 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(53);
	var EventPropagators = __webpack_require__(54);
	var ExecutionEnvironment = __webpack_require__(61);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactInputSelection = __webpack_require__(154);
	var SyntheticEvent = __webpack_require__(65);
	
	var getActiveElement = __webpack_require__(160);
	var isTextInputElement = __webpack_require__(84);
	var keyOf = __webpack_require__(30);
	var shallowEqual = __webpack_require__(136);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var EventConstants = __webpack_require__(53);
	var EventListener = __webpack_require__(150);
	var EventPropagators = __webpack_require__(54);
	var ReactDOMComponentTree = __webpack_require__(48);
	var SyntheticAnimationEvent = __webpack_require__(164);
	var SyntheticClipboardEvent = __webpack_require__(165);
	var SyntheticEvent = __webpack_require__(65);
	var SyntheticFocusEvent = __webpack_require__(166);
	var SyntheticKeyboardEvent = __webpack_require__(167);
	var SyntheticMouseEvent = __webpack_require__(87);
	var SyntheticDragEvent = __webpack_require__(170);
	var SyntheticTouchEvent = __webpack_require__(171);
	var SyntheticTransitionEvent = __webpack_require__(172);
	var SyntheticUIEvent = __webpack_require__(88);
	var SyntheticWheelEvent = __webpack_require__(173);
	
	var emptyFunction = __webpack_require__(17);
	var getEventCharCode = __webpack_require__(168);
	var invariant = __webpack_require__(13);
	var keyOf = __webpack_require__(30);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(65);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(65);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(88);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(88);
	
	var getEventCharCode = __webpack_require__(168);
	var getEventKey = __webpack_require__(169);
	var getEventModifierState = __webpack_require__(90);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 168 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(168);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(87);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(88);
	
	var getEventModifierState = __webpack_require__(90);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(65);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(87);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var DOMLazyTree = __webpack_require__(94);
	var DOMProperty = __webpack_require__(49);
	var ReactBrowserEventEmitter = __webpack_require__(119);
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactDOMContainerInfo = __webpack_require__(175);
	var ReactDOMFeatureFlags = __webpack_require__(176);
	var ReactElement = __webpack_require__(14);
	var ReactFeatureFlags = __webpack_require__(70);
	var ReactInstanceMap = __webpack_require__(131);
	var ReactInstrumentation = __webpack_require__(74);
	var ReactMarkupChecksum = __webpack_require__(177);
	var ReactReconciler = __webpack_require__(71);
	var ReactUpdateQueue = __webpack_require__(143);
	var ReactUpdates = __webpack_require__(68);
	
	var emptyObject = __webpack_require__(24);
	var instantiateReactComponent = __webpack_require__(133);
	var invariant = __webpack_require__(13);
	var setInnerHTML = __webpack_require__(96);
	var shouldUpdateReactComponent = __webpack_require__(137);
	var warning = __webpack_require__(16);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(144);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 176 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(178);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 178 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(12);
	
	var ReactCurrentOwner = __webpack_require__(15);
	var ReactDOMComponentTree = __webpack_require__(48);
	var ReactInstanceMap = __webpack_require__(131);
	
	var getHostComponentFromComposite = __webpack_require__(180);
	var invariant = __webpack_require__(13);
	var warning = __webpack_require__(16);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(135);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(174);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyHook
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var EventPluginRegistry = __webpack_require__(56);
	var ReactComponentTreeHook = __webpack_require__(33);
	
	var warning = __webpack_require__(16);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropHook
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(33);
	
	var warning = __webpack_require__(16);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var invariant = __webpack_require__(41);
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var splice = Array.prototype.splice;
	
	function assign(target, source) {
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      target[key] = source[key];
	    }
	  }
	  return target;
	}
	
	function copy(object) {
	  if (object instanceof Array) {
	    return object.slice();
	  } else if (object && typeof object === 'object') {
	    return assign(new object.constructor(), object);
	  } else {
	    return object;
	  }
	}
	
	
	function newContext() {
	  var commands = assign({}, defaultCommands);
	  update.extend = function(directive, fn) {
	    commands[directive] = fn;
	  }
	
	  return update;
	
	  function update(object, spec) {
	    invariant(
	      typeof spec === 'object',
	      'update(): You provided a key path to update() that did not contain one ' +
	      'of %s. Did you forget to include {%s: ...}?',
	      Object.keys(commands).join(', '),
	      '$set'
	    );
	
	    var newObject = object;
	    for (var key in spec) {
	      if (hasOwnProperty.call(commands, key)) {
	        return commands[key](spec[key], newObject, spec, object);
	      }
	    }
	    for (var key in spec) {
	      var nextValueForKey = update(object[key], spec[key]);
	      if (nextValueForKey === object[key]) {
	        continue;
	      }
	      if (newObject === object) {
	        newObject = copy(object);
	      }
	      newObject[key] = nextValueForKey;
	    }
	    return newObject;
	  }
	
	}
	
	var defaultCommands = {
	  $push: function(value, original, spec) {
	    invariantPushAndUnshift(original, spec, '$push');
	    return original.concat(value);
	  },
	  $unshift: function(value, original, spec) {
	    invariantPushAndUnshift(original, spec, '$unshift');
	    return value.concat(original);
	  },
	  $splice: function(value, newObject, spec, object) {
	    var originalValue = newObject === object ? copy(object) : newObject;
	    invariantSplices(originalValue, spec);
	    value.forEach(function(args) {
	      invariantSplice(args);
	      splice.apply(originalValue, args);
	    });
	    return originalValue;
	  },
	  $set: function(value, original, spec) {
	    invariantSet(spec);
	    return value;
	  },
	  $merge: function(value, newObject, spec, object) {
	    var originalValue = newObject === object ? copy(object) : newObject;
	    invariantMerge(originalValue, value);
	    Object.keys(value).forEach(function(key) {
	      originalValue[key] = value[key];
	    });
	    return originalValue;
	  },
	  $apply: function(value, original) {
	    invariantApply(value);
	    return value(original);
	  }
	};
	
	
	
	module.exports = newContext();
	module.exports.newContext = newContext;
	
	
	// invariants
	
	function invariantPushAndUnshift(value, spec, command) {
	  invariant(
	    Array.isArray(value),
	    'update(): expected target of %s to be an array; got %s.',
	    command,
	    value
	  );
	  var specValue = spec[command];
	  invariant(
	    Array.isArray(specValue),
	    'update(): expected spec of %s to be an array; got %s. ' +
	    'Did you forget to wrap your parameter in an array?',
	    command,
	    specValue
	  );
	}
	
	function invariantSplices(value, spec) {
	  invariant(
	    Array.isArray(value),
	    'Expected $splice target to be an array; got %s',
	    value
	  );
	  invariantSplice(spec['$splice']);
	}
	
	function invariantSplice(value) {
	  invariant(
	    Array.isArray(value),
	    'update(): expected spec of $splice to be an array of arrays; got %s. ' +
	    'Did you forget to wrap your parameters in an array?',
	    value
	  );
	}
	
	function invariantApply(fn) {
	  invariant(
	    typeof fn === 'function',
	    'update(): expected spec of $apply to be a function; got %s.',
	    fn
	  );
	}
	
	function invariantSet(spec) {
	  invariant(
	    Object.keys(spec).length === 1,
	    'Cannot have more than one key in an object with $set'
	  );
	}
	
	function invariantMerge(target, specValue) {
	  invariant(
	    specValue && typeof specValue === 'object',
	    'update(): $merge expects a spec of type \'object\'; got %s',
	    specValue
	  );
	  invariant(
	    target && typeof target === 'object',
	    'update(): $merge expects a target of type \'object\'; got %s',
	    target
	  );
	}


/***/ },
/* 185 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  getMousePosition: function getMousePosition(event) {
	    return {
	      x: event.pageX - (window.scrollX || window.pageXOffset),
	      y: event.pageY - (window.scrollY || window.pageYOffset)
	    };
	  },
	  getTouchPosition: function getTouchPosition(event) {
	    return {
	      x: event.touches[0].pageX - (window.scrollX || window.pageXOffset),
	      y: event.touches[0].pageY - (window.scrollY || window.pageYOffset)
	    };
	  },
	  pauseEvent: function pauseEvent(event) {
	    event.stopPropagation();
	    event.preventDefault();
	  },
	  addEventsToDocument: function addEventsToDocument(eventMap) {
	    for (var key in eventMap) {
	      document.addEventListener(key, eventMap[key], false);
	    }
	  },
	  removeEventsFromDocument: function removeEventsFromDocument(eventMap) {
	    for (var key in eventMap) {
	      document.removeEventListener(key, eventMap[key], false);
	    }
	  },
	  targetIsDescendant: function targetIsDescendant(event, parent) {
	    var node = event.target;
	    while (node !== null) {
	      if (node === parent) return true;
	      node = node.parentNode;
	    }
	    return false;
	  },
	  addEventListenerOnTransitionEnded: function addEventListenerOnTransitionEnded(element, fn) {
	    var eventName = transitionEventNamesFor(element);
	    if (!eventName) return false;
	    element.addEventListener(eventName, fn);
	    return true;
	  },
	  removeEventListenerOnTransitionEnded: function removeEventListenerOnTransitionEnded(element, fn) {
	    var eventName = transitionEventNamesFor(element);
	    if (!eventName) return false;
	    element.removeEventListener(eventName, fn);
	    return true;
	  }
	};
	
	
	var TRANSITIONS = {
	  'transition': 'transitionend',
	  'OTransition': 'oTransitionEnd',
	  'MozTransition': 'transitionend',
	  'WebkitTransition': 'webkitTransitionEnd'
	};
	
	function transitionEventNamesFor(element) {
	  for (var transition in TRANSITIONS) {
	    if (element.style[transition] !== undefined) {
	      return TRANSITIONS[transition];
	    }
	  }
	}

/***/ },
/* 186 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var WEBKIT = 'Webkit';
	var MICROSOFT = 'Ms';
	
	var properties = {
	  transform: [WEBKIT, MICROSOFT]
	};
	
	function capitalize(string) {
	  return string.charAt(0).toUpperCase() + string.substr(1);
	}
	
	function getPrefixes(property, value) {
	  return properties[property].reduce(function (acc, item) {
	    acc['' + item + capitalize(property)] = value;
	    return acc;
	  }, {});
	}
	
	function addPrefixesTo(style, property, value) {
	  var vendor = getPrefixes(property, value);
	  for (var prefix in vendor) {
	    style[prefix] = vendor[prefix];
	  }
	
	  return style;
	}
	
	function prefixer(style) {
	  var defaultValue = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	  var _style = defaultValue;
	  for (var property in style) {
	    _style[property] = style[property];
	    if (properties[property]) {
	      addPrefixesTo(_style, property, style[property]);
	    }
	  }
	
	  return _style;
	}
	
	exports.default = prefixer;

/***/ },
/* 187 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  angleFromPositions: function angleFromPositions(cx, cy, ex, ey) {
	    var theta = Math.atan2(ey - cy, ex - cx) + Math.PI / 2;
	    return theta * 180 / Math.PI;
	  },
	  angle360FromPositions: function angle360FromPositions(cx, cy, ex, ey) {
	    var angle = this.angleFromPositions(cx, cy, ex, ey);
	    return angle < 0 ? 360 + angle : angle;
	  },
	  range: function range() {
	    var start = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
	    var stop = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
	    var step = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
	    var _start = 0;
	    var _stop = start;
	
	    if (stop !== null) {
	      _start = start;
	      _stop = stop;
	    }
	    var length = Math.max(Math.ceil((_stop - _start) / step), 0);
	    var range = Array(length);
	
	    for (var idx = 0; idx < length; idx++, _start += step) {
	      range[idx] = _start;
	    }
	
	    return range;
	  },
	  round: function round(number, decimals) {
	    if (!isNaN(parseFloat(number)) && isFinite(number)) {
	      var decimalPower = Math.pow(10, decimals);
	      return Math.round(parseFloat(number) * decimalPower) / decimalPower;
	    }
	    return NaN;
	  },
	  getViewport: function getViewport() {
	    return {
	      height: window.innerHeight || document.documentElement.offsetHeight,
	      width: window.innerWidth || document.documentElement.offsetWidth
	    };
	  },
	  cloneObject: function cloneObject(object) {
	    return JSON.parse(JSON.stringify(object));
	  },
	  inputTypeForPrototype: function inputTypeForPrototype(prototype) {
	    if (prototype === Date) return 'date';
	    if (prototype === Number) return 'number';
	    if (prototype === Boolean) return 'checkbox';
	    return 'text';
	  },
	  prepareValueForInput: function prepareValueForInput(value, type) {
	    if (type === 'date') return new Date(value).toISOString().slice(0, 10);
	    if (type === 'checkbox') {
	      return value ? 'on' : '';
	    }
	    return value;
	  },
	  removeObjectKey: function removeObjectKey(key, object) {
	    var newObject = {};
	    Object.keys(object).filter(function (k) {
	      return k !== key;
	    }).forEach(function (k) {
	      newObject[k] = object[k];
	    });
	    return newObject;
	  }
	};

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.IconButton = exports.iconButtonFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(ripple, FontIcon) {
	  var IconButton = function (_Component) {
	    _inherits(IconButton, _Component);
	
	    function IconButton() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, IconButton);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(IconButton)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleMouseUp = function (event) {
	        _this.refs.button.blur();
	        if (_this.props.onMouseUp) _this.props.onMouseUp(event);
	      }, _this.handleMouseLeave = function (event) {
	        _this.refs.button.blur();
	        if (_this.props.onMouseLeave) _this.props.onMouseLeave(event);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(IconButton, [{
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var _props = this.props;
	        var accent = _props.accent;
	        var children = _props.children;
	        var className = _props.className;
	        var href = _props.href;
	        var icon = _props.icon;
	        var inverse = _props.inverse;
	        var neutral = _props.neutral;
	        var primary = _props.primary;
	        var theme = _props.theme;
	
	        var others = _objectWithoutProperties(_props, ['accent', 'children', 'className', 'href', 'icon', 'inverse', 'neutral', 'primary', 'theme']);
	
	        var element = href ? 'a' : 'button';
	        var level = primary ? 'primary' : accent ? 'accent' : 'neutral';
	        var classes = (0, _classnames3.default)([theme.toggle], (_classnames = {}, _defineProperty(_classnames, theme[level], neutral), _defineProperty(_classnames, theme.inverse, inverse), _classnames), className);
	
	        var props = _extends({}, others, {
	          href: href,
	          ref: 'button',
	          className: classes,
	          disabled: this.props.disabled,
	          onMouseUp: this.handleMouseUp,
	          onMouseLeave: this.handleMouseLeave,
	          'data-react-toolbox': 'button'
	        });
	
	        return _react2.default.createElement(element, props, icon ? _react2.default.createElement(FontIcon, { className: theme.icon, value: icon }) : null, children);
	      }
	    }]);
	
	    return IconButton;
	  }(_react.Component);
	
	  IconButton.propTypes = {
	    accent: _react.PropTypes.bool,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    href: _react.PropTypes.string,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    inverse: _react.PropTypes.bool,
	    neutral: _react.PropTypes.bool,
	    onMouseLeave: _react.PropTypes.func,
	    onMouseUp: _react.PropTypes.func,
	    primary: _react.PropTypes.bool,
	    theme: _react.PropTypes.object,
	    type: _react.PropTypes.string
	  };
	  IconButton.defaultProps = {
	    accent: false,
	    className: '',
	    neutral: true,
	    primary: false
	  };
	
	
	  return ripple(IconButton);
	};
	
	var IconButton = factory((0, _Ripple2.default)({ centered: true }), _FontIcon2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.BUTTON)(IconButton);
	exports.iconButtonFactory = factory;
	exports.IconButton = IconButton;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	var _theme = __webpack_require__(190);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (options) {
	  return (0, _Ripple2.default)(_extends({}, options, { theme: _theme2.default }));
	};

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(191);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".ripple {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  pointer-events: none;\n  background-color: currentColor;\n  border-radius: 50%;\n  transform-origin: 50% 50%; }\n\n.rippleWrapper {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  pointer-events: none; }\n\n.ripple {\n  transition-duration: 800ms; }\n  .ripple.rippleRestarting {\n    opacity: 0.3;\n    transition-property: none; }\n  .ripple.rippleActive {\n    opacity: 0.3;\n    transition-property: transform; }\n  .ripple:not(.rippleActive):not(.rippleRestarting) {\n    opacity: 0;\n    transition-property: opacity, transform; }\n", ""]);
	
	// exports


/***/ },
/* 192 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(195);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".button {\n  position: relative; }\n\n.raised, .flat, .floating, .toggle {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 1.4rem;\n  font-weight: 500;\n  line-height: 1;\n  text-transform: uppercase;\n  letter-spacing: 0;\n  position: relative;\n  display: inline-block;\n  height: 3.6rem;\n  flex-direction: row;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  line-height: 3.6rem;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1); }\n  .raised::-moz-focus-inner, .flat::-moz-focus-inner, .floating::-moz-focus-inner, .toggle::-moz-focus-inner {\n    border: 0; }\n  .raised > span:not([data-react-toolbox=\"tooltip\"]), .flat > span:not([data-react-toolbox=\"tooltip\"]), .floating > span:not([data-react-toolbox=\"tooltip\"]), .toggle > span:not([data-react-toolbox=\"tooltip\"]) {\n    display: inline-block;\n    line-height: 3.6rem;\n    vertical-align: top; }\n  .raised > svg, .flat > svg, .floating > svg, .toggle > svg {\n    display: inline-block;\n    width: 1em;\n    height: 3.6rem;\n    font-size: 120%;\n    vertical-align: top;\n    fill: currentColor; }\n  .raised > *, .flat > *, .floating > *, .toggle > * {\n    pointer-events: none; }\n  .raised > .rippleWrapper, .flat > .rippleWrapper, .floating > .rippleWrapper, .toggle > .rippleWrapper {\n    overflow: hidden; }\n  [disabled].raised, [disabled].flat, [disabled].floating, [disabled].toggle {\n    color: rgba(0, 0, 0, 0.26);\n    pointer-events: none;\n    cursor: auto; }\n\n.raised, .flat {\n  min-width: 9rem;\n  padding: 0 1.2rem;\n  border-radius: 0.2rem; }\n  .raised .icon, .flat .icon {\n    margin-right: 0.6rem;\n    font-size: 120%;\n    vertical-align: middle; }\n  .raised > svg, .flat > svg {\n    margin-right: 0.5rem; }\n\n[disabled].raised, [disabled].floating {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  background-color: rgba(0, 0, 0, 0.12); }\n\n.raised:active, .floating:active {\n  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2); }\n\n.raised:focus:not(:active), .floating:focus:not(:active) {\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.18), 0 8px 16px rgba(0, 0, 0, 0.36); }\n\n.raised {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\n\n.flat {\n  background: transparent; }\n\n.floating {\n  width: 5.6rem;\n  height: 5.6rem;\n  font-size: 2.4rem;\n  border-radius: 50%;\n  box-shadow: 0 1px 1.5px 0 rgba(0, 0, 0, 0.12), 0 1px 1px 0 rgba(0, 0, 0, 0.24); }\n  .floating .icon {\n    line-height: 5.6rem; }\n  .floating > .rippleWrapper {\n    border-radius: 50%; }\n  .floating.mini {\n    width: 4rem;\n    height: 4rem;\n    font-size: 1.77778rem; }\n    .floating.mini .icon {\n      line-height: 4rem; }\n\n.toggle {\n  width: 3.6rem;\n  background: transparent;\n  border-radius: 50%; }\n  .toggle > .icon, .toggle svg {\n    font-size: 2rem;\n    line-height: 3.6rem;\n    vertical-align: top; }\n  .toggle > .rippleWrapper {\n    border-radius: 50%; }\n\n.neutral:not([disabled]).raised, .neutral:not([disabled]).floating {\n  color: #212121;\n  background-color: white; }\n\n.neutral:not([disabled]).flat, .neutral:not([disabled]).toggle {\n  color: #212121; }\n  .neutral:not([disabled]).flat:focus:not(:active), .neutral:not([disabled]).toggle:focus:not(:active) {\n    background: rgba(33, 33, 33, 0.2); }\n\n.neutral:not([disabled]).flat:hover {\n  background: rgba(33, 33, 33, 0.2); }\n\n.neutral:not([disabled]).inverse.raised, .neutral:not([disabled]).inverse.floating {\n  color: white;\n  background-color: #212121; }\n\n.neutral:not([disabled]).inverse.flat, .neutral:not([disabled]).inverse.toggle {\n  color: white; }\n  .neutral:not([disabled]).inverse.flat:focus:not(:active), .neutral:not([disabled]).inverse.toggle:focus:not(:active) {\n    background: rgba(33, 33, 33, 0.2); }\n\n.neutral:not([disabled]).inverse.flat:hover {\n  background: rgba(33, 33, 33, 0.2); }\n\n.primary:not([disabled]).raised, .primary:not([disabled]).floating {\n  color: white;\n  background: #3f51b5; }\n\n.primary:not([disabled]).flat, .primary:not([disabled]).toggle {\n  color: #3f51b5; }\n  .primary:not([disabled]).flat:focus:not(:active), .primary:not([disabled]).toggle:focus:not(:active) {\n    background: rgba(63, 81, 181, 0.2); }\n\n.primary:not([disabled]).flat:hover {\n  background: rgba(63, 81, 181, 0.2); }\n\n.accent:not([disabled]).raised, .accent:not([disabled]).floating {\n  color: white;\n  background: #ff4081; }\n\n.accent:not([disabled]).flat, .accent:not([disabled]).toggle {\n  color: #ff4081; }\n  .accent:not([disabled]).flat:focus:not(:active), .accent:not([disabled]).toggle:focus:not(:active) {\n    background: rgba(255, 64, 129, 0.2); }\n\n.accent:not([disabled]).flat:hover {\n  background: rgba(255, 64, 129, 0.2); }\n", ""]);
	
	// exports


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CardTitle = exports.CardText = exports.CardMedia = exports.CardActions = exports.Card = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Card = __webpack_require__(197);
	
	var _CardActions = __webpack_require__(198);
	
	var _CardMedia = __webpack_require__(199);
	
	var _CardText = __webpack_require__(200);
	
	var _CardTitle = __webpack_require__(201);
	
	var _avatar = __webpack_require__(203);
	
	var _avatar2 = _interopRequireDefault(_avatar);
	
	var _theme = __webpack_require__(206);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CardTitle = (0, _CardTitle.cardTitleFactory)(_avatar2.default);
	var ThemedCard = (0, _reactCssThemr.themr)(_identifiers.CARD, _theme2.default)(_Card.Card);
	var ThemedCardActions = (0, _reactCssThemr.themr)(_identifiers.CARD, _theme2.default)(_CardActions.CardActions);
	var ThemedCardMedia = (0, _reactCssThemr.themr)(_identifiers.CARD, _theme2.default)(_CardMedia.CardMedia);
	var ThemedCardText = (0, _reactCssThemr.themr)(_identifiers.CARD, _theme2.default)(_CardText.CardText);
	var ThemedCardTitle = (0, _reactCssThemr.themr)(_identifiers.CARD, _theme2.default)(CardTitle);
	
	exports.default = ThemedCard;
	exports.Card = ThemedCard;
	exports.CardActions = ThemedCardActions;
	exports.CardMedia = ThemedCardMedia;
	exports.CardText = ThemedCardText;
	exports.CardTitle = ThemedCardTitle;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Card = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Card = function Card(_ref) {
	  var children = _ref.children;
	  var className = _ref.className;
	  var raised = _ref.raised;
	  var theme = _ref.theme;
	
	  var other = _objectWithoutProperties(_ref, ['children', 'className', 'raised', 'theme']);
	
	  var classes = (0, _classnames3.default)(theme.card, _defineProperty({}, theme.raised, raised), className);
	
	  return _react2.default.createElement(
	    'div',
	    _extends({ 'data-react-toolbox': 'card', className: classes }, other),
	    children
	  );
	};
	
	Card.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  raised: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    card: _react.PropTypes.string,
	    raised: _react.PropTypes.string
	  })
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CARD)(Card);
	exports.Card = Card;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CardActions = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var CardActions = function CardActions(_ref) {
	  var children = _ref.children;
	  var className = _ref.className;
	  var theme = _ref.theme;
	
	  var other = _objectWithoutProperties(_ref, ['children', 'className', 'theme']);
	
	  return _react2.default.createElement(
	    'div',
	    _extends({ className: (0, _classnames2.default)(theme.cardActions, className) }, other),
	    children
	  );
	};
	
	CardActions.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  theme: _react.PropTypes.shape({
	    cardActions: _react.PropTypes.string
	  })
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CARD)(CardActions);
	exports.CardActions = CardActions;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CardMedia = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames3 = __webpack_require__(43);
	
	var _classnames4 = _interopRequireDefault(_classnames3);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var CardMedia = function CardMedia(_ref) {
	  var aspectRatio = _ref.aspectRatio;
	  var children = _ref.children;
	  var className = _ref.className;
	  var color = _ref.color;
	  var contentOverlay = _ref.contentOverlay;
	  var image = _ref.image;
	  var theme = _ref.theme;
	
	  var other = _objectWithoutProperties(_ref, ['aspectRatio', 'children', 'className', 'color', 'contentOverlay', 'image', 'theme']);
	
	  var classes = (0, _classnames4.default)(theme.cardMedia, _defineProperty({}, theme[aspectRatio], aspectRatio), className);
	
	  var innerClasses = (0, _classnames4.default)(theme.content, _defineProperty({}, theme.contentOverlay, contentOverlay));
	
	  var bgStyle = {
	    backgroundColor: color ? color : undefined,
	    backgroundImage: typeof image === 'string' ? 'url(\'' + image + '\')' : undefined
	  };
	
	  return _react2.default.createElement(
	    'div',
	    _extends({ style: bgStyle, className: classes }, other),
	    _react2.default.createElement(
	      'div',
	      { className: innerClasses },
	      children
	    )
	  );
	};
	
	CardMedia.propTypes = {
	  aspectRatio: _react.PropTypes.oneOf(['wide', 'square']),
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  color: _react.PropTypes.string,
	  contentOverlay: _react.PropTypes.bool,
	  image: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	  theme: _react.PropTypes.shape({
	    cardMedia: _react.PropTypes.string,
	    content: _react.PropTypes.string,
	    contentOverlay: _react.PropTypes.string,
	    square: _react.PropTypes.string,
	    wide: _react.PropTypes.string
	  })
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CARD)(CardMedia);
	exports.CardMedia = CardMedia;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CardText = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var CardText = function CardText(_ref) {
	  var children = _ref.children;
	  var className = _ref.className;
	  var theme = _ref.theme;
	
	  var other = _objectWithoutProperties(_ref, ['children', 'className', 'theme']);
	
	  return _react2.default.createElement(
	    'div',
	    _extends({ className: (0, _classnames2.default)(theme.cardText, className) }, other),
	    typeof children === 'string' ? _react2.default.createElement(
	      'p',
	      null,
	      children
	    ) : children
	  );
	};
	
	CardText.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  theme: _react.PropTypes.shape({
	    cardText: _react.PropTypes.string
	  })
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CARD)(CardText);
	exports.CardText = CardText;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.cardTitleFactory = exports.CardTitle = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Avatar = __webpack_require__(202);
	
	var _Avatar2 = _interopRequireDefault(_Avatar);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var factory = function factory(Avatar) {
	  var CardTitle = function CardTitle(_ref) {
	    var _classnames;
	
	    var avatar = _ref.avatar;
	    var children = _ref.children;
	    var className = _ref.className;
	    var subtitle = _ref.subtitle;
	    var theme = _ref.theme;
	    var title = _ref.title;
	
	    var other = _objectWithoutProperties(_ref, ['avatar', 'children', 'className', 'subtitle', 'theme', 'title']);
	
	    var classes = (0, _classnames3.default)(theme.cardTitle, (_classnames = {}, _defineProperty(_classnames, theme.small, avatar), _defineProperty(_classnames, theme.large, !avatar), _classnames), className);
	
	    return _react2.default.createElement(
	      'div',
	      _extends({ className: classes }, other),
	      typeof avatar === 'string' ? _react2.default.createElement(Avatar, { image: avatar }) : avatar,
	      _react2.default.createElement(
	        'div',
	        null,
	        title && _react2.default.createElement(
	          'h5',
	          { className: theme.title },
	          title
	        ),
	        children && typeof children === 'string' && _react2.default.createElement(
	          'h5',
	          { className: theme.title },
	          children
	        ),
	        subtitle && _react2.default.createElement(
	          'p',
	          { className: theme.subtitle },
	          subtitle
	        ),
	        children && typeof children !== 'string' && children
	      )
	    );
	  };
	
	  CardTitle.propTypes = {
	    avatar: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    children: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.array]),
	    className: _react.PropTypes.string,
	    subtitle: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    theme: _react.PropTypes.shape({
	      large: _react.PropTypes.string,
	      title: _react.PropTypes.string,
	      small: _react.PropTypes.string,
	      subtitle: _react.PropTypes.string
	    }),
	    title: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element])
	  };
	
	  return CardTitle;
	};
	
	var CardTitle = factory(_Avatar2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CARD)(CardTitle);
	exports.CardTitle = CardTitle;
	exports.cardTitleFactory = factory;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Avatar = exports.avatarFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var factory = function factory(FontIcon) {
	  var Avatar = function Avatar(_ref) {
	    var children = _ref.children;
	    var className = _ref.className;
	    var cover = _ref.cover;
	    var icon = _ref.icon;
	    var image = _ref.image;
	    var theme = _ref.theme;
	    var title = _ref.title;
	
	    var other = _objectWithoutProperties(_ref, ['children', 'className', 'cover', 'icon', 'image', 'theme', 'title']);
	
	    return _react2.default.createElement(
	      'div',
	      _extends({ 'data-react-toolbox': 'avatar', className: (0, _classnames2.default)(theme.avatar, className) }, other),
	      children,
	      cover && typeof image === 'string' && _react2.default.createElement('span', { alt: title, className: theme.image, style: { backgroundImage: 'url(' + image + ')' } }),
	      !cover && (typeof image === 'string' ? _react2.default.createElement('img', { alt: title, className: theme.image, src: image, title: title }) : image),
	      typeof icon === 'string' ? _react2.default.createElement(FontIcon, { className: theme.letter, value: icon }) : icon,
	      title ? _react2.default.createElement(
	        'span',
	        { className: theme.letter },
	        title[0]
	      ) : null
	    );
	  };
	
	  Avatar.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    cover: _react.PropTypes.bool,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    image: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    theme: _react.PropTypes.shape({
	      avatar: _react.PropTypes.string,
	      image: _react.PropTypes.string,
	      letter: _react.PropTypes.string
	    }),
	    title: _react.PropTypes.string
	  };
	
	  Avatar.defaultProps = {
	    cover: false
	  };
	
	  return Avatar;
	};
	
	var Avatar = factory(_FontIcon2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.AVATAR)(Avatar);
	exports.avatarFactory = factory;
	exports.Avatar = Avatar;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Avatar = undefined;
	
	var _identifiers = __webpack_require__(3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _Avatar = __webpack_require__(202);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _theme = __webpack_require__(204);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Avatar = (0, _Avatar.avatarFactory)(_FontIcon2.default);
	var ThemedAvatar = (0, _reactCssThemr.themr)(_identifiers.AVATAR, _theme2.default)(Avatar);
	
	exports.default = ThemedAvatar;
	exports.Avatar = ThemedAvatar;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(205);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".avatar {\n  position: relative;\n  display: inline-block;\n  width: 4rem;\n  height: 4rem;\n  overflow: hidden;\n  font-size: 2.4rem;\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n  background-color: #9e9e9e;\n  border-radius: 50%; }\n  .avatar > svg {\n    width: 1em;\n    height: 4rem;\n    fill: currentColor; }\n  .avatar > img {\n    max-width: 100%;\n    height: auto; }\n\n.image {\n  position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  background-position: center;\n  background-size: cover;\n  border-radius: 50%; }\n\n.letter {\n  display: block;\n  width: 100%;\n  line-height: 4rem; }\n", ""]);
	
	// exports


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(207);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".card {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  overflow: hidden;\n  font-size: 1.4rem;\n  background: white;\n  border-radius: 0.2rem; }\n  .card.raised {\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2); }\n  .card [data-react-toolbox=\"avatar\"] {\n    display: block; }\n\n.cardMedia {\n  position: relative;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover; }\n  .cardMedia.wide, .cardMedia.square {\n    width: 100%;\n    height: 0; }\n    .cardMedia.wide .content, .cardMedia.square .content {\n      position: absolute;\n      height: 100%; }\n    .cardMedia.wide .content > iframe, .cardMedia.wide .content > video, .cardMedia.wide .content > img, .cardMedia.square .content > iframe, .cardMedia.square .content > video, .cardMedia.square .content > img {\n      max-width: 100%; }\n  .cardMedia.wide {\n    padding-top: 56.25%; }\n  .cardMedia.square {\n    padding-top: 100%; }\n  .cardMedia .content {\n    position: relative;\n    top: 0;\n    left: 0;\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: flex-end;\n    overflow: hidden; }\n  .cardMedia .contentOverlay .cardTitle, .cardMedia .contentOverlay .cardActions, .cardMedia .contentOverlay .cardText {\n    background-color: rgba(0, 0, 0, 0.35); }\n\n.cardTitle {\n  display: flex;\n  align-items: center; }\n  .cardTitle [data-react-toolbox=\"avatar\"] {\n    margin-right: 1.3rem; }\n  .cardTitle .subtitle {\n    color: #757575; }\n  .cardTitle.large {\n    padding: 2rem 1.6rem 1.4rem; }\n    .cardTitle.large .title {\n      font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n      font-size: 2.4rem;\n      font-weight: 400;\n      line-height: 3.2rem;\n      -moz-osx-font-smoothing: grayscale;\n      line-height: 1.25; }\n  .cardTitle.small {\n    padding: 1.6rem; }\n    .cardTitle.small .title {\n      font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n      font-size: 1.4rem;\n      line-height: 2.4rem;\n      letter-spacing: 0;\n      font-weight: 500;\n      line-height: 1.4; }\n    .cardTitle.small .subtitle {\n      font-weight: 500;\n      line-height: 1.4; }\n  .cardMedia .cardTitle .title, .cardMedia .cardTitle .subtitle {\n    color: white; }\n\n.cardTitle, .cardText {\n  padding: 1.4rem 1.6rem; }\n  .cardTitle:last-child, .cardText:last-child {\n    padding-bottom: 2rem; }\n  .cardTitle + .cardText, .cardText + .cardText {\n    padding-top: 0; }\n\n.cardActions {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 0.8rem; }\n  .cardActions [data-react-toolbox=\"button\"] {\n    min-width: 0;\n    padding: 0 0.8rem;\n    margin: 0 0.4rem; }\n    .cardActions [data-react-toolbox=\"button\"]:first-child {\n      margin-left: 0; }\n    .cardActions [data-react-toolbox=\"button\"]:last-child {\n      margin-right: 0; }\n", ""]);
	
	// exports


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Sidebar = exports.NavDrawer = exports.Panel = exports.Layout = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Layout = __webpack_require__(209);
	
	var _Panel = __webpack_require__(210);
	
	var _NavDrawer = __webpack_require__(211);
	
	var _Sidebar = __webpack_require__(212);
	
	var _theme = __webpack_require__(213);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedLayout = (0, _reactCssThemr.themr)(_identifiers.LAYOUT, _theme2.default)(_Layout.Layout);
	var ThemedPanel = (0, _reactCssThemr.themr)(_identifiers.LAYOUT, _theme2.default)(_Panel.Panel);
	var ThemedNavDrawer = (0, _reactCssThemr.themr)(_identifiers.LAYOUT, _theme2.default)(_NavDrawer.NavDrawer);
	var ThemedSidebar = (0, _reactCssThemr.themr)(_identifiers.LAYOUT, _theme2.default)(_Sidebar.Sidebar);
	
	exports.Layout = ThemedLayout;
	exports.Panel = ThemedPanel;
	exports.NavDrawer = ThemedNavDrawer;
	exports.Sidebar = ThemedSidebar;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Layout = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Layout = function Layout(_ref) {
	  var className = _ref.className;
	  var children = _ref.children;
	  var theme = _ref.theme;
	  return _react2.default.createElement(
	    'div',
	    { 'data-react-toolbox': 'layout', className: (0, _classnames2.default)(theme.layout, className) },
	    _react2.default.Children.map(children, function (child) {
	      return _react2.default.cloneElement(child, { theme: theme });
	    })
	  );
	};
	
	Layout.propTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.element), _react.PropTypes.element]),
	  className: _react.PropTypes.string,
	  theme: _react.PropTypes.shape({
	    layout: _react.PropTypes.string
	  })
	};
	
	Layout.defaultProps = {
	  className: ''
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LAYOUT)(Layout);
	exports.Layout = Layout;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Panel = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var Panel = function Panel(_ref) {
	  var children = _ref.children;
	  var className = _ref.className;
	  var scrollY = _ref.scrollY;
	  var theme = _ref.theme;
	
	  var _className = (0, _classnames3.default)(theme.panel, _defineProperty({}, theme.scrollY, scrollY), className);
	
	  return _react2.default.createElement(
	    'div',
	    { 'data-react-toolbox': 'panel', className: _className },
	    children
	  );
	};
	
	Panel.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  scrollY: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    panel: _react.PropTypes.string,
	    scrollY: _react.PropTypes.string
	  })
	};
	
	Panel.defaultProps = {
	  className: '',
	  scrollY: false
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LAYOUT)(Panel);
	exports.Panel = Panel;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.NavDrawer = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames3 = __webpack_require__(43);
	
	var _classnames4 = _interopRequireDefault(_classnames3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var NavDrawer = function NavDrawer(_ref) {
	  var _classnames;
	
	  var active = _ref.active;
	  var children = _ref.children;
	  var className = _ref.className;
	  var onOverlayClick = _ref.onOverlayClick;
	  var permanentAt = _ref.permanentAt;
	  var pinned = _ref.pinned;
	  var scrollY = _ref.scrollY;
	  var theme = _ref.theme;
	  var width = _ref.width;
	
	  var rootClasses = (0, _classnames4.default)([theme.navDrawer], (_classnames = {}, _defineProperty(_classnames, theme[permanentAt + 'Permanent'], permanentAt), _defineProperty(_classnames, theme.wide, width === 'wide'), _defineProperty(_classnames, theme.active, active), _defineProperty(_classnames, theme.pinned, pinned), _classnames), className);
	
	  var drawerClasses = (0, _classnames4.default)(theme.drawerContent, _defineProperty({}, theme.scrollY, scrollY));
	
	  return _react2.default.createElement(
	    'div',
	    { 'data-react-toolbox': 'nav-drawer', className: rootClasses, onClick: onOverlayClick },
	    _react2.default.createElement(
	      'div',
	      { 'data-react-toolbox': 'nav-drawer-scrim', className: theme.scrim },
	      _react2.default.createElement(
	        'aside',
	        { 'data-react-toolbox': 'nav-drawer-content', className: drawerClasses },
	        children
	      )
	    )
	  );
	};
	
	NavDrawer.propTypes = {
	  active: _react.PropTypes.bool,
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  onOverlayClick: _react.PropTypes.func,
	  permanentAt: _react.PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl', 'xxxl']),
	  pinned: _react.PropTypes.bool,
	  scrollY: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    drawerContent: _react.PropTypes.string,
	    lgPermanent: _react.PropTypes.string,
	    mdPermanent: _react.PropTypes.string,
	    navDrawer: _react.PropTypes.string,
	    pinned: _react.PropTypes.string,
	    scrim: _react.PropTypes.string,
	    scrollY: _react.PropTypes.string,
	    smPermanent: _react.PropTypes.string,
	    wide: _react.PropTypes.string,
	    xlPermanent: _react.PropTypes.string,
	    xxlPermanent: _react.PropTypes.string,
	    xxxlPermanent: _react.PropTypes.string
	  }),
	  width: _react.PropTypes.oneOf(['normal', 'wide'])
	};
	
	NavDrawer.defaultProps = {
	  active: false,
	  className: '',
	  scrollY: false,
	  width: 'normal'
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LAYOUT)(NavDrawer);
	exports.NavDrawer = NavDrawer;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Sidebar = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames3 = __webpack_require__(43);
	
	var _classnames4 = _interopRequireDefault(_classnames3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var Sidebar = function Sidebar(_ref) {
	  var children = _ref.children;
	  var className = _ref.className;
	  var pinned = _ref.pinned;
	  var scrollY = _ref.scrollY;
	  var theme = _ref.theme;
	  var width = _ref.width;
	
	  var wrapperClasses = (0, _classnames4.default)(theme.sidebar, theme['width-' + width], _defineProperty({}, theme.pinned, pinned), className);
	
	  var innerClasses = (0, _classnames4.default)(theme.sidebarContent, _defineProperty({}, theme.scrollY, scrollY));
	
	  return _react2.default.createElement(
	    'div',
	    { 'data-react-toolbox': 'sidebar', className: wrapperClasses },
	    _react2.default.createElement(
	      'aside',
	      { 'data-react-toolbox': 'sidebar-content', className: innerClasses },
	      children
	    )
	  );
	};
	
	Sidebar.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  pinned: _react.PropTypes.bool,
	  scrollY: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    pinned: _react.PropTypes.string,
	    scrollY: _react.PropTypes.string,
	    sidebar: _react.PropTypes.string,
	    sidebarContent: _react.PropTypes.string
	  }),
	  width: _react.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 33, 50, 66, 75, 100])
	};
	
	Sidebar.defaultProps = {
	  className: '',
	  pinned: false,
	  scrollY: false,
	  width: 5
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LAYOUT)(Sidebar);
	exports.Sidebar = Sidebar;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(214);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".layout {\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: space-between;\n  overflow-y: hidden; }\n  .layout .navDrawer {\n    width: 0;\n    min-width: 0;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.35s;\n    transition-property: width, min-width; }\n    .layout .navDrawer .scrim {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 300;\n      width: 0;\n      height: 100%;\n      background-color: transparent;\n      transition: background-color 0.35s cubic-bezier(0.4, 0, 0.2, 1), width 10ms linear 0.35s; }\n    .layout .navDrawer .drawerContent {\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n      display: flex;\n      width: 28rem;\n      max-width: calc(100% - 5.6rem);\n      height: 100%;\n      flex-direction: column;\n      align-items: stretch;\n      justify-content: space-between;\n      overflow-x: hidden;\n      overflow-y: hidden;\n      color: #424242;\n      pointer-events: none;\n      background-color: #fafafa;\n      border-right: 1px solid #e0e0e0;\n      transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: translateX(-100%); }\n      .layout .navDrawer .drawerContent.scrollY {\n        overflow-y: auto; }\n    .layout .navDrawer.pinned {\n      transition-delay: 0.07s;\n      width: 28rem;\n      max-width: calc(100% - 5.6rem); }\n      .layout .navDrawer.pinned > .scrim > .drawerContent {\n        pointer-events: all;\n        transition-delay: 0.07s;\n        transform: translateX(0); }\n    .layout .navDrawer.active:not(.pinned) {\n      transition-delay: 0.07s; }\n      .layout .navDrawer.active:not(.pinned) > .scrim > .drawerContent {\n        pointer-events: all;\n        transition-delay: 0.07s;\n        transform: translateX(0); }\n      .layout .navDrawer.active:not(.pinned) .scrim {\n        width: 100%;\n        background-color: rgba(0, 0, 0, 0.6);\n        transition: background-color 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n    @media screen and (min-width: 600px) {\n      .layout .navDrawer.pinned {\n        width: 32rem;\n        max-width: 32rem; }\n      .layout .navDrawer .drawerContent {\n        width: 32rem;\n        max-width: 32rem; }\n      .layout .navDrawer.wide.pinned {\n        width: 40rem;\n        max-width: 40rem; }\n      .layout .navDrawer.wide .drawerContent {\n        width: 40rem;\n        max-width: 40rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .navDrawer.smPermanent {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        .layout .navDrawer.smPermanent > .scrim > .drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        .layout .navDrawer.smPermanent.wide {\n          width: 40rem;\n          max-width: 40rem; }\n        .layout .navDrawer.smPermanent.active > .scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 960px) {\n      .layout .navDrawer.mdPermanent {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        .layout .navDrawer.mdPermanent > .scrim > .drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        .layout .navDrawer.mdPermanent.wide {\n          width: 40rem;\n          max-width: 40rem; }\n        .layout .navDrawer.mdPermanent.active > .scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1280px) {\n      .layout .navDrawer.lgPermanent {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        .layout .navDrawer.lgPermanent > .scrim > .drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        .layout .navDrawer.lgPermanent.wide {\n          width: 40rem;\n          max-width: 40rem; }\n        .layout .navDrawer.lgPermanent.active > .scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1440px) {\n      .layout .navDrawer.xlPermanent {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        .layout .navDrawer.xlPermanent > .scrim > .drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        .layout .navDrawer.xlPermanent.wide {\n          width: 40rem;\n          max-width: 40rem; }\n        .layout .navDrawer.xlPermanent.active > .scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1600px) {\n      .layout .navDrawer.xxlPermanent {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        .layout .navDrawer.xxlPermanent > .scrim > .drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        .layout .navDrawer.xxlPermanent.wide {\n          width: 40rem;\n          max-width: 40rem; }\n        .layout .navDrawer.xxlPermanent.active > .scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1920px) {\n      .layout .navDrawer.xxxlPermanent {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        .layout .navDrawer.xxxlPermanent > .scrim > .drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        .layout .navDrawer.xxxlPermanent.wide {\n          width: 40rem;\n          max-width: 40rem; }\n        .layout .navDrawer.xxxlPermanent.active > .scrim {\n          width: 0;\n          background-color: transparent; } }\n  .layout .layout .scrim {\n    z-index: 299; }\n  .layout .layout .layout .scrim {\n    z-index: 298; }\n  .layout .panel {\n    position: relative;\n    display: flex;\n    height: 100%;\n    flex: 1;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: space-between;\n    overflow-y: hidden; }\n    .layout .panel.scrollY {\n      overflow-y: auto; }\n  .layout .sidebar {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 299;\n    width: 0;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    color: #424242;\n    background-color: #fafafa;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.35s;\n    transition-property: width; }\n    .layout .sidebar .sidebarContent {\n      display: flex;\n      height: 100%;\n      flex-direction: column;\n      align-items: stretch;\n      justify-content: space-between;\n      overflow-y: hidden; }\n      .layout .sidebar .sidebarContent.scrollY {\n        overflow-y: auto; }\n    .layout .sidebar.width-1 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-1.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-1 {\n        position: relative; }\n        .layout .sidebar.width-1 .sidebarContent {\n          min-width: 5.6rem; }\n        .layout .sidebar.width-1.pinned {\n          width: 5.6rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-1 {\n        position: relative; }\n        .layout .sidebar.width-1 .sidebarContent {\n          min-width: 6.4rem; }\n        .layout .sidebar.width-1.pinned {\n          width: 6.4rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-1 {\n        position: relative; }\n        .layout .sidebar.width-1 .sidebarContent {\n          min-width: 6.4rem; }\n        .layout .sidebar.width-1.pinned {\n          width: 6.4rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-1 {\n        position: relative; }\n        .layout .sidebar.width-1 .sidebarContent {\n          min-width: 6.4rem; }\n        .layout .sidebar.width-1.pinned {\n          width: 6.4rem; } }\n    .layout .sidebar.width-2 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-2.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-2 {\n        position: relative; }\n        .layout .sidebar.width-2 .sidebarContent {\n          min-width: 11.2rem; }\n        .layout .sidebar.width-2.pinned {\n          width: 11.2rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-2 {\n        position: relative; }\n        .layout .sidebar.width-2 .sidebarContent {\n          min-width: 12.8rem; }\n        .layout .sidebar.width-2.pinned {\n          width: 12.8rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-2 {\n        position: relative; }\n        .layout .sidebar.width-2 .sidebarContent {\n          min-width: 12.8rem; }\n        .layout .sidebar.width-2.pinned {\n          width: 12.8rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-2 {\n        position: relative; }\n        .layout .sidebar.width-2 .sidebarContent {\n          min-width: 12.8rem; }\n        .layout .sidebar.width-2.pinned {\n          width: 12.8rem; } }\n    .layout .sidebar.width-3 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-3.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-3 {\n        position: relative; }\n        .layout .sidebar.width-3 .sidebarContent {\n          min-width: 16.8rem; }\n        .layout .sidebar.width-3.pinned {\n          width: 16.8rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-3 {\n        position: relative; }\n        .layout .sidebar.width-3 .sidebarContent {\n          min-width: 19.2rem; }\n        .layout .sidebar.width-3.pinned {\n          width: 19.2rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-3 {\n        position: relative; }\n        .layout .sidebar.width-3 .sidebarContent {\n          min-width: 19.2rem; }\n        .layout .sidebar.width-3.pinned {\n          width: 19.2rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-3 {\n        position: relative; }\n        .layout .sidebar.width-3 .sidebarContent {\n          min-width: 19.2rem; }\n        .layout .sidebar.width-3.pinned {\n          width: 19.2rem; } }\n    .layout .sidebar.width-4 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-4.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-4 {\n        position: relative; }\n        .layout .sidebar.width-4 .sidebarContent {\n          min-width: 22.4rem; }\n        .layout .sidebar.width-4.pinned {\n          width: 22.4rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-4 {\n        position: relative; }\n        .layout .sidebar.width-4 .sidebarContent {\n          min-width: 25.6rem; }\n        .layout .sidebar.width-4.pinned {\n          width: 25.6rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-4 {\n        position: relative; }\n        .layout .sidebar.width-4 .sidebarContent {\n          min-width: 25.6rem; }\n        .layout .sidebar.width-4.pinned {\n          width: 25.6rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-4 {\n        position: relative; }\n        .layout .sidebar.width-4 .sidebarContent {\n          min-width: 25.6rem; }\n        .layout .sidebar.width-4.pinned {\n          width: 25.6rem; } }\n    .layout .sidebar.width-5 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-5.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-5 {\n        position: relative; }\n        .layout .sidebar.width-5 .sidebarContent {\n          min-width: 28rem; }\n        .layout .sidebar.width-5.pinned {\n          width: 28rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-5 {\n        position: relative; }\n        .layout .sidebar.width-5 .sidebarContent {\n          min-width: 32rem; }\n        .layout .sidebar.width-5.pinned {\n          width: 32rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-5 {\n        position: relative; }\n        .layout .sidebar.width-5 .sidebarContent {\n          min-width: 32rem; }\n        .layout .sidebar.width-5.pinned {\n          width: 32rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-5 {\n        position: relative; }\n        .layout .sidebar.width-5 .sidebarContent {\n          min-width: 32rem; }\n        .layout .sidebar.width-5.pinned {\n          width: 32rem; } }\n    .layout .sidebar.width-6 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-6.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-6 {\n        position: relative; }\n        .layout .sidebar.width-6 .sidebarContent {\n          min-width: 33.6rem; }\n        .layout .sidebar.width-6.pinned {\n          width: 33.6rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-6 {\n        position: relative; }\n        .layout .sidebar.width-6 .sidebarContent {\n          min-width: 38.4rem; }\n        .layout .sidebar.width-6.pinned {\n          width: 38.4rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-6 {\n        position: relative; }\n        .layout .sidebar.width-6 .sidebarContent {\n          min-width: 38.4rem; }\n        .layout .sidebar.width-6.pinned {\n          width: 38.4rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-6 {\n        position: relative; }\n        .layout .sidebar.width-6 .sidebarContent {\n          min-width: 38.4rem; }\n        .layout .sidebar.width-6.pinned {\n          width: 38.4rem; } }\n    .layout .sidebar.width-7 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-7.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-7 {\n        position: relative; }\n        .layout .sidebar.width-7 .sidebarContent {\n          min-width: 39.2rem; }\n        .layout .sidebar.width-7.pinned {\n          width: 39.2rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-7 {\n        position: relative; }\n        .layout .sidebar.width-7 .sidebarContent {\n          min-width: 44.8rem; }\n        .layout .sidebar.width-7.pinned {\n          width: 44.8rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-7 {\n        position: relative; }\n        .layout .sidebar.width-7 .sidebarContent {\n          min-width: 44.8rem; }\n        .layout .sidebar.width-7.pinned {\n          width: 44.8rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-7 {\n        position: relative; }\n        .layout .sidebar.width-7 .sidebarContent {\n          min-width: 44.8rem; }\n        .layout .sidebar.width-7.pinned {\n          width: 44.8rem; } }\n    .layout .sidebar.width-8 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-8.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-8 {\n        position: relative; }\n        .layout .sidebar.width-8 .sidebarContent {\n          min-width: 44.8rem; }\n        .layout .sidebar.width-8.pinned {\n          width: 44.8rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-8 {\n        position: relative; }\n        .layout .sidebar.width-8 .sidebarContent {\n          min-width: 51.2rem; }\n        .layout .sidebar.width-8.pinned {\n          width: 51.2rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-8 {\n        position: relative; }\n        .layout .sidebar.width-8 .sidebarContent {\n          min-width: 51.2rem; }\n        .layout .sidebar.width-8.pinned {\n          width: 51.2rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-8 {\n        position: relative; }\n        .layout .sidebar.width-8 .sidebarContent {\n          min-width: 51.2rem; }\n        .layout .sidebar.width-8.pinned {\n          width: 51.2rem; } }\n    .layout .sidebar.width-9 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-9.pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      .layout .sidebar.width-9 {\n        position: relative; }\n        .layout .sidebar.width-9 .sidebarContent {\n          min-width: 50.4rem; }\n        .layout .sidebar.width-9.pinned {\n          width: 50.4rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      .layout .sidebar.width-9 {\n        position: relative; }\n        .layout .sidebar.width-9 .sidebarContent {\n          min-width: 57.6rem; }\n        .layout .sidebar.width-9.pinned {\n          width: 57.6rem; } }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-9 {\n        position: relative; }\n        .layout .sidebar.width-9 .sidebarContent {\n          min-width: 57.6rem; }\n        .layout .sidebar.width-9.pinned {\n          width: 57.6rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-9 {\n        position: relative; }\n        .layout .sidebar.width-9 .sidebarContent {\n          min-width: 57.6rem; }\n        .layout .sidebar.width-9.pinned {\n          width: 57.6rem; } }\n    .layout .sidebar.width-10 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-10.pinned {\n      width: 100%; }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-10 {\n        position: relative; }\n        .layout .sidebar.width-10 .sidebarContent {\n          min-width: 64rem; }\n        .layout .sidebar.width-10.pinned {\n          width: 64rem; } }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-10 {\n        position: relative; }\n        .layout .sidebar.width-10 .sidebarContent {\n          min-width: 64rem; }\n        .layout .sidebar.width-10.pinned {\n          width: 64rem; } }\n    .layout .sidebar.width-11 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-11.pinned {\n      width: 100%; }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-11 {\n        position: relative; }\n        .layout .sidebar.width-11 .sidebarContent {\n          min-width: 70.4rem; }\n        .layout .sidebar.width-11.pinned {\n          width: 70.4rem; } }\n    .layout .sidebar.width-12 .sidebarContent {\n      min-width: 100%; }\n    .layout .sidebar.width-12.pinned {\n      width: 100%; }\n    @media screen and (min-width: 840px) {\n      .layout .sidebar.width-12 {\n        position: relative; }\n        .layout .sidebar.width-12 .sidebarContent {\n          min-width: 76.8rem; }\n        .layout .sidebar.width-12.pinned {\n          width: 76.8rem; } }\n    .layout .sidebar.width-100 {\n      position: absolute; }\n      .layout .sidebar.width-100 .sidebarContent {\n        min-width: 100%; }\n      .layout .sidebar.width-100.pinned {\n        width: 100%; }\n    .layout .sidebar.width-25 {\n      position: absolute; }\n      .layout .sidebar.width-25 .sidebarContent {\n        min-width: 100%; }\n      .layout .sidebar.width-25.pinned {\n        width: 100%; }\n    .layout .sidebar.width-33 {\n      position: absolute; }\n      .layout .sidebar.width-33 .sidebarContent {\n        min-width: 100%; }\n      .layout .sidebar.width-33.pinned {\n        width: 100%; }\n    .layout .sidebar.width-50 {\n      position: absolute; }\n      .layout .sidebar.width-50 .sidebarContent {\n        min-width: 100%; }\n      .layout .sidebar.width-50.pinned {\n        width: 100%; }\n    .layout .sidebar.width-66 {\n      position: absolute; }\n      .layout .sidebar.width-66 .sidebarContent {\n        min-width: 100%; }\n      .layout .sidebar.width-66.pinned {\n        width: 100%; }\n    .layout .sidebar.width-75 {\n      position: absolute; }\n      .layout .sidebar.width-75 .sidebarContent {\n        min-width: 100%; }\n      .layout .sidebar.width-75.pinned {\n        width: 100%; }\n    @media screen and (min-width: 720px) {\n      .layout .sidebar.width-25 {\n        position: relative; }\n        .layout .sidebar.width-25 .sidebarContent {\n          min-width: 25%; }\n        .layout .sidebar.width-25.pinned {\n          width: 25%; }\n      .layout .sidebar.width-33 {\n        position: relative; }\n        .layout .sidebar.width-33 .sidebarContent {\n          min-width: 33%; }\n        .layout .sidebar.width-33.pinned {\n          width: 33%; }\n      .layout .sidebar.width-50 {\n        position: relative; }\n        .layout .sidebar.width-50 .sidebarContent {\n          min-width: 50%; }\n        .layout .sidebar.width-50.pinned {\n          width: 50%; }\n      .layout .sidebar.width-66 {\n        position: relative; }\n        .layout .sidebar.width-66 .sidebarContent {\n          min-width: 66%; }\n        .layout .sidebar.width-66.pinned {\n          width: 66%; }\n      .layout .sidebar.width-75 {\n        position: relative; }\n        .layout .sidebar.width-75 .sidebarContent {\n          min-width: 75%; }\n        .layout .sidebar.width-75.pinned {\n          width: 75%; } }\n", ""]);
	
	// exports


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.List = exports.ListItem = exports.ListDivider = exports.ListCheckbox = exports.ListItemText = exports.ListSubHeader = exports.ListItemLayout = exports.ListItemContent = exports.ListItemActions = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _avatar = __webpack_require__(203);
	
	var _checkbox = __webpack_require__(216);
	
	var _ListItemText = __webpack_require__(221);
	
	var _ListItemAction = __webpack_require__(222);
	
	var _ListSubHeader = __webpack_require__(223);
	
	var _ListDivider = __webpack_require__(224);
	
	var _List = __webpack_require__(225);
	
	var _ListItem = __webpack_require__(226);
	
	var _ListCheckbox = __webpack_require__(230);
	
	var _ListItemActions = __webpack_require__(229);
	
	var _ListItemContent = __webpack_require__(227);
	
	var _ListItemLayout = __webpack_require__(228);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _theme = __webpack_require__(231);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var applyTheme = function applyTheme(Component) {
	  return (0, _reactCssThemr.themr)(_identifiers.LIST, _theme2.default)(Component);
	};
	var ripple = (0, _ripple2.default)({ centered: false, listItemIgnore: true });
	var ThemedListItemAction = applyTheme(_ListItemAction.ListItemAction);
	var ThemedListSubHeader = applyTheme(_ListSubHeader.ListSubHeader);
	var ThemedListItemText = applyTheme(_ListItemText.ListItemText);
	var ThemedListDivider = applyTheme(_ListDivider.ListDivider);
	var ThemedListItemContent = applyTheme((0, _ListItemContent.listItemContentFactory)(ThemedListItemText));
	var ThemedListItemActions = applyTheme((0, _ListItemActions.listItemActionsFactory)(ThemedListItemAction));
	var ThemedListItemLayout = applyTheme((0, _ListItemLayout.listItemLayoutFactory)(_avatar.Avatar, ThemedListItemContent, ThemedListItemActions));
	var ThemedListCheckbox = applyTheme((0, _ListCheckbox.listCheckboxFactory)(_checkbox.Checkbox, ThemedListItemContent));
	var ThemedListItem = applyTheme((0, _ListItem.listItemFactory)(ripple, ThemedListItemLayout, ThemedListItemContent));
	var ThemedList = applyTheme((0, _List.listFactory)(ThemedListItem));
	
	exports.ListItemActions = ThemedListItemActions;
	exports.ListItemContent = ThemedListItemContent;
	exports.ListItemLayout = ThemedListItemLayout;
	exports.ListSubHeader = ThemedListSubHeader;
	exports.ListItemText = ThemedListItemText;
	exports.ListCheckbox = ThemedListCheckbox;
	exports.ListDivider = ThemedListDivider;
	exports.ListItem = ThemedListItem;
	exports.List = ThemedList;

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Checkbox = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _Checkbox = __webpack_require__(217);
	
	var _Check = __webpack_require__(218);
	
	var _Check2 = _interopRequireDefault(_Check);
	
	var _theme = __webpack_require__(219);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedCheck = (0, _Check2.default)((0, _ripple2.default)({ centered: true, spread: 2.6 }));
	var ThemedCheckbox = (0, _reactCssThemr.themr)(_identifiers.CHECKBOX, _theme2.default)((0, _Checkbox.checkboxFactory)(ThemedCheck));
	
	exports.default = ThemedCheckbox;
	exports.Checkbox = ThemedCheckbox;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Checkbox = exports.checkboxFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	var _Check = __webpack_require__(218);
	
	var _Check2 = _interopRequireDefault(_Check);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Check) {
	  var Checkbox = function (_Component) {
	    _inherits(Checkbox, _Component);
	
	    function Checkbox() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Checkbox);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Checkbox)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleToggle = function (event) {
	        if (event.pageX !== 0 && event.pageY !== 0) _this.blur();
	        if (!_this.props.disabled && _this.props.onChange) {
	          _this.props.onChange(!_this.props.checked, event);
	        }
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Checkbox, [{
	      key: 'blur',
	      value: function blur() {
	        this.refs.input.blur();
	      }
	    }, {
	      key: 'focus',
	      value: function focus() {
	        this.refs.input.focus();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var onChange = _props.onChange;
	        var theme = _props.theme;
	
	        var others = _objectWithoutProperties(_props, ['onChange', 'theme']); //eslint-disable-line no-unused-vars
	
	
	        var className = (0, _classnames3.default)(theme.field, _defineProperty({}, theme.disabled, this.props.disabled), this.props.className);
	
	        return _react2.default.createElement(
	          'label',
	          { 'data-react-toolbox': 'checkbox', className: className },
	          _react2.default.createElement('input', _extends({}, others, {
	            className: theme.input,
	            onClick: this.handleToggle,
	            readOnly: true,
	            ref: 'input',
	            type: 'checkbox'
	          })),
	          _react2.default.createElement(Check, {
	            checked: this.props.checked,
	            disabled: this.props.disabled,
	            rippleClassName: theme.ripple,
	            theme: this.props.theme
	          }),
	          this.props.label ? _react2.default.createElement(
	            'span',
	            { 'data-react-toolbox': 'label', className: theme.text },
	            this.props.label
	          ) : null
	        );
	      }
	    }]);
	
	    return Checkbox;
	  }(_react.Component);
	
	  Checkbox.propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    label: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.node]),
	    name: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      disabled: _react.PropTypes.string,
	      field: _react.PropTypes.string,
	      input: _react.PropTypes.string,
	      ripple: _react.PropTypes.string
	    })
	  };
	  Checkbox.defaultProps = {
	    checked: false,
	    className: '',
	    disabled: false
	  };
	
	
	  return Checkbox;
	};
	
	var Check = (0, _Check2.default)((0, _Ripple2.default)({ centered: true, spread: 2.6 }));
	var Checkbox = factory(Check);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CHECKBOX)(Checkbox);
	exports.checkboxFactory = factory;
	exports.Checkbox = Checkbox;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var factory = function factory(ripple) {
	  var Check = function Check(_ref) {
	    var checked = _ref.checked;
	    var children = _ref.children;
	    var onMouseDown = _ref.onMouseDown;
	    var theme = _ref.theme;
	    return _react2.default.createElement(
	      'div',
	      {
	        'data-react-toolbox': 'check',
	        className: (0, _classnames3.default)(theme.check, _defineProperty({}, theme.checked, checked)),
	        onMouseDown: onMouseDown
	      },
	      children
	    );
	  };
	
	  Check.propTypes = {
	    checked: _react.PropTypes.bool,
	    children: _react.PropTypes.any,
	    onMouseDown: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      check: _react.PropTypes.string,
	      checked: _react.PropTypes.string
	    })
	  };
	
	  return ripple(Check);
	};
	
	exports.default = factory;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(220);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".field {\n  position: relative;\n  display: block;\n  height: 1.8rem;\n  margin-bottom: 1.5rem;\n  white-space: nowrap;\n  vertical-align: middle; }\n  .field .ripple {\n    background-color: #3f51b5;\n    opacity: .3;\n    transition-duration: 650ms; }\n\n.text {\n  display: inline-block;\n  padding-left: 1rem;\n  font-size: 1.4rem;\n  line-height: 1.8rem;\n  color: black;\n  white-space: nowrap;\n  vertical-align: top; }\n\n.input {\n  width: 0;\n  height: 0;\n  overflow: hidden;\n  opacity: 0; }\n  .input:focus ~ .check:before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 4.14rem;\n    height: 4.14rem;\n    margin-top: -2.07rem;\n    margin-left: -2.07rem;\n    pointer-events: none;\n    content: \"\";\n    background-color: rgba(0, 0, 0, 0.1);\n    border-radius: 50%; }\n  .input:focus ~ .check.checked:before {\n    background-color: rgba(63, 81, 181, 0.26); }\n\n.check {\n  position: relative;\n  display: inline-block;\n  width: 1.8rem;\n  height: 1.8rem;\n  vertical-align: top;\n  cursor: pointer;\n  border-color: black;\n  border-style: solid;\n  border-width: 2px;\n  border-radius: 2px;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.2s;\n  transition-property: background-color; }\n  .check.checked {\n    background-color: #3f51b5;\n    border-color: #3f51b5; }\n    .check.checked:after {\n      position: absolute;\n      top: -0.1rem;\n      left: 0.4rem;\n      width: 0.7rem;\n      height: 1.2rem;\n      content: \"\";\n      border-color: white;\n      border-style: solid;\n      border-top: 0;\n      border-right-width: 2px;\n      border-bottom-width: 2px;\n      border-left: 0;\n      transform: rotate(45deg);\n      animation: checkmark-expand 140ms ease-out forwards; }\n\n.disabled > .text {\n  color: rgba(0, 0, 0, 0.26); }\n\n.disabled > .check {\n  cursor: auto;\n  border-color: rgba(0, 0, 0, 0.26); }\n  .disabled > .check.checked {\n    cursor: auto;\n    background-color: rgba(0, 0, 0, 0.26);\n    border-color: transparent; }\n\n@keyframes checkmark-expand {\n  0% {\n    top: 0.9rem;\n    left: 0.6rem;\n    width: 0;\n    height: 0; }\n  100% {\n    top: -0.1rem;\n    left: 0.4rem;\n    width: 0.7rem;\n    height: 1.2rem; } }\n", ""]);
	
	// exports


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItemText = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var ListItemText = function ListItemText(_ref) {
	  var className = _ref.className;
	  var primary = _ref.primary;
	  var children = _ref.children;
	  var theme = _ref.theme;
	
	  var other = _objectWithoutProperties(_ref, ['className', 'primary', 'children', 'theme']);
	
	  var _className = (0, _classnames3.default)(theme.itemText, _defineProperty({}, theme.primary, primary), className);
	  return _react2.default.createElement(
	    'span',
	    _extends({ 'data-react-toolbox': 'list-item-text', className: _className }, other),
	    children
	  );
	};
	
	ListItemText.propTypes = {
	  children: _react.PropTypes.any,
	  className: _react.PropTypes.string,
	  primary: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    itemText: _react.PropTypes.string,
	    primary: _react.PropTypes.string
	  })
	};
	
	ListItemText.defaultProps = {
	  primary: false
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListItemText);
	exports.ListItemText = ListItemText;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItemAction = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ListItemAction = function ListItemAction(_ref) {
	  var action = _ref.action;
	  var theme = _ref.theme;
	  var _action$props = action.props;
	  var onClick = _action$props.onClick;
	  var onMouseDown = _action$props.onMouseDown;
	
	  var stopRipple = onClick && !onMouseDown;
	  var stop = function stop(e) {
	    return e.stopPropagation();
	  };
	  return _react2.default.createElement(
	    'span',
	    { className: theme.itemAction, onMouseDown: stopRipple && stop, onClick: onClick && stop },
	    action
	  );
	};
	
	ListItemAction.propTypes = {
	  action: _react.PropTypes.object,
	  theme: _react.PropTypes.shape({
	    itemAction: _react.PropTypes.string
	  })
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListItemAction);
	exports.ListItemAction = ListItemAction;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListSubHeader = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ListSubHeader = function ListSubHeader(_ref) {
	  var caption = _ref.caption;
	  var className = _ref.className;
	  var theme = _ref.theme;
	  return _react2.default.createElement(
	    'h5',
	    { className: (0, _classnames2.default)(theme.subheader, className) },
	    caption
	  );
	};
	
	ListSubHeader.propTypes = {
	  caption: _react.PropTypes.string,
	  className: _react.PropTypes.string,
	  theme: _react.PropTypes.object
	};
	
	ListSubHeader.defaultProps = {
	  className: ''
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListSubHeader);
	exports.ListSubHeader = ListSubHeader;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListDivider = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ListDivider = function ListDivider(_ref) {
	  var inset = _ref.inset;
	  var theme = _ref.theme;
	  return _react2.default.createElement('hr', { className: inset ? theme.divider + ' ' + theme.inset : theme.divider });
	};
	
	ListDivider.propTypes = {
	  inset: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    divider: _react.PropTypes.string,
	    inset: _react.PropTypes.string
	  })
	};
	
	ListDivider.defaultProps = {
	  inset: false
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListDivider);
	exports.ListDivider = ListDivider;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.List = exports.listFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ListItem = __webpack_require__(226);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(ListItem) {
	  var List = function (_Component) {
	    _inherits(List, _Component);
	
	    function List() {
	      _classCallCheck(this, List);
	
	      return _possibleConstructorReturn(this, Object.getPrototypeOf(List).apply(this, arguments));
	    }
	
	    _createClass(List, [{
	      key: 'renderItems',
	      value: function renderItems() {
	        var _this2 = this;
	
	        return _react2.default.Children.map(this.props.children, function (item) {
	          if (item.type === ListItem) {
	            return _react2.default.cloneElement(item, {
	              ripple: _this2.props.ripple,
	              selectable: _this2.props.selectable
	            });
	          } else {
	            return _react2.default.cloneElement(item);
	          }
	        });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(
	          'ul',
	          { 'data-react-toolbox': 'list', className: (0, _classnames2.default)(this.props.theme.list, this.props.className) },
	          this.renderItems()
	        );
	      }
	    }]);
	
	    return List;
	  }(_react.Component);
	
	  List.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    ripple: _react.PropTypes.bool,
	    selectable: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      list: _react.PropTypes.string
	    })
	  };
	  List.defaultProps = {
	    className: '',
	    ripple: false,
	    selectable: false
	  };
	
	
	  return List;
	};
	
	var List = factory(_ListItem2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(List);
	exports.listFactory = factory;
	exports.List = List;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItem = exports.listItemFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ListItemContent = __webpack_require__(227);
	
	var _ListItemContent2 = _interopRequireDefault(_ListItemContent);
	
	var _ListItemLayout = __webpack_require__(228);
	
	var _ListItemLayout2 = _interopRequireDefault(_ListItemLayout);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(ripple, ListItemLayout, ListItemContent) {
	  var ListItem = function (_Component) {
	    _inherits(ListItem, _Component);
	
	    function ListItem() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, ListItem);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(ListItem)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleClick = function (event) {
	        if (_this.props.onClick && !_this.props.disabled) {
	          _this.props.onClick(event);
	        }
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(ListItem, [{
	      key: 'groupChildren',
	      value: function groupChildren() {
	        var children = {
	          leftActions: [],
	          rightActions: [],
	          ignored: []
	        };
	
	        _react2.default.Children.forEach(this.props.children, function (child, i) {
	          if (!_react2.default.isValidElement(child)) {
	            return;
	          }
	
	          var _child$props = child.props;
	          var listItemIgnore = _child$props.listItemIgnore;
	
	          var rest = _objectWithoutProperties(_child$props, ['listItemIgnore']);
	
	          var strippedChild = _extends({}, child, { props: rest });
	
	          if (listItemIgnore) {
	            children.ignored.push(strippedChild);
	            return;
	          }
	          if (child.type === ListItemContent) {
	            children.itemContent = strippedChild;
	            return;
	          }
	          var bucket = children.itemContent ? 'rightActions' : 'leftActions';
	          children[bucket].push(_extends({}, strippedChild, { key: i }));
	        });
	
	        return children;
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var className = _props.className;
	        var onMouseDown = _props.onMouseDown;
	        var onTouchStart = _props.onTouchStart;
	        var to = _props.to;
	        var onClick = _props.onClick;
	        var hasRipple = _props.ripple;
	        var theme = _props.theme;
	
	        var other = _objectWithoutProperties(_props, ['className', 'onMouseDown', 'onTouchStart', 'to', 'onClick', 'ripple', 'theme']); //eslint-disable-line no-unused-vars
	
	
	        var children = this.groupChildren();
	        var content = _react2.default.createElement(ListItemLayout, _extends({ theme: theme }, children, other));
	        return _react2.default.createElement(
	          'li',
	          { className: theme.listItem + ' ' + className, onClick: this.handleClick, onMouseDown: onMouseDown, onTouchStart: onTouchStart },
	          to ? _react2.default.createElement(
	            'a',
	            { href: this.props.to },
	            content
	          ) : content,
	          children.ignored
	        );
	      }
	    }]);
	
	    return ListItem;
	  }(_react.Component);
	
	  ListItem.propTypes = {
	    children: _react.PropTypes.any,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    onClick: _react.PropTypes.func,
	    ripple: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      listItem: _react.PropTypes.string
	    }),
	    to: _react.PropTypes.string
	  };
	  ListItem.defaultProps = {
	    className: '',
	    disabled: false,
	    ripple: false
	  };
	
	
	  return ripple(ListItem);
	};
	
	var ripple = (0, _Ripple2.default)({ centered: false, listItemIgnore: true });
	var ListItem = factory(ripple, _ListItemLayout2.default, _ListItemContent2.default);
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListItem);
	exports.listItemFactory = factory;
	exports.ListItem = ListItem;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItemContent = exports.listItemContentFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ListItemText = __webpack_require__(221);
	
	var _ListItemText2 = _interopRequireDefault(_ListItemText);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var types = ['auto', 'normal', 'large'];
	
	var factory = function factory(ListItemText) {
	  var ListItemContent = function (_Component) {
	    _inherits(ListItemContent, _Component);
	
	    function ListItemContent() {
	      _classCallCheck(this, ListItemContent);
	
	      return _possibleConstructorReturn(this, Object.getPrototypeOf(ListItemContent).apply(this, arguments));
	    }
	
	    _createClass(ListItemContent, [{
	      key: 'getType',
	      value: function getType() {
	        var _props = this.props;
	        var type = _props.type;
	        var children = _props.children;
	        var caption = _props.caption;
	        var legend = _props.legend;
	
	
	        var count = _react2.default.Children.count(children);
	        [caption, legend].forEach(function (s) {
	          count += s ? 1 : 0;
	        });
	        var typeIndex = Math.min(count, types.length);
	
	        return type || types[typeIndex];
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props2 = this.props;
	        var children = _props2.children;
	        var caption = _props2.caption;
	        var legend = _props2.legend;
	        var theme = _props2.theme;
	
	        var className = (0, _classnames3.default)(theme.itemContentRoot, _defineProperty({}, theme[this.getType()], theme[this.getType()]));
	
	        return _react2.default.createElement(
	          'span',
	          { className: className },
	          caption && _react2.default.createElement(
	            ListItemText,
	            { theme: theme, primary: true },
	            caption
	          ),
	          legend && _react2.default.createElement(
	            ListItemText,
	            { theme: theme },
	            legend
	          ),
	          children
	        );
	      }
	    }]);
	
	    return ListItemContent;
	  }(_react.Component);
	
	  ListItemContent.propTypes = {
	    caption: _react.PropTypes.string,
	    children: _react.PropTypes.any,
	    legend: _react.PropTypes.string,
	    theme: _react.PropTypes.shape({
	      itemContentRoot: _react.PropTypes.string,
	      large: _react.PropTypes.string
	    }),
	    type: _react.PropTypes.oneOf(types)
	  };
	
	
	  return ListItemContent;
	};
	
	var ListItemContent = (0, _reactCssThemr.themr)(_identifiers.LIST)(_ListItemText2.default);
	exports.default = ListItemContent;
	exports.listItemContentFactory = factory;
	exports.ListItemContent = ListItemContent;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItemLayout = exports.listItemLayoutFactory = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _Avatar = __webpack_require__(202);
	
	var _Avatar2 = _interopRequireDefault(_Avatar);
	
	var _ListItemContent = __webpack_require__(227);
	
	var _ListItemContent2 = _interopRequireDefault(_ListItemContent);
	
	var _ListItemActions = __webpack_require__(229);
	
	var _ListItemActions2 = _interopRequireDefault(_ListItemActions);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var factory = function factory(Avatar, ListItemContent, ListItemActions) {
	  var ListItemLayout = function ListItemLayout(props) {
	    var _classnames;
	
	    var className = (0, _classnames3.default)(props.theme.item, (_classnames = {}, _defineProperty(_classnames, props.theme.disabled, props.disabled), _defineProperty(_classnames, props.theme.selectable, props.selectable), _classnames), props.className);
	
	    var leftActions = [props.leftIcon && _react2.default.createElement(_FontIcon2.default, { value: props.leftIcon, key: 'leftIcon' }), props.avatar && _react2.default.createElement(Avatar, { image: props.avatar, key: 'avatar' })].concat(_toConsumableArray(props.leftActions));
	    var rightActions = [props.rightIcon && _react2.default.createElement(_FontIcon2.default, { value: props.rightIcon, key: 'rightIcon' })].concat(_toConsumableArray(props.rightActions));
	    var content = props.itemContent || _react2.default.createElement(ListItemContent, { theme: props.theme, caption: props.caption, legend: props.legend });
	    var emptyActions = function emptyActions(item) {
	      return !item[0] && !item[1] && !item[2];
	    };
	
	    return _react2.default.createElement(
	      'span',
	      { className: className },
	      !emptyActions(leftActions) > 0 && _react2.default.createElement(
	        ListItemActions,
	        { type: 'left', theme: props.theme },
	        leftActions
	      ),
	      content,
	      !emptyActions(rightActions) > 0 && _react2.default.createElement(
	        ListItemActions,
	        { type: 'right', theme: props.theme },
	        rightActions
	      )
	    );
	  };
	
	  ListItemLayout.propTypes = {
	    avatar: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    caption: _react.PropTypes.string,
	    children: _react.PropTypes.any,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    itemContent: _react.PropTypes.element,
	    leftActions: _react.PropTypes.array,
	    leftIcon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    legend: _react.PropTypes.string,
	    rightActions: _react.PropTypes.array,
	    rightIcon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    selectable: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      disabled: _react.PropTypes.string,
	      item: _react.PropTypes.string,
	      selectable: _react.PropTypes.string
	    }),
	    to: _react.PropTypes.string
	  };
	
	  ListItemLayout.defaultProps = {
	    disabled: false,
	    selectable: false
	  };
	
	  return ListItemLayout;
	};
	
	var ListItemLayout = factory(_Avatar2.default, _ListItemContent2.default, _ListItemActions2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListItemLayout);
	exports.listItemLayoutFactory = factory;
	exports.ListItemLayout = ListItemLayout;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItemActions = exports.listItemActionsFactory = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ListItemAction = __webpack_require__(222);
	
	var _ListItemAction2 = _interopRequireDefault(_ListItemAction);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var factory = function factory(ListItemAction) {
	  var ListItemActions = function ListItemActions(_ref) {
	    var type = _ref.type;
	    var children = _ref.children;
	    var theme = _ref.theme;
	
	    var validChildren = _react2.default.Children.toArray(children).filter(function (c) {
	      return _react2.default.isValidElement(c);
	    });
	
	    return _react2.default.createElement(
	      'span',
	      { className: theme[type] },
	      validChildren.map(function (action, i) {
	        return _react2.default.createElement(ListItemAction, { key: i, theme: theme, action: action });
	      })
	    );
	  };
	
	  ListItemActions.propTypes = {
	    children: _react.PropTypes.any,
	    theme: _react.PropTypes.shape({
	      left: _react.PropTypes.string,
	      right: _react.PropTypes.string
	    }),
	    type: _react.PropTypes.oneOf(['left', 'right'])
	  };
	
	  return ListItemActions;
	};
	
	var ListItemActions = factory(_ListItemAction2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListItemActions);
	exports.listItemActionsFactory = factory;
	exports.ListItemActions = ListItemActions;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListCheckbox = exports.listCheckboxFactory = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Checkbox = __webpack_require__(217);
	
	var _Checkbox2 = _interopRequireDefault(_Checkbox);
	
	var _ListItemContent = __webpack_require__(227);
	
	var _ListItemContent2 = _interopRequireDefault(_ListItemContent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var factory = function factory(Checkbox, ListItemContent) {
	  var ListCheckbox = function ListCheckbox(_ref) {
	    var caption = _ref.caption;
	    var checked = _ref.checked;
	    var className = _ref.className;
	    var disabled = _ref.disabled;
	    var legend = _ref.legend;
	    var name = _ref.name;
	    var onBlur = _ref.onBlur;
	    var onChange = _ref.onChange;
	    var onFocus = _ref.onFocus;
	    var theme = _ref.theme;
	
	    var _className = (0, _classnames3.default)(theme.item, theme.checkboxItem, _defineProperty({}, theme.disabled, disabled), className);
	
	    return _react2.default.createElement(
	      'li',
	      { className: _className },
	      _react2.default.createElement(Checkbox, {
	        checked: checked,
	        className: theme.checkbox,
	        disabled: disabled,
	        label: _react2.default.createElement(ListItemContent, { caption: caption, legend: legend }),
	        name: name,
	        onBlur: onBlur,
	        onChange: onChange,
	        onFocus: onFocus
	      })
	    );
	  };
	
	  ListCheckbox.propTypes = {
	    caption: _react.PropTypes.string,
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    legend: _react.PropTypes.string,
	    name: _react.PropTypes.string,
	    onBlur: _react.PropTypes.func,
	    onChange: _react.PropTypes.func,
	    onFocus: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      checkbox: _react.PropTypes.string,
	      checkboxItem: _react.PropTypes.string,
	      disabled: _react.PropTypes.string,
	      item: _react.PropTypes.string
	    })
	  };
	
	  ListCheckbox.defaultProps = {
	    checked: false,
	    disabled: false
	  };
	
	  return ListCheckbox;
	};
	
	var ListCheckbox = factory(_Checkbox2.default, _ListItemContent2.default);
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LIST)(ListCheckbox);
	exports.listCheckboxFactory = factory;
	exports.ListCheckbox = ListCheckbox;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(232);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".list {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  padding: 0.8rem 0;\n  text-align: left;\n  white-space: nowrap;\n  list-style: none; }\n\n.subheader {\n  padding-left: 1.6rem;\n  margin: -0.8rem 0 0;\n  font-size: 1.4rem;\n  font-weight: 500;\n  line-height: 4.8rem;\n  color: #757575; }\n\n.divider {\n  height: 0.1rem;\n  margin: -0.1rem 0 0;\n  background-color: #eeeeee;\n  border: 0; }\n  .divider.inset {\n    margin-right: 1.6rem;\n    margin-left: 7.2rem; }\n  .list + .divider {\n    margin-top: -0.8rem; }\n  .listItem ~ .divider {\n    margin-top: 0.8rem;\n    margin-bottom: 0.8rem; }\n\n.listItem {\n  position: relative; }\n  .listItem > [data-react-toolbox=\"ripple\"] {\n    overflow: hidden; }\n  .listItem .ripple {\n    color: #757575; }\n\n.item {\n  position: relative;\n  display: flex;\n  min-height: 4.8rem;\n  align-items: center;\n  padding: 0 1.6rem;\n  color: #212121; }\n  .item.selectable:not(.disabled):hover {\n    cursor: pointer;\n    background-color: #eeeeee; }\n  .item.disabled {\n    pointer-events: none; }\n    .item.disabled:not(.checkboxItem) {\n      opacity: .5; }\n    .item.disabled > .checkbox > [data-react-toolbox=\"label\"] {\n      opacity: .5; }\n\n.left [data-react-toolbox=\"font-icon\"] {\n  width: 1.8rem; }\n\n.left :last-child > [data-react-toolbox=\"font-icon\"] {\n  margin-right: 2.2rem; }\n\n.right > :last-child {\n  margin-right: 0; }\n\n.right > :first-child {\n  margin-left: 1.6rem; }\n\n.left, .right {\n  display: flex;\n  flex: 0 0 auto;\n  align-items: center;\n  vertical-align: middle; }\n\n.itemAction {\n  display: flex;\n  margin: 0.8rem 1.6rem 0.8rem 0; }\n  .itemAction > * {\n    padding: 0; }\n  .itemAction > [data-react-toolbox=\"font-icon\"] {\n    font-size: 2.4rem;\n    color: #757575; }\n\n.itemContentRoot {\n  display: block;\n  flex-grow: 1; }\n  .itemContentRoot.large {\n    display: flex;\n    height: 7.2rem;\n    flex-direction: column;\n    justify-content: center; }\n\n.checkbox {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  min-height: 4.8rem;\n  align-items: center;\n  margin: 0;\n  cursor: pointer; }\n  .checkbox > [data-react-toolbox=\"check\"] {\n    margin-right: 3.8rem; }\n  .checkbox > [data-react-toolbox=\"label\"] {\n    padding-left: 0; }\n\n.itemText {\n  display: block; }\n  .itemText:not(.primary) {\n    padding-top: 0.3rem;\n    font-size: 1.4rem;\n    color: #757575;\n    white-space: normal; }\n  .itemText.primary {\n    font-size: 1.6rem;\n    color: #212121; }\n", ""]);
	
	// exports


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.IconMenu = exports.Menu = exports.MenuItem = exports.MenuDivider = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _button = __webpack_require__(2);
	
	var _MenuDivider = __webpack_require__(234);
	
	var _MenuItem = __webpack_require__(235);
	
	var _Menu = __webpack_require__(236);
	
	var _IconMenu = __webpack_require__(239);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _theme = __webpack_require__(240);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var applyTheme = function applyTheme(Component) {
	  return (0, _reactCssThemr.themr)(_identifiers.MENU, _theme2.default)(Component);
	};
	var ThemedMenuDivider = applyTheme(_MenuDivider.MenuDivider);
	var ThemedMenuItem = applyTheme((0, _MenuItem.menuItemFactory)((0, _ripple2.default)({})));
	var ThemedMenu = applyTheme((0, _Menu.menuFactory)(ThemedMenuItem));
	var ThemedIconMenu = applyTheme((0, _IconMenu.iconMenuFactory)(_button.IconButton, ThemedMenu));
	
	exports.MenuDivider = ThemedMenuDivider;
	exports.MenuItem = ThemedMenuItem;
	exports.Menu = ThemedMenu;
	exports.IconMenu = ThemedIconMenu;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.MenuDivider = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MenuDivider = function MenuDivider(_ref) {
	  var theme = _ref.theme;
	  return _react2.default.createElement('hr', { 'data-react-toolbox': 'menu-divider', className: theme.menuDivider });
	};
	
	MenuDivider.propTypes = {
	  theme: _react.PropTypes.shape({
	    menuDivider: _react.PropTypes.string
	  })
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.MENU)(MenuDivider);
	exports.MenuDivider = MenuDivider;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.MenuItem = exports.menuItemFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(ripple) {
	  var MenuItem = function (_Component) {
	    _inherits(MenuItem, _Component);
	
	    function MenuItem() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, MenuItem);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(MenuItem)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleClick = function (event) {
	        if (_this.props.onClick && !_this.props.disabled) {
	          _this.props.onClick(event, _this);
	        }
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(MenuItem, [{
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var _props = this.props;
	        var icon = _props.icon;
	        var caption = _props.caption;
	        var children = _props.children;
	        var shortcut = _props.shortcut;
	        var selected = _props.selected;
	        var disabled = _props.disabled;
	        var theme = _props.theme;
	
	        var others = _objectWithoutProperties(_props, ['icon', 'caption', 'children', 'shortcut', 'selected', 'disabled', 'theme']);
	
	        var className = (0, _classnames3.default)(theme.menuItem, (_classnames = {}, _defineProperty(_classnames, theme.selected, selected), _defineProperty(_classnames, theme.disabled, disabled), _classnames), this.props.className);
	
	        return _react2.default.createElement(
	          'li',
	          _extends({}, others, { 'data-react-toolbox': 'menu-item', className: className, onClick: this.handleClick }),
	          icon ? _react2.default.createElement(_FontIcon2.default, { value: icon, className: theme.icon }) : null,
	          _react2.default.createElement(
	            'span',
	            { className: theme.caption },
	            caption
	          ),
	          shortcut ? _react2.default.createElement(
	            'small',
	            { className: theme.shortcut },
	            shortcut
	          ) : null,
	          children
	        );
	      }
	    }]);
	
	    return MenuItem;
	  }(_react.Component);
	
	  MenuItem.propTypes = {
	    caption: _react.PropTypes.string,
	    children: _react.PropTypes.any,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    onClick: _react.PropTypes.func,
	    selected: _react.PropTypes.bool,
	    shortcut: _react.PropTypes.string,
	    theme: _react.PropTypes.shape({
	      caption: _react.PropTypes.string,
	      disabled: _react.PropTypes.string,
	      icon: _react.PropTypes.string,
	      menuItem: _react.PropTypes.string,
	      selected: _react.PropTypes.string,
	      shortcut: _react.PropTypes.string
	    })
	  };
	  MenuItem.defaultProps = {
	    className: '',
	    disabled: false,
	    selected: false
	  };
	
	
	  return ripple(MenuItem);
	};
	
	var MenuItem = factory((0, _Ripple2.default)({}));
	exports.default = (0, _reactCssThemr.themr)(_identifiers.MENU)(MenuItem);
	exports.menuItemFactory = factory;
	exports.MenuItem = MenuItem;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Menu = exports.menuFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(46);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _utils = __webpack_require__(237);
	
	var _MenuItem = __webpack_require__(235);
	
	var _MenuItem2 = _interopRequireDefault(_MenuItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var POSITION = {
	  AUTO: 'auto',
	  STATIC: 'static',
	  TOP_LEFT: 'topLeft',
	  TOP_RIGHT: 'topRight',
	  BOTTOM_LEFT: 'bottomLeft',
	  BOTTOM_RIGHT: 'bottomRight'
	};
	
	var factory = function factory(MenuItem) {
	  var Menu = function (_Component) {
	    _inherits(Menu, _Component);
	
	    function Menu() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Menu);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Menu)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        active: _this.props.active,
	        rippled: false
	      }, _this.handleDocumentClick = function (event) {
	        if (_this.state.active && !_utils.events.targetIsDescendant(event, _reactDom2.default.findDOMNode(_this))) {
	          _this.setState({ active: false, rippled: false });
	        }
	      }, _this.handleSelect = function (item, event) {
	        var _item$props = item.props;
	        var value = _item$props.value;
	        var onClick = _item$props.onClick;
	
	        if (onClick) event.persist();
	        _this.setState({ active: false, rippled: _this.props.ripple }, function () {
	          if (onClick) onClick(event);
	          if (_this.props.onSelect) _this.props.onSelect(value);
	        });
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Menu, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        var _this2 = this;
	
	        this.positionTimeoutHandle = setTimeout(function () {
	          var _refs$menu$getBoundin = _this2.refs.menu.getBoundingClientRect();
	
	          var width = _refs$menu$getBoundin.width;
	          var height = _refs$menu$getBoundin.height;
	
	          var position = _this2.props.position === POSITION.AUTO ? _this2.calculatePosition() : _this2.props.position;
	          _this2.setState({ position: position, width: width, height: height });
	        });
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var _this3 = this;
	
	        if (this.props.position !== nextProps.position) {
	          var position = nextProps.position === POSITION.AUTO ? this.calculatePosition() : nextProps.position;
	          this.setState({ position: position });
	        }
	
	        /**
	         * If the menu is going to be activated via props and its not active, verify
	         * the position is appropriated and then show it recalculating position if its
	         * wrong. It should be shown in two consecutive setState.
	         */
	        if (!this.props.active && nextProps.active && !this.state.active) {
	          if (nextProps.position === POSITION.AUTO) {
	            var _position = this.calculatePosition();
	            if (this.state.position !== _position) {
	              this.setState({ position: _position, active: false }, function () {
	                _this3.activateTimeoutHandle = setTimeout(function () {
	                  _this3.show();
	                }, 20);
	              });
	            } else {
	              this.show();
	            }
	          } else {
	            this.show();
	          }
	        }
	
	        /**
	         * If the menu is being deactivated via props and the current state is
	         * active, it should be hid.
	         */
	        if (this.props.active && !nextProps.active && this.state.active) {
	          this.hide();
	        }
	      }
	    }, {
	      key: 'componentWillUpdate',
	      value: function componentWillUpdate(nextProps, nextState) {
	        if (!this.state.active && nextState.active) {
	          _utils.events.addEventsToDocument({ click: this.handleDocumentClick });
	        }
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate(prevProps, prevState) {
	        if (prevState.active && !this.state.active) {
	          if (this.props.onHide) this.props.onHide();
	          _utils.events.removeEventsFromDocument({ click: this.handleDocumentClick });
	        } else if (!prevState.active && this.state.active && this.props.onShow) {
	          this.props.onShow();
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (this.state.active) _utils.events.removeEventsFromDocument({ click: this.handleDocumentClick });
	        clearTimeout(this.positionTimeoutHandle);
	        clearTimeout(this.activateTimeoutHandle);
	      }
	    }, {
	      key: 'calculatePosition',
	      value: function calculatePosition() {
	        var parentNode = _reactDom2.default.findDOMNode(this).parentNode;
	        if (!parentNode) return;
	
	        var _parentNode$getBoundi = parentNode.getBoundingClientRect();
	
	        var top = _parentNode$getBoundi.top;
	        var left = _parentNode$getBoundi.left;
	        var height = _parentNode$getBoundi.height;
	        var width = _parentNode$getBoundi.width;
	
	        var _utils$getViewport = _utils.utils.getViewport();
	
	        var wh = _utils$getViewport.height;
	        var ww = _utils$getViewport.width;
	
	        var toTop = top < wh / 2 - height / 2;
	        var toLeft = left < ww / 2 - width / 2;
	        return '' + (toTop ? 'top' : 'bottom') + (toLeft ? 'Left' : 'Right');
	      }
	    }, {
	      key: 'getMenuStyle',
	      value: function getMenuStyle() {
	        var _state = this.state;
	        var width = _state.width;
	        var height = _state.height;
	        var position = _state.position;
	
	        if (position !== POSITION.STATIC) {
	          if (this.state.active) {
	            return { clip: 'rect(0 ' + width + 'px ' + height + 'px 0)' };
	          } else if (position === POSITION.TOP_RIGHT) {
	            return { clip: 'rect(0 ' + width + 'px 0 ' + width + 'px)' };
	          } else if (position === POSITION.BOTTOM_RIGHT) {
	            return { clip: 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)' };
	          } else if (position === POSITION.BOTTOM_LEFT) {
	            return { clip: 'rect(' + height + 'px 0 ' + height + 'px 0)' };
	          } else if (position === POSITION.TOP_LEFT) {
	            return { clip: 'rect(0 0 0 0)' };
	          }
	        }
	      }
	    }, {
	      key: 'getRootStyle',
	      value: function getRootStyle() {
	        if (this.state.position !== POSITION.STATIC) {
	          return { width: this.state.width, height: this.state.height };
	        }
	      }
	    }, {
	      key: 'renderItems',
	      value: function renderItems() {
	        var _this4 = this;
	
	        return _react2.default.Children.map(this.props.children, function (item) {
	          if (!item) return item;
	          if (item.type === MenuItem) {
	            return _react2.default.cloneElement(item, {
	              ripple: item.props.ripple || _this4.props.ripple,
	              selected: typeof item.props.value !== 'undefined' && _this4.props.selectable && item.props.value === _this4.props.selected,
	              onClick: _this4.handleSelect.bind(_this4, item)
	            });
	          } else {
	            return _react2.default.cloneElement(item);
	          }
	        });
	      }
	    }, {
	      key: 'show',
	      value: function show() {
	        var _refs$menu$getBoundin2 = this.refs.menu.getBoundingClientRect();
	
	        var width = _refs$menu$getBoundin2.width;
	        var height = _refs$menu$getBoundin2.height;
	
	        this.setState({ active: true, width: width, height: height });
	      }
	    }, {
	      key: 'hide',
	      value: function hide() {
	        this.setState({ active: false });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var theme = this.props.theme;
	
	        var outlineStyle = { width: this.state.width, height: this.state.height };
	        var className = (0, _classnames3.default)([theme.menu, theme[this.state.position]], (_classnames = {}, _defineProperty(_classnames, theme.active, this.state.active), _defineProperty(_classnames, theme.rippled, this.state.rippled), _classnames), this.props.className);
	
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'menu', className: className, style: this.getRootStyle() },
	          this.props.outline ? _react2.default.createElement('div', { className: theme.outline, style: outlineStyle }) : null,
	          _react2.default.createElement(
	            'ul',
	            { ref: 'menu', className: theme.menuInner, style: this.getMenuStyle() },
	            this.renderItems()
	          )
	        );
	      }
	    }]);
	
	    return Menu;
	  }(_react.Component);
	
	  Menu.propTypes = {
	    active: _react.PropTypes.bool,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    onHide: _react.PropTypes.func,
	    onSelect: _react.PropTypes.func,
	    onShow: _react.PropTypes.func,
	    outline: _react.PropTypes.bool,
	    position: _react.PropTypes.oneOf(Object.keys(POSITION).map(function (key) {
	      return POSITION[key];
	    })),
	    ripple: _react.PropTypes.bool,
	    selectable: _react.PropTypes.bool,
	    selected: _react.PropTypes.any,
	    theme: _react.PropTypes.shape({
	      active: _react.PropTypes.string,
	      bottomLeft: _react.PropTypes.string,
	      bottomRight: _react.PropTypes.string,
	      menu: _react.PropTypes.string,
	      menuInner: _react.PropTypes.string,
	      outline: _react.PropTypes.string,
	      rippled: _react.PropTypes.string,
	      static: _react.PropTypes.string,
	      topLeft: _react.PropTypes.string,
	      topRight: _react.PropTypes.string
	    })
	  };
	  Menu.defaultProps = {
	    active: false,
	    outline: true,
	    position: POSITION.STATIC,
	    ripple: true,
	    selectable: true
	  };
	
	
	  return Menu;
	};
	
	var Menu = factory(_MenuItem2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.MENU)(Menu);
	exports.menuFactory = factory;
	exports.Menu = Menu;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.utils = exports.time = exports.prefixer = exports.events = undefined;
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _prefixer = __webpack_require__(186);
	
	var _prefixer2 = _interopRequireDefault(_prefixer);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { events: _events2.default, prefixer: _prefixer2.default, time: _time2.default, utils: _utils2.default };
	exports.events = _events2.default;
	exports.prefixer = _prefixer2.default;
	exports.time = _time2.default;
	exports.utils = _utils2.default;

/***/ },
/* 238 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var dateLocales = {
	  en: {
	    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysLetter: []
	  },
	  es: {
	    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort: 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
	    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysLetter: 'D_L_M_X_J_V_S'.split('_')
	  },
	  af: {
	    months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	    monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	    weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	    weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	    weekdaysLetter: []
	  },
	  ar: {
	    months: ['كانون الثاني يناير', 'شباط فبراير', 'آذار مارس', 'نيسان أبريل', 'أيار مايو', 'حزيران يونيو', 'تموز يوليو', 'آب أغسطس', 'أيلول سبتمبر', 'تشرين الأول أكتوبر', 'تشرين الثاني نوفمبر', 'كانون الأول ديسمبر'],
	    monthsShort: ['كانون الثاني يناير', 'شباط فبراير', 'آذار مارس', 'نيسان أبريل', 'أيار مايو', 'حزيران يونيو', 'تموز يوليو', 'آب أغسطس', 'أيلول سبتمبر', 'تشرين الأول أكتوبر', 'تشرين الثاني نوفمبر', 'كانون الأول ديسمبر'],
	    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysLetter: []
	  },
	  be: {
	    months: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),
	    monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	    weekdays: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	    weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	    weekdaysLetter: []
	  },
	  bg: {
	    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	    monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	    weekdaysLetter: []
	  },
	  bn: {
	    months: 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	    monthsShort: 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রবার_শনিবার'.split('_'),
	    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্র_শনি'.split('_'),
	    weekdaysLetter: []
	  },
	  bo: {
	    months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	    monthsShort: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	    weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	    weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	    weekdaysLetter: []
	  },
	  br: {
	    months: 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	    monthsShort: 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	    weekdays: 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	    weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	    weekdaysLetter: []
	  },
	  bs: {
	    months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysLetter: []
	  },
	  ca: {
	    months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	    monthsShort: 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	    weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	    weekdaysLetter: 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_')
	  },
	  gl: {
	    months: 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	    monthsShort: 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	    weekdays: 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	    weekdaysShort: 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	    weekdaysLetter: 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_')
	  },
	  eu: {
	    months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	    monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	    weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	    weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
	    weekdaysLetter: 'ig_al_ar_az_og_ol_lr'.split('_')
	  },
	  pt: {
	    months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	    weekdays: 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	    weekdaysLetter: []
	  },
	  it: {
	    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	    weekdays: 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	    weekdaysShort: 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	    weekdaysLetter: []
	  },
	  fr: {
	    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysLetter: []
	  }
	};
	var time = {
	  getDaysInMonth: function getDaysInMonth(d) {
	    var resultDate = this.getFirstDayOfMonth(d);
	    resultDate.setMonth(resultDate.getMonth() + 1);
	    resultDate.setDate(resultDate.getDate() - 1);
	    return resultDate.getDate();
	  },
	  getFirstDayOfMonth: function getFirstDayOfMonth(d) {
	    return new Date(d.getFullYear(), d.getMonth(), 1);
	  },
	  getFirstWeekDay: function getFirstWeekDay(d) {
	    return this.getFirstDayOfMonth(d).getDay();
	  },
	  getTimeMode: function getTimeMode(d) {
	    return d.getHours() >= 12 ? 'pm' : 'am';
	  },
	  getFullMonth: function getFullMonth(d) {
	    var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en' : arguments[1];
	
	    var month = d.getMonth();
	    var l = (typeof locale === 'string' ? dateLocales[locale] : locale) || dateLocales.en;
	    return l.hasOwnProperty('months') ? l.months[month] || 'Unknown' : 'Unknown';
	  },
	  getShortMonth: function getShortMonth(d) {
	    var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en' : arguments[1];
	
	    var month = d.getMonth();
	    var l = (typeof locale === 'string' ? dateLocales[locale] : locale) || dateLocales.en;
	    return l.hasOwnProperty('monthsShort') ? l.monthsShort[month] || 'Unknown' : 'Unknown';
	  },
	  getFullDayOfWeek: function getFullDayOfWeek(day) {
	    var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en' : arguments[1];
	
	    var l = (typeof locale === 'string' ? dateLocales[locale] : locale) || dateLocales.en;
	    return l.hasOwnProperty('weekdays') ? l.weekdays[day] || 'Unknown' : 'Unknown';
	  },
	  getShortDayOfWeek: function getShortDayOfWeek(day) {
	    var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en' : arguments[1];
	
	    var l = (typeof locale === 'string' ? dateLocales[locale] : locale) || dateLocales.en;
	    return l.hasOwnProperty('weekdaysShort') ? l.weekdaysShort[day] || 'Unknown' : 'Unknown';
	  },
	  getDayOfWeekLetter: function getDayOfWeekLetter(day) {
	    var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en' : arguments[1];
	
	    var l = (typeof locale === 'string' ? dateLocales[locale] : locale) || dateLocales.en;
	    return l.hasOwnProperty('weekdaysLetter') ? l.weekdaysLetter[day] || this.getFullDayOfWeek(day, locale).charAt(0) : 'Unknown';
	  },
	  clone: function clone(d) {
	    return new Date(d.getTime());
	  },
	  cloneAsDate: function cloneAsDate(d) {
	    var clonedDate = this.clone(d);
	    clonedDate.setHours(0, 0, 0, 0);
	    return clonedDate;
	  },
	  isDateObject: function isDateObject(d) {
	    return d instanceof Date;
	  },
	  addDays: function addDays(d, days) {
	    var newDate = this.clone(d);
	    newDate.setDate(d.getDate() + days);
	    return newDate;
	  },
	  addMonths: function addMonths(d, months) {
	    var newDate = this.clone(d);
	    newDate.setMonth(d.getMonth() + months, 1);
	    return newDate;
	  },
	  addYears: function addYears(d, years) {
	    var newDate = this.clone(d);
	    newDate.setFullYear(d.getFullYear() + years);
	    return newDate;
	  },
	  setDay: function setDay(d, day) {
	    var newDate = this.clone(d);
	    newDate.setDate(day);
	    return newDate;
	  },
	  setMonth: function setMonth(d, month) {
	    var newDate = this.clone(d);
	    newDate.setMonth(month);
	    return newDate;
	  },
	  setYear: function setYear(d, year) {
	    var newDate = this.clone(d);
	    newDate.setFullYear(year);
	    return newDate;
	  },
	  setHours: function setHours(d, hours) {
	    var newDate = this.clone(d);
	    newDate.setHours(hours);
	    return newDate;
	  },
	  setMinutes: function setMinutes(d, minutes) {
	    var newDate = this.clone(d);
	    newDate.setMinutes(minutes);
	    return newDate;
	  },
	  toggleTimeMode: function toggleTimeMode(d) {
	    var newDate = this.clone(d);
	    var hours = newDate.getHours();
	
	    newDate.setHours(hours - (hours > 12 ? -12 : 12));
	    return newDate;
	  },
	  formatTime: function formatTime(date, format) {
	    var hours = date.getHours();
	    var mins = date.getMinutes().toString();
	
	    if (format === 'ampm') {
	      var isAM = hours < 12;
	      var additional = isAM ? ' am' : ' pm';
	
	      hours = hours % 12;
	      hours = (hours || 12).toString();
	      if (mins.length < 2) mins = '0' + mins;
	
	      return hours + (mins === '00' ? '' : ':' + mins) + additional;
	    }
	
	    hours = hours.toString();
	    if (hours.length < 2) hours = '0' + hours;
	    if (mins.length < 2) mins = '0' + mins;
	    return hours + ':' + mins;
	  },
	  dateOutOfRange: function dateOutOfRange(date, minDate, maxDate) {
	    return minDate && !(date >= minDate) || maxDate && !(date <= maxDate);
	  },
	  closestDate: function closestDate(to, date1, date2) {
	    var toTime = to.getTime();
	
	    var diff1 = Math.abs(toTime - date1.getTime());
	    var diff2 = Math.abs(toTime - date2.getTime());
	
	    return diff1 < diff2 ? date1 : date2;
	  },
	  formatDate: function formatDate(date) {
	    var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en' : arguments[1];
	
	    if (locale === 'en') {
	      return date.getDate() + ' ' + time.getFullMonth(date, locale) + ' ' + date.getFullYear();
	    } else {
	      return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();
	    }
	  }
	};
	
	exports.default = time;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.IconMenu = exports.iconMenuFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _IconButton = __webpack_require__(188);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _Menu = __webpack_require__(236);
	
	var _Menu2 = _interopRequireDefault(_Menu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(IconButton, Menu) {
	  var IconMenu = function (_Component) {
	    _inherits(IconMenu, _Component);
	
	    function IconMenu() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, IconMenu);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(IconMenu)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        active: false
	      }, _this.handleButtonClick = function (event) {
	        _this.setState({ active: !_this.state.active });
	        if (_this.props.onClick) _this.props.onClick(event);
	      }, _this.handleMenuHide = function () {
	        _this.setState({ active: false });
	        if (_this.props.onHide) _this.props.onHide();
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(IconMenu, [{
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(
	          'div',
	          { className: (0, _classnames2.default)(this.props.theme.iconMenu, this.props.className) },
	          _react2.default.createElement(IconButton, {
	            className: this.props.theme.icon,
	            icon: this.props.icon,
	            onClick: this.handleButtonClick,
	            ripple: this.props.iconRipple
	          }),
	          _react2.default.createElement(
	            Menu,
	            {
	              ref: 'menu',
	              active: this.state.active,
	              onHide: this.handleMenuHide,
	              onSelect: this.props.onSelect,
	              onShow: this.props.onShow,
	              position: this.props.position,
	              ripple: this.props.menuRipple,
	              selectable: this.props.selectable,
	              selected: this.props.selected,
	              theme: this.props.theme
	            },
	            this.props.children
	          )
	        );
	      }
	    }]);
	
	    return IconMenu;
	  }(_react.Component);
	
	  IconMenu.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    iconRipple: _react.PropTypes.bool,
	    menuRipple: _react.PropTypes.bool,
	    onClick: _react.PropTypes.func,
	    onHide: _react.PropTypes.func,
	    onSelect: _react.PropTypes.func,
	    onShow: _react.PropTypes.func,
	    position: _react.PropTypes.string,
	    selectable: _react.PropTypes.bool,
	    selected: _react.PropTypes.any,
	    theme: _react.PropTypes.shape({
	      icon: _react.PropTypes.string,
	      iconMenu: _react.PropTypes.string
	    })
	  };
	  IconMenu.defaultProps = {
	    className: '',
	    icon: 'more_vert',
	    iconRipple: true,
	    menuRipple: true,
	    position: 'auto',
	    selectable: false
	  };
	
	
	  return IconMenu;
	};
	
	var IconMenu = factory(_IconButton2.default, _Menu2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.MENU)(IconMenu);
	exports.iconMenuFactory = factory;
	exports.IconMenu = IconMenu;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(241);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".iconMenu {\n  position: relative;\n  display: inline-block;\n  text-align: center; }\n  .iconMenu .icon {\n    cursor: pointer; }\n\n.menu {\n  position: relative;\n  display: inline-block; }\n  .menu.topLeft {\n    position: absolute;\n    top: 0;\n    left: 0; }\n    .menu.topLeft > .outline {\n      transform-origin: 0 0; }\n  .menu.topRight {\n    position: absolute;\n    top: 0;\n    right: 0; }\n    .menu.topRight > .outline {\n      transform-origin: 100% 0; }\n  .menu.bottomLeft {\n    position: absolute;\n    bottom: 0;\n    left: 0; }\n    .menu.bottomLeft > .outline {\n      transform-origin: 0 100%; }\n  .menu.bottomRight {\n    position: absolute;\n    right: 0;\n    bottom: 0; }\n    .menu.bottomRight > .outline {\n      transform-origin: 100% 100%; }\n  .menu:not(.static) {\n    z-index: 200;\n    pointer-events: none; }\n    .menu:not(.static) > .outline {\n      opacity: 0;\n      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(0);\n      will-change: transform; }\n    .menu:not(.static) > .menuInner {\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0; }\n    .menu:not(.static).rippled:not(.active) > .outline {\n      transition-delay: 0.3s; }\n    .menu:not(.static).rippled:not(.active) > .menuInner {\n      transition-delay: 0.3s; }\n    .menu:not(.static).active {\n      pointer-events: all; }\n      .menu:not(.static).active > .outline {\n        opacity: 1;\n        transform: scale(1); }\n      .menu:not(.static).active > .menuInner {\n        opacity: 1;\n        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1), clip 0.3s cubic-bezier(0.4, 0, 0.2, 1); }\n\n.outline {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  background-color: white;\n  border-radius: 0.2rem; }\n\n.menuInner {\n  position: relative;\n  display: block;\n  padding: 0.8rem 0;\n  text-align: left;\n  white-space: nowrap;\n  list-style: none; }\n\n.menuItem {\n  position: relative;\n  display: flex;\n  height: 4.8rem;\n  align-items: center;\n  padding: 0 1.6rem;\n  overflow: hidden;\n  font-size: 1.6rem;\n  color: #212121; }\n  .menuItem:not(.disabled):hover {\n    cursor: pointer;\n    background-color: #eeeeee; }\n  .menuItem.disabled {\n    pointer-events: none;\n    opacity: .5; }\n  .menuItem.selected {\n    font-weight: 500;\n    background-color: transparent; }\n  .menuItem .ripple {\n    color: #757575; }\n  .menuItem .icon {\n    width: 3.84rem;\n    font-size: 2.4rem !important; }\n\n.caption {\n  flex-grow: 1;\n  font-size: 1.6rem; }\n\n.shortcut {\n  margin-left: 1.6rem; }\n\n.menuDivider {\n  display: block;\n  width: 100%;\n  height: 1px;\n  margin: 1.2rem 0;\n  background-color: #eeeeee; }\n", ""]);
	
	// exports


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.RadioGroup = exports.RadioButton = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _Radio = __webpack_require__(243);
	
	var _Radio2 = _interopRequireDefault(_Radio);
	
	var _RadioButton = __webpack_require__(244);
	
	var _RadioGroup = __webpack_require__(245);
	
	var _theme = __webpack_require__(247);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedRadio = (0, _Radio2.default)((0, _ripple2.default)({ centered: true, spread: 2.6 }));
	var ThemedRadioButton = (0, _reactCssThemr.themr)(_identifiers.RADIO, _theme2.default)((0, _RadioButton.radioButtonFactory)(ThemedRadio));
	var ThemedRadioGroup = (0, _reactCssThemr.themr)(_identifiers.RADIO, _theme2.default)((0, _RadioGroup.radioGroupFactory)(ThemedRadioButton));
	
	exports.default = ThemedRadioButton;
	exports.RadioButton = ThemedRadioButton;
	exports.RadioGroup = ThemedRadioGroup;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var factory = function factory(ripple) {
	  var Radio = function Radio(_ref) {
	    var checked = _ref.checked;
	    var onMouseDown = _ref.onMouseDown;
	    var theme = _ref.theme;
	
	    var other = _objectWithoutProperties(_ref, ['checked', 'onMouseDown', 'theme']);
	
	    return _react2.default.createElement('div', _extends({
	      'data-react-toolbox': 'radio',
	      className: theme[checked ? 'radioChecked' : 'radio'],
	      onMouseDown: onMouseDown
	    }, other));
	  };
	
	  Radio.propTypes = {
	    checked: _react.PropTypes.bool,
	    children: _react.PropTypes.any,
	    onMouseDown: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      radio: _react.PropTypes.string,
	      radioChecked: _react.PropTypes.string,
	      ripple: _react.PropTypes.string
	    })
	  };
	
	  return ripple(Radio);
	};
	
	exports.default = factory;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.RadioButton = exports.radioButtonFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	var _Radio = __webpack_require__(243);
	
	var _Radio2 = _interopRequireDefault(_Radio);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Radio) {
	  var RadioButton = function (_Component) {
	    _inherits(RadioButton, _Component);
	
	    function RadioButton() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, RadioButton);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(RadioButton)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleClick = function (event) {
	        var _this$props = _this.props;
	        var checked = _this$props.checked;
	        var disabled = _this$props.disabled;
	        var onChange = _this$props.onChange;
	
	        if (event.pageX !== 0 && event.pageY !== 0) _this.blur();
	        if (!disabled && !checked && onChange) onChange(event, _this);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(RadioButton, [{
	      key: 'blur',
	      value: function blur() {
	        this.refs.input.blur();
	      }
	    }, {
	      key: 'focus',
	      value: function focus() {
	        this.refs.input.focus();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var className = _props.className;
	        var checked = _props.checked;
	        var disabled = _props.disabled;
	        var label = _props.label;
	        var theme = _props.theme;
	        var onChange = _props.onChange;
	
	        var others = _objectWithoutProperties(_props, ['className', 'checked', 'disabled', 'label', 'theme', 'onChange']); // eslint-disable-line
	
	
	        var _className = (0, _classnames2.default)(theme[this.props.disabled ? 'disabled' : 'field'], className);
	        return _react2.default.createElement(
	          'label',
	          { 'data-react-toolbox': 'radio-button', className: _className },
	          _react2.default.createElement('input', _extends({}, others, {
	            className: theme.input,
	            onClick: this.handleClick,
	            readOnly: true,
	            ref: 'input',
	            type: 'radio'
	          })),
	          _react2.default.createElement(Radio, { checked: checked, disabled: disabled, theme: theme }),
	          label ? _react2.default.createElement(
	            'span',
	            { className: theme.text },
	            label
	          ) : null
	        );
	      }
	    }]);
	
	    return RadioButton;
	  }(_react.Component);
	
	  RadioButton.propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    label: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.node]),
	    name: _react.PropTypes.string,
	    onBlur: _react.PropTypes.func,
	    onChange: _react.PropTypes.func,
	    onFocus: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      disabled: _react.PropTypes.string,
	      field: _react.PropTypes.string,
	      input: _react.PropTypes.string,
	      text: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.any
	  };
	  RadioButton.defaultProps = {
	    checked: false,
	    className: '',
	    disabled: false
	  };
	
	
	  return RadioButton;
	};
	
	var Radio = (0, _Radio2.default)((0, _Ripple2.default)({ centered: true, spread: 2.6 }));
	var RadioButton = factory(Radio);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.RADIO)(RadioButton);
	exports.radioButtonFactory = factory;
	exports.RadioButton = RadioButton;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.RadioGroup = exports.radioGroupFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _RadioButton = __webpack_require__(244);
	
	var _RadioButton2 = _interopRequireDefault(_RadioButton);
	
	var _react3 = __webpack_require__(246);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(RadioButton) {
	  var RadioGroup = function (_Component) {
	    _inherits(RadioGroup, _Component);
	
	    function RadioGroup() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, RadioGroup);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(RadioGroup)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleChange = function (value) {
	        if (_this.props.onChange) _this.props.onChange(value);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(RadioGroup, [{
	      key: 'renderRadioButtons',
	      value: function renderRadioButtons() {
	        var _this2 = this;
	
	        return _react2.default.Children.map(this.props.children, function (child) {
	          return !(0, _react3.isComponentOfType)(RadioButton, child) ? child : _react2.default.cloneElement(child, {
	            checked: child.props.value === _this2.props.value,
	            disabled: _this2.props.disabled || child.props.disabled,
	            onChange: _this2.handleChange.bind(_this2, child.props.value)
	          });
	        });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'radio-group', className: this.props.className },
	          this.renderRadioButtons()
	        );
	      }
	    }]);
	
	    return RadioGroup;
	  }(_react.Component);
	
	  RadioGroup.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    name: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    value: _react.PropTypes.any
	  };
	  RadioGroup.defaultProps = {
	    className: '',
	    disabled: false
	  };
	
	
	  return RadioGroup;
	};
	
	var RadioGroup = factory(_RadioButton2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.RADIO)(RadioGroup);
	exports.radioGroupFactory = factory;
	exports.RadioGroup = RadioGroup;

/***/ },
/* 246 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isComponentOfType = isComponentOfType;
	function isComponentOfType(classType, reactElement) {
	  return reactElement && reactElement.type === classType;
	}

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(248);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".radio, .radioChecked {\n  position: relative;\n  display: inline-block;\n  width: 1.6rem;\n  height: 1.6rem;\n  vertical-align: top;\n  cursor: pointer;\n  border: 0.2rem solid black;\n  border-radius: 50%; }\n  .radio:before, .radioChecked:before {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.2s;\n    position: absolute;\n    top: 0.2rem;\n    left: 0.2rem;\n    width: 0.8rem;\n    height: 0.8rem;\n    content: \"\";\n    background-color: #3f51b5;\n    border-radius: 50%;\n    transition: transform;\n    transform: scale(0); }\n  .radio .ripple, .radioChecked .ripple {\n    background-color: #3f51b5;\n    opacity: .3;\n    transition-duration: 650ms; }\n\n.radioChecked {\n  border: 0.2rem solid #3f51b5; }\n  .radioChecked:before {\n    transform: scale(1); }\n\n.field, .disabled {\n  position: relative;\n  display: block;\n  height: 1.6rem;\n  margin-bottom: 1.5rem;\n  white-space: nowrap;\n  vertical-align: middle; }\n\n.text {\n  display: inline-block;\n  padding-left: 1rem;\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  color: black;\n  white-space: nowrap;\n  vertical-align: top; }\n\n.input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n  opacity: 0;\n  appearance: none; }\n  .input:focus ~ .radio, .input:focus ~ .radioChecked {\n    box-shadow: 0 0 0 1rem rgba(0, 0, 0, 0.1); }\n  .input:focus ~ .radioChecked {\n    box-shadow: 0 0 0 1rem rgba(63, 81, 181, 0.26); }\n\n.disabled .text {\n  color: rgba(0, 0, 0, 0.26); }\n\n.disabled .radio, .disabled .radioChecked {\n  cursor: auto;\n  border-color: rgba(0, 0, 0, 0.26); }\n\n.disabled .radioChecked {\n  cursor: auto;\n  border-color: rgba(0, 0, 0, 0.26); }\n  .disabled .radioChecked:before {\n    background-color: rgba(0, 0, 0, 0.26); }\n", ""]);
	
	// exports


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tabs = exports.Tab = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Tabs = __webpack_require__(250);
	
	var _TabContent = __webpack_require__(253);
	
	var _Tab = __webpack_require__(251);
	
	var _theme = __webpack_require__(254);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var applyTheme = function applyTheme(Component) {
	  return (0, _reactCssThemr.themr)(_identifiers.TABS, _theme2.default)(Component);
	};
	var ThemedTabContent = applyTheme(_TabContent.TabContent);
	var ThemedTab = applyTheme(_Tab.Tab);
	var ThemedTabs = applyTheme((0, _Tabs.tabsFactory)(ThemedTab, ThemedTabContent));
	
	exports.Tab = ThemedTab;
	exports.Tabs = ThemedTabs;

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tabs = exports.tabsFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Tab = __webpack_require__(251);
	
	var _Tab2 = _interopRequireDefault(_Tab);
	
	var _TabContent = __webpack_require__(253);
	
	var _TabContent2 = _interopRequireDefault(_TabContent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Tab, TabContent) {
	  var Tabs = function (_Component) {
	    _inherits(Tabs, _Component);
	
	    function Tabs() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Tabs);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Tabs)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        pointer: {}
	      }, _this.handleHeaderClick = function (event) {
	        var idx = parseInt(event.currentTarget.id);
	        if (_this.props.onChange) _this.props.onChange(idx);
	      }, _this.handleResize = function () {
	        if (!_this.props.fixed) {
	          return;
	        }
	
	        if (_this.resizeTimeout) {
	          clearTimeout(_this.resizeTimeout);
	        }
	        _this.resizeTimeout = setTimeout(_this.handleResizeEnd, 50);
	      }, _this.handleResizeEnd = function () {
	        _this.updatePointer(_this.props.index);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Tabs, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        !this.props.disableAnimatedBottomBorder && this.updatePointer(this.props.index);
	        window.addEventListener('resize', this.handleResize);
	        this.handleResize();
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        !this.props.disableAnimatedBottomBorder && this.updatePointer(nextProps.index);
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        window.removeEventListener('resize', this.handleResize);
	        clearTimeout(this.resizeTimeout);
	        clearTimeout(this.pointerTimeout);
	      }
	    }, {
	      key: 'parseChildren',
	      value: function parseChildren() {
	        var _this2 = this;
	
	        var headers = [];
	        var contents = [];
	
	        _react2.default.Children.forEach(this.props.children, function (item) {
	          if (item.type === Tab) {
	            headers.push(item);
	            if (item.props.children) {
	              contents.push(_react2.default.createElement(TabContent, { children: item.props.children, theme: _this2.props.theme }));
	            }
	          } else if (item.type === TabContent) {
	            contents.push(item);
	          }
	        });
	
	        return { headers: headers, contents: contents };
	      }
	    }, {
	      key: 'updatePointer',
	      value: function updatePointer(idx) {
	        var _this3 = this;
	
	        clearTimeout(this.pointerTimeout);
	        this.pointerTimeout = setTimeout(function () {
	          var startPoint = _this3.refs.tabs.getBoundingClientRect().left;
	          var label = _this3.refs.navigation.children[idx].getBoundingClientRect();
	          _this3.setState({
	            pointer: {
	              top: _this3.refs.navigation.getBoundingClientRect().height + 'px',
	              left: label.left - startPoint + 'px',
	              width: label.width + 'px'
	            }
	          });
	        }, 20);
	      }
	    }, {
	      key: 'renderHeaders',
	      value: function renderHeaders(headers) {
	        var _this4 = this;
	
	        return headers.map(function (item, idx) {
	          return _react2.default.cloneElement(item, {
	            id: idx,
	            key: idx,
	            theme: _this4.props.theme,
	            active: _this4.props.index === idx,
	            onClick: function onClick(event) {
	              _this4.handleHeaderClick(event);
	              item.props.onClick && item.props.onClick(event);
	            }
	          });
	        });
	      }
	    }, {
	      key: 'renderContents',
	      value: function renderContents(contents) {
	        var _this5 = this;
	
	        var contentElements = contents.map(function (item, idx) {
	          return _react2.default.cloneElement(item, {
	            key: idx,
	            theme: _this5.props.theme,
	            active: _this5.props.index === idx,
	            hidden: _this5.props.index !== idx && _this5.props.hideMode === 'display',
	            tabIndex: idx
	          });
	        });
	
	        if (this.props.hideMode === 'display') {
	          return contentElements;
	        }
	
	        return contentElements.filter(function (item, idx) {
	          return idx === _this5.props.index;
	        });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var _props = this.props;
	        var className = _props.className;
	        var theme = _props.theme;
	        var fixed = _props.fixed;
	        var inverse = _props.inverse;
	
	        var _parseChildren = this.parseChildren();
	
	        var headers = _parseChildren.headers;
	        var contents = _parseChildren.contents;
	
	        var classes = (0, _classnames3.default)(theme.tabs, className, (_classnames = {}, _defineProperty(_classnames, theme.fixed, fixed), _defineProperty(_classnames, theme.inverse, inverse), _classnames));
	        return _react2.default.createElement(
	          'div',
	          { ref: 'tabs', 'data-react-toolbox': 'tabs', className: classes },
	          _react2.default.createElement(
	            'nav',
	            { className: theme.navigation, ref: 'navigation' },
	            this.renderHeaders(headers)
	          ),
	          _react2.default.createElement('span', { className: theme.pointer, style: this.state.pointer }),
	          this.renderContents(contents)
	        );
	      }
	    }]);
	
	    return Tabs;
	  }(_react.Component);
	
	  Tabs.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    disableAnimatedBottomBorder: _react.PropTypes.bool,
	    fixed: _react.PropTypes.bool,
	    hideMode: _react.PropTypes.oneOf(['display', 'unmounted']),
	    index: _react.PropTypes.number,
	    inverse: _react.PropTypes.bool,
	    onChange: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      fixed: _react.PropTypes.string,
	      inverse: _react.PropTypes.string,
	      navigation: _react.PropTypes.string,
	      pointer: _react.PropTypes.string,
	      tabs: _react.PropTypes.string
	    })
	  };
	  Tabs.defaultProps = {
	    index: 0,
	    fixed: false,
	    inverse: false,
	    hideMode: 'unmounted'
	  };
	
	
	  return Tabs;
	};
	
	var Tabs = factory(_Tab2.default, _TabContent2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.TABS)(Tabs);
	exports.tabsFactory = factory;
	exports.Tabs = Tabs;

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tab = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _font_icon = __webpack_require__(252);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Tab = function (_Component) {
	  _inherits(Tab, _Component);
	
	  function Tab() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Tab);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Tab)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleClick = function (event) {
	      if (!_this.props.disabled && _this.props.onClick) {
	        _this.props.onClick(event);
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Tab, [{
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (!prevProps.active && this.props.active && this.props.onActive) {
	        this.props.onActive();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classnames;
	
	      var _props = this.props;
	      var onActive = _props.onActive;
	      var active = _props.active;
	      var activeClassName = _props.activeClassName;
	      var className = _props.className;
	      var disabled = _props.disabled;
	      var hidden = _props.hidden;
	      var label = _props.label;
	      var icon = _props.icon;
	      var theme = _props.theme;
	
	      var other = _objectWithoutProperties(_props, ['onActive', 'active', 'activeClassName', 'className', 'disabled', 'hidden', 'label', 'icon', 'theme']);
	
	      var _className = (0, _classnames3.default)(theme.label, (_classnames = {}, _defineProperty(_classnames, theme.active, active), _defineProperty(_classnames, theme.hidden, hidden), _defineProperty(_classnames, theme.withText, label), _defineProperty(_classnames, theme.withIcon, icon), _defineProperty(_classnames, theme.disabled, disabled), _defineProperty(_classnames, activeClassName, active), _classnames), className);
	
	      return _react2.default.createElement(
	        'label',
	        _extends({}, other, { 'data-react-toolbox': 'tab', className: _className, onClick: this.handleClick }),
	        icon && _react2.default.createElement(_font_icon.FontIcon, { className: theme.icon, value: icon }),
	        label
	      );
	    }
	  }]);
	
	  return Tab;
	}(_react.Component);
	
	Tab.propTypes = {
	  active: _react.PropTypes.bool,
	  activeClassName: _react.PropTypes.string,
	  className: _react.PropTypes.string,
	  disabled: _react.PropTypes.bool,
	  hidden: _react.PropTypes.bool,
	  icon: _react.PropTypes.node,
	  label: _react.PropTypes.node,
	  onActive: _react.PropTypes.func,
	  onClick: _react.PropTypes.func,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    disabled: _react.PropTypes.string,
	    hidden: _react.PropTypes.string,
	    label: _react.PropTypes.string
	  })
	};
	Tab.defaultProps = {
	  active: false,
	  className: '',
	  disabled: false,
	  hidden: false
	};
	exports.default = (0, _reactCssThemr.themr)(_identifiers.TABS)(Tab);
	exports.Tab = Tab;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.FontIcon = undefined;
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _FontIcon2.default;
	exports.FontIcon = _FontIcon2.default;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TabContent = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TabContent = function (_Component) {
	  _inherits(TabContent, _Component);
	
	  function TabContent() {
	    _classCallCheck(this, TabContent);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(TabContent).apply(this, arguments));
	  }
	
	  _createClass(TabContent, [{
	    key: 'render',
	    value: function render() {
	      var className = (0, _classnames3.default)(this.props.theme.tab, _defineProperty({}, this.props.theme.active, this.props.active), this.props.className);
	
	      return _react2.default.createElement(
	        'section',
	        { className: className, tabIndex: this.props.tabIndex },
	        this.props.children
	      );
	    }
	  }]);
	
	  return TabContent;
	}(_react.Component);
	
	TabContent.propTypes = {
	  active: _react.PropTypes.bool,
	  children: _react.PropTypes.node,
	  className: _react.PropTypes.string,
	  tabIndex: _react.PropTypes.number,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    tab: _react.PropTypes.string
	  })
	};
	TabContent.defaultProps = {
	  active: false,
	  className: ''
	};
	exports.default = (0, _reactCssThemr.themr)(_identifiers.TABS)(TabContent);
	exports.TabContent = TabContent;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(255);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".tabs {\n  position: relative;\n  display: flex;\n  flex-direction: column; }\n\n.navigation {\n  display: flex;\n  flex-direction: row;\n  box-shadow: inset 0 -1px #eeeeee; }\n\n.label {\n  padding: 1.7rem 1.2rem;\n  font-size: 1.4rem;\n  font-weight: 500;\n  line-height: 1;\n  color: rgba(0, 0, 0, 0.7);\n  text-align: center;\n  text-transform: uppercase;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: box-shadow, color; }\n  .label.active {\n    color: black; }\n  .label.disabled {\n    opacity: 0.2; }\n  .label:not(.disabled) {\n    cursor: pointer; }\n  .label.hidden {\n    display: none; }\n  .label.withIcon {\n    padding-top: 1.3rem;\n    padding-bottom: 1.3rem; }\n  .label.withText .icon {\n    margin-bottom: 0.8rem; }\n\n.icon {\n  display: block;\n  height: 2.4rem;\n  margin: 0 auto;\n  line-height: 2.4rem; }\n\n.pointer {\n  position: absolute;\n  width: 0;\n  height: 0.2rem;\n  margin-top: -0.2rem;\n  background-color: #3f51b5;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: left, width; }\n\n.tab {\n  display: flex;\n  flex-direction: column;\n  padding: 1.7rem 1.2rem; }\n  .tab:not(.active) {\n    display: none; }\n  .tab.active {\n    display: flex; }\n\n.fixed .label {\n  flex: 1;\n  text-align: center; }\n\n.inverse .navigation {\n  background-color: #3f51b5; }\n\n.inverse .label {\n  color: rgba(255, 255, 255, 0.7); }\n  .inverse .label.active {\n    color: white; }\n\n.inverse .pointer {\n  background-color: #ff4081; }\n", ""]);
	
	// exports


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(257);
	
	__webpack_require__(309);
	
	__webpack_require__(313);
	
	__webpack_require__(319);
	
	__webpack_require__(337);
	
	__webpack_require__(342);
	
	__webpack_require__(344);

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(258);
	__webpack_require__(302);
	module.exports = __webpack_require__(266).Array.from;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(259)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(262)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(260)
	  , defined   = __webpack_require__(261);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 260 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 261 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(263)
	  , $export        = __webpack_require__(264)
	  , redefine       = __webpack_require__(277)
	  , hide           = __webpack_require__(267)
	  , has            = __webpack_require__(278)
	  , Iterators      = __webpack_require__(282)
	  , $iterCreate    = __webpack_require__(283)
	  , setToStringTag = __webpack_require__(298)
	  , getPrototypeOf = __webpack_require__(300)
	  , ITERATOR       = __webpack_require__(299)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 263 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(265)
	  , core      = __webpack_require__(266)
	  , hide      = __webpack_require__(267)
	  , redefine  = __webpack_require__(277)
	  , ctx       = __webpack_require__(280)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 265 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 266 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(268)
	  , createDesc = __webpack_require__(276);
	module.exports = __webpack_require__(272) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(269)
	  , IE8_DOM_DEFINE = __webpack_require__(271)
	  , toPrimitive    = __webpack_require__(275)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(272) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(270);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 270 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(272) && !__webpack_require__(273)(function(){
	  return Object.defineProperty(__webpack_require__(274)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(273)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 273 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(270)
	  , document = __webpack_require__(265).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(270);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 276 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(265)
	  , hide      = __webpack_require__(267)
	  , has       = __webpack_require__(278)
	  , SRC       = __webpack_require__(279)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(266).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 278 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 279 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(281);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 281 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 282 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(284)
	  , descriptor     = __webpack_require__(276)
	  , setToStringTag = __webpack_require__(298)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(267)(IteratorPrototype, __webpack_require__(299)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(269)
	  , dPs         = __webpack_require__(285)
	  , enumBugKeys = __webpack_require__(296)
	  , IE_PROTO    = __webpack_require__(294)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(274)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(297).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(268)
	  , anObject = __webpack_require__(269)
	  , getKeys  = __webpack_require__(286);
	
	module.exports = __webpack_require__(272) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(287)
	  , enumBugKeys = __webpack_require__(296);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(278)
	  , toIObject    = __webpack_require__(288)
	  , arrayIndexOf = __webpack_require__(291)(false)
	  , IE_PROTO     = __webpack_require__(294)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(289)
	  , defined = __webpack_require__(261);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(290);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 290 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(288)
	  , toLength  = __webpack_require__(292)
	  , toIndex   = __webpack_require__(293);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(260)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(260)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(295)('keys')
	  , uid    = __webpack_require__(279);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(265)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 296 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(265).document && document.documentElement;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(268).f
	  , has = __webpack_require__(278)
	  , TAG = __webpack_require__(299)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(295)('wks')
	  , uid        = __webpack_require__(279)
	  , Symbol     = __webpack_require__(265).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(278)
	  , toObject    = __webpack_require__(301)
	  , IE_PROTO    = __webpack_require__(294)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(261);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(280)
	  , $export        = __webpack_require__(264)
	  , toObject       = __webpack_require__(301)
	  , call           = __webpack_require__(303)
	  , isArrayIter    = __webpack_require__(304)
	  , toLength       = __webpack_require__(292)
	  , createProperty = __webpack_require__(305)
	  , getIterFn      = __webpack_require__(306);
	
	$export($export.S + $export.F * !__webpack_require__(308)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(269);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(282)
	  , ITERATOR   = __webpack_require__(299)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(268)
	  , createDesc      = __webpack_require__(276);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(307)
	  , ITERATOR  = __webpack_require__(299)('iterator')
	  , Iterators = __webpack_require__(282);
	module.exports = __webpack_require__(266).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(290)
	  , TAG = __webpack_require__(299)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(299)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(310);
	module.exports = __webpack_require__(266).Array.values;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(311)
	  , step             = __webpack_require__(312)
	  , Iterators        = __webpack_require__(282)
	  , toIObject        = __webpack_require__(288);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(262)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(299)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(267)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 312 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(314);
	module.exports = __webpack_require__(266).Array.findIndex;

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(264)
	  , $find   = __webpack_require__(315)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(311)(KEY);

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(280)
	  , IObject  = __webpack_require__(289)
	  , toObject = __webpack_require__(301)
	  , toLength = __webpack_require__(292)
	  , asc      = __webpack_require__(316);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(317);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(270)
	  , isArray  = __webpack_require__(318)
	  , SPECIES  = __webpack_require__(299)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(290);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(320);
	__webpack_require__(258);
	__webpack_require__(321);
	__webpack_require__(322);
	__webpack_require__(334);
	module.exports = __webpack_require__(266).Map;

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(307)
	  , test    = {};
	test[__webpack_require__(299)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(277)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(310)
	  , redefine      = __webpack_require__(277)
	  , global        = __webpack_require__(265)
	  , hide          = __webpack_require__(267)
	  , Iterators     = __webpack_require__(282)
	  , wks           = __webpack_require__(299)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(323);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(329)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(268).f
	  , create      = __webpack_require__(284)
	  , redefineAll = __webpack_require__(324)
	  , ctx         = __webpack_require__(280)
	  , anInstance  = __webpack_require__(325)
	  , defined     = __webpack_require__(261)
	  , forOf       = __webpack_require__(326)
	  , $iterDefine = __webpack_require__(262)
	  , step        = __webpack_require__(312)
	  , setSpecies  = __webpack_require__(327)
	  , DESCRIPTORS = __webpack_require__(272)
	  , fastKey     = __webpack_require__(328).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(277);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 325 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(280)
	  , call        = __webpack_require__(303)
	  , isArrayIter = __webpack_require__(304)
	  , anObject    = __webpack_require__(269)
	  , toLength    = __webpack_require__(292)
	  , getIterFn   = __webpack_require__(306)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(265)
	  , dP          = __webpack_require__(268)
	  , DESCRIPTORS = __webpack_require__(272)
	  , SPECIES     = __webpack_require__(299)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(279)('meta')
	  , isObject = __webpack_require__(270)
	  , has      = __webpack_require__(278)
	  , setDesc  = __webpack_require__(268).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(273)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(265)
	  , $export           = __webpack_require__(264)
	  , redefine          = __webpack_require__(277)
	  , redefineAll       = __webpack_require__(324)
	  , meta              = __webpack_require__(328)
	  , forOf             = __webpack_require__(326)
	  , anInstance        = __webpack_require__(325)
	  , isObject          = __webpack_require__(270)
	  , fails             = __webpack_require__(273)
	  , $iterDetect       = __webpack_require__(308)
	  , setToStringTag    = __webpack_require__(298)
	  , inheritIfRequired = __webpack_require__(330);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(270)
	  , setPrototypeOf = __webpack_require__(331).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(270)
	  , anObject = __webpack_require__(269);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(280)(Function.call, __webpack_require__(332).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(333)
	  , createDesc     = __webpack_require__(276)
	  , toIObject      = __webpack_require__(288)
	  , toPrimitive    = __webpack_require__(275)
	  , has            = __webpack_require__(278)
	  , IE8_DOM_DEFINE = __webpack_require__(271)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(272) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 333 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(264);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(335)('Map')});

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(307)
	  , from    = __webpack_require__(336);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(326);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(338);
	module.exports = __webpack_require__(266).String.startsWith;

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(264)
	  , toLength    = __webpack_require__(292)
	  , context     = __webpack_require__(339)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(341)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(340)
	  , defined  = __webpack_require__(261);
	
	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(270)
	  , cof      = __webpack_require__(290)
	  , MATCH    = __webpack_require__(299)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(299)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(343);
	module.exports = __webpack_require__(266).String.includes;

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(264)
	  , context  = __webpack_require__(339)
	  , INCLUDES = 'includes';
	
	$export($export.P + $export.F * __webpack_require__(341)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(345);
	__webpack_require__(320);
	__webpack_require__(353);
	__webpack_require__(354);
	module.exports = __webpack_require__(266).Symbol;

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(265)
	  , has            = __webpack_require__(278)
	  , DESCRIPTORS    = __webpack_require__(272)
	  , $export        = __webpack_require__(264)
	  , redefine       = __webpack_require__(277)
	  , META           = __webpack_require__(328).KEY
	  , $fails         = __webpack_require__(273)
	  , shared         = __webpack_require__(295)
	  , setToStringTag = __webpack_require__(298)
	  , uid            = __webpack_require__(279)
	  , wks            = __webpack_require__(299)
	  , wksExt         = __webpack_require__(346)
	  , wksDefine      = __webpack_require__(347)
	  , keyOf          = __webpack_require__(348)
	  , enumKeys       = __webpack_require__(349)
	  , isArray        = __webpack_require__(318)
	  , anObject       = __webpack_require__(269)
	  , toIObject      = __webpack_require__(288)
	  , toPrimitive    = __webpack_require__(275)
	  , createDesc     = __webpack_require__(276)
	  , _create        = __webpack_require__(284)
	  , gOPNExt        = __webpack_require__(351)
	  , $GOPD          = __webpack_require__(332)
	  , $DP            = __webpack_require__(268)
	  , $keys          = __webpack_require__(286)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(352).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(333).f  = $propertyIsEnumerable;
	  __webpack_require__(350).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(263)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(267)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(299);

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(265)
	  , core           = __webpack_require__(266)
	  , LIBRARY        = __webpack_require__(263)
	  , wksExt         = __webpack_require__(346)
	  , defineProperty = __webpack_require__(268).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(286)
	  , toIObject = __webpack_require__(288);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(286)
	  , gOPS    = __webpack_require__(350)
	  , pIE     = __webpack_require__(333);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 350 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(288)
	  , gOPN      = __webpack_require__(352).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(287)
	  , hiddenKeys = __webpack_require__(296).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(347)('asyncIterator');

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(347)('observable');

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.AppBar = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _AppBar = __webpack_require__(356);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _theme = __webpack_require__(357);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AppBar = (0, _AppBar.appBarFactory)(_FontIcon2.default);
	var ThemedAppBar = (0, _reactCssThemr.themr)(_identifiers.APP_BAR, _theme2.default)(AppBar);
	
	exports.default = ThemedAppBar;
	exports.AppBar = ThemedAppBar;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.AppBar = exports.appBarFactory = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var factory = function factory(FontIcon) {
	  var AppBar = function AppBar(_ref) {
	    var _classnames;
	
	    var children = _ref.children;
	    var leftIcon = _ref.leftIcon;
	    var onLeftIconClick = _ref.onLeftIconClick;
	    var onRightIconClick = _ref.onRightIconClick;
	    var rightIcon = _ref.rightIcon;
	    var theme = _ref.theme;
	    var title = _ref.title;
	
	    var props = _objectWithoutProperties(_ref, ['children', 'leftIcon', 'onLeftIconClick', 'onRightIconClick', 'rightIcon', 'theme', 'title']);
	
	    var className = (0, _classnames3.default)(theme.appBar, (_classnames = {}, _defineProperty(_classnames, theme.fixed, props.fixed), _defineProperty(_classnames, theme.flat, props.flat), _classnames), props.className);
	
	    return _react2.default.createElement(
	      'header',
	      { className: className, 'data-react-toolbox': 'app-bar' },
	      leftIcon && _react2.default.createElement(FontIcon, {
	        className: (0, _classnames3.default)(theme.leftIcon),
	        onClick: onLeftIconClick,
	        value: leftIcon }),
	      title && _react2.default.createElement(
	        'h1',
	        { className: (0, _classnames3.default)(theme.title) },
	        title
	      ),
	      children,
	      rightIcon && _react2.default.createElement(FontIcon, {
	        className: (0, _classnames3.default)(theme.rightIcon),
	        onClick: onRightIconClick,
	        value: rightIcon })
	    );
	  };
	
	  AppBar.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    fixed: _react.PropTypes.bool,
	    flat: _react.PropTypes.bool,
	    leftIcon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    onLeftIconClick: _react.PropTypes.func,
	    onRightIconClick: _react.PropTypes.func,
	    rightIcon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    theme: _react.PropTypes.shape({
	      appBar: _react.PropTypes.string,
	      fixed: _react.PropTypes.string,
	      flat: _react.PropTypes.string,
	      leftIcon: _react.PropTypes.string,
	      rightIcon: _react.PropTypes.string,
	      title: _react.PropTypes.string
	    }),
	    title: _react.PropTypes.string
	  };
	
	  AppBar.defaultProps = {
	    className: '',
	    fixed: false,
	    flat: false
	  };
	
	  return AppBar;
	};
	
	var AppBar = factory(_FontIcon2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.APP_BAR, null)(AppBar);
	exports.appBarFactory = factory;
	exports.AppBar = AppBar;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(358);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".appBar {\n  display: flex;\n  height: 6.4rem;\n  align-items: center;\n  padding: 0 2.4rem;\n  color: white;\n  background: #303f9f; }\n  @media screen and (max-width: 480px) and (orientation: portrait) {\n    .appBar {\n      height: 5.6rem; } }\n  @media screen and (max-width: 600px) and (orientation: landscape) {\n    .appBar {\n      height: 4.8rem; } }\n  .appBar:not(.flat) {\n    z-index: 100;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26); }\n  .appBar.fixed {\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    z-index: 300; }\n  .appBar a {\n    color: white; }\n  .appBar .title {\n    flex-grow: 1;\n    font-size: 1.8rem;\n    font-weight: bold; }\n    .appBar .title > small {\n      font-size: 1.8rem;\n      font-weight: normal; }\n  .appBar .leftIcon {\n    padding: 1.2rem 1.2rem 1.2rem 0;\n    text-align: left; }\n  .appBar .rightIcon {\n    padding: 1.2rem 0 1.2rem 1.2rem;\n    margin-left: auto;\n    text-align: right; }\n", ""]);
	
	// exports


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Autocomplete = undefined;
	
	var _identifiers = __webpack_require__(3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _Autocomplete = __webpack_require__(360);
	
	var _chip = __webpack_require__(363);
	
	var _chip2 = _interopRequireDefault(_chip);
	
	var _input = __webpack_require__(366);
	
	var _input2 = _interopRequireDefault(_input);
	
	var _theme = __webpack_require__(369);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Autocomplete = (0, _Autocomplete.autocompleteFactory)(_chip2.default, _input2.default);
	var ThemedAutocomplete = (0, _reactCssThemr.themr)(_identifiers.AUTOCOMPLETE, _theme2.default)(Autocomplete);
	
	exports.default = ThemedAutocomplete;
	exports.Autocomplete = ThemedAutocomplete;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Autocomplete = exports.autocompleteFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(46);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames4 = __webpack_require__(43);
	
	var _classnames5 = _interopRequireDefault(_classnames4);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Chip = __webpack_require__(361);
	
	var _Chip2 = _interopRequireDefault(_Chip);
	
	var _Input = __webpack_require__(362);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var POSITION = {
	  AUTO: 'auto',
	  DOWN: 'down',
	  UP: 'up'
	};
	
	var factory = function factory(Chip, Input) {
	  var Autocomplete = function (_Component) {
	    _inherits(Autocomplete, _Component);
	
	    function Autocomplete() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Autocomplete);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Autocomplete)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        direction: _this.props.direction,
	        focus: false,
	        showAllSuggestions: _this.props.showSuggestionsWhenValueIsSet,
	        query: _this.query(_this.props.value)
	      }, _this.handleChange = function (keys, event) {
	        var key = _this.props.multiple ? keys : keys[0];
	        var query = _this.query(key);
	        if (_this.props.onChange) _this.props.onChange(key, event);
	        _this.setState({ focus: false, query: query, showAllSuggestions: _this.props.showSuggestionsWhenValueIsSet }, function () {
	          _reactDom2.default.findDOMNode(_this).querySelector('input').blur();
	        });
	      }, _this.handleQueryBlur = function () {
	        if (_this.state.focus) _this.setState({ focus: false });
	      }, _this.handleQueryChange = function (value) {
	        _this.setState({ query: value, showAllSuggestions: false });
	      }, _this.handleQueryFocus = function () {
	        _this.refs.suggestions.scrollTop = 0;
	        _this.setState({ active: '', focus: true });
	      }, _this.handleQueryKeyDown = function (event) {
	        // Clear query when pressing backspace and showing all suggestions.
	        var shouldClearQuery = event.which === 8 && _this.props.showSuggestionsWhenValueIsSet && _this.state.showAllSuggestions;
	        if (shouldClearQuery) {
	          _this.setState({ query: '' });
	        }
	      }, _this.handleQueryKeyUp = function (event) {
	        if (event.which === 13) {
	          var target = _this.state.active;
	          if (!target) {
	            target = _this.props.allowCreate ? _this.state.query : [].concat(_toConsumableArray(_this.suggestions().keys()))[0];
	            _this.setState({ active: target });
	          }
	          _this.select(event, target);
	        }
	
	        if (event.which === 27) _reactDom2.default.findDOMNode(_this).querySelector('input').blur();
	
	        if ([40, 38].indexOf(event.which) !== -1) {
	          var suggestionsKeys = [].concat(_toConsumableArray(_this.suggestions().keys()));
	          var index = suggestionsKeys.indexOf(_this.state.active) + (event.which === 40 ? +1 : -1);
	          if (index < 0) index = suggestionsKeys.length - 1;
	          if (index >= suggestionsKeys.length) index = 0;
	          _this.setState({ active: suggestionsKeys[index] });
	        }
	      }, _this.handleSuggestionHover = function (event) {
	        _this.setState({ active: event.target.id });
	      }, _this.select = function (event, target) {
	        _events2.default.pauseEvent(event);
	        var values = _this.values(_this.props.value);
	        var newValue = target === void 0 ? event.target.id : target;
	        _this.handleChange([newValue].concat(_toConsumableArray(values.keys())), event);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Autocomplete, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (!this.props.multiple) {
	          this.setState({
	            query: this.query(nextProps.value)
	          });
	        }
	      }
	    }, {
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps, nextState) {
	        if (!this.state.focus && nextState.focus && this.props.direction === POSITION.AUTO) {
	          var direction = this.calculateDirection();
	          if (this.state.direction !== direction) {
	            this.setState({ direction: direction });
	          }
	        }
	        return true;
	      }
	    }, {
	      key: 'calculateDirection',
	      value: function calculateDirection() {
	        if (this.props.direction === 'auto') {
	          var client = _reactDom2.default.findDOMNode(this.refs.input).getBoundingClientRect();
	          var screen_height = window.innerHeight || document.documentElement.offsetHeight;
	          var up = client.top > screen_height / 2 + client.height;
	          return up ? 'up' : 'down';
	        } else {
	          return this.props.direction;
	        }
	      }
	    }, {
	      key: 'query',
	      value: function query(key) {
	        var query_value = '';
	        if (!this.props.multiple && key) {
	          var source_value = this.source().get(key);
	          query_value = source_value ? source_value : key;
	        }
	        return query_value;
	      }
	    }, {
	      key: 'suggestions',
	      value: function suggestions() {
	        var suggest = new Map();
	        var rawQuery = this.state.query || (this.props.multiple ? '' : this.props.value);
	        var query = (rawQuery || '').toLowerCase().trim();
	        var values = this.values();
	        var source = this.source();
	
	        // Suggest any non-set value which matches the query
	        if (this.props.multiple) {
	          var _iteratorNormalCompletion = true;
	          var _didIteratorError = false;
	          var _iteratorError = undefined;
	
	          try {
	            for (var _iterator = source[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	              var _step$value = _slicedToArray(_step.value, 2);
	
	              var key = _step$value[0];
	              var value = _step$value[1];
	
	              if (!values.has(key) && this.matches(value.toLowerCase().trim(), query)) {
	                suggest.set(key, value);
	              }
	            }
	
	            // When multiple is false, suggest any value which matches the query if showAllSuggestions is false
	          } catch (err) {
	            _didIteratorError = true;
	            _iteratorError = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion && _iterator.return) {
	                _iterator.return();
	              }
	            } finally {
	              if (_didIteratorError) {
	                throw _iteratorError;
	              }
	            }
	          }
	        } else if (query && !this.state.showAllSuggestions) {
	          var _iteratorNormalCompletion2 = true;
	          var _didIteratorError2 = false;
	          var _iteratorError2 = undefined;
	
	          try {
	            for (var _iterator2 = source[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	              var _step2$value = _slicedToArray(_step2.value, 2);
	
	              var key = _step2$value[0];
	              var value = _step2$value[1];
	
	              if (this.matches(value.toLowerCase().trim(), query)) {
	                suggest.set(key, value);
	              }
	            }
	
	            // When multiple is false, suggest all values when showAllSuggestions is true
	          } catch (err) {
	            _didIteratorError2 = true;
	            _iteratorError2 = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                _iterator2.return();
	              }
	            } finally {
	              if (_didIteratorError2) {
	                throw _iteratorError2;
	              }
	            }
	          }
	        } else {
	          suggest = source;
	        }
	
	        return suggest;
	      }
	    }, {
	      key: 'matches',
	      value: function matches(value, query) {
	        var suggestionMatch = this.props.suggestionMatch;
	
	
	        if (suggestionMatch === 'start') {
	          return value.startsWith(query);
	        } else if (suggestionMatch === 'anywhere') {
	          return value.includes(query);
	        } else if (suggestionMatch === 'word') {
	          var re = new RegExp('\\b' + query, 'g');
	          return re.test(value);
	        }
	
	        return false;
	      }
	    }, {
	      key: 'source',
	      value: function source() {
	        var src = this.props.source;
	
	        if (src.hasOwnProperty('length')) {
	          return new Map(src.map(function (item) {
	            return Array.isArray(item) ? [].concat(_toConsumableArray(item)) : [item, item];
	          }));
	        } else {
	          return new Map(Object.keys(src).map(function (key) {
	            return [key, src[key]];
	          }));
	        }
	      }
	    }, {
	      key: 'values',
	      value: function values() {
	        var valueMap = new Map();
	        var vals = this.props.multiple ? this.props.value : [this.props.value];
	        var _iteratorNormalCompletion3 = true;
	        var _didIteratorError3 = false;
	        var _iteratorError3 = undefined;
	
	        try {
	          for (var _iterator3 = this.source()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	            var _step3$value = _slicedToArray(_step3.value, 2);
	
	            var k = _step3$value[0];
	            var v = _step3$value[1];
	
	            if (vals.indexOf(k) !== -1) valueMap.set(k, v);
	          }
	        } catch (err) {
	          _didIteratorError3 = true;
	          _iteratorError3 = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion3 && _iterator3.return) {
	              _iterator3.return();
	            }
	          } finally {
	            if (_didIteratorError3) {
	              throw _iteratorError3;
	            }
	          }
	        }
	
	        return valueMap;
	      }
	    }, {
	      key: 'unselect',
	      value: function unselect(key, event) {
	        if (!this.props.disabled) {
	          var values = this.values(this.props.value);
	          values.delete(key);
	          this.handleChange([].concat(_toConsumableArray(values.keys())), event);
	        }
	      }
	    }, {
	      key: 'renderSelected',
	      value: function renderSelected() {
	        var _this2 = this;
	
	        if (this.props.multiple) {
	          var selectedItems = [].concat(_toConsumableArray(this.values())).map(function (_ref) {
	            var _ref2 = _slicedToArray(_ref, 2);
	
	            var key = _ref2[0];
	            var value = _ref2[1];
	
	            return _react2.default.createElement(
	              Chip,
	              {
	                key: key,
	                className: _this2.props.theme.value,
	                deletable: true,
	                onDeleteClick: _this2.unselect.bind(_this2, key)
	              },
	              value
	            );
	          });
	
	          return _react2.default.createElement(
	            'ul',
	            { className: this.props.theme.values },
	            selectedItems
	          );
	        }
	      }
	    }, {
	      key: 'renderSuggestions',
	      value: function renderSuggestions() {
	        var _this3 = this;
	
	        var theme = this.props.theme;
	
	        var suggestions = [].concat(_toConsumableArray(this.suggestions())).map(function (_ref3) {
	          var _ref4 = _slicedToArray(_ref3, 2);
	
	          var key = _ref4[0];
	          var value = _ref4[1];
	
	          var className = (0, _classnames5.default)(theme.suggestion, _defineProperty({}, theme.active, _this3.state.active === key));
	          return _react2.default.createElement(
	            'li',
	            {
	              id: key,
	              key: key,
	              className: className,
	              onMouseDown: _this3.select,
	              onMouseOver: _this3.handleSuggestionHover
	            },
	            value
	          );
	        });
	
	        var className = (0, _classnames5.default)(theme.suggestions, _defineProperty({}, theme.up, this.state.direction === 'up'));
	        return _react2.default.createElement(
	          'ul',
	          { ref: 'suggestions', className: className },
	          suggestions
	        );
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var allowCreate = _props.allowCreate;
	        var error = _props.error;
	        var label = _props.label;
	        var source = _props.source;
	        var suggestionMatch = _props.suggestionMatch;
	        var selectedPosition = _props.selectedPosition;
	        var showSuggestionsWhenValueIsSet = _props.showSuggestionsWhenValueIsSet;
	        var theme = _props.theme;
	
	        var other = _objectWithoutProperties(_props, ['allowCreate', 'error', 'label', 'source', 'suggestionMatch', 'selectedPosition', 'showSuggestionsWhenValueIsSet', 'theme']);
	
	        var className = (0, _classnames5.default)(theme.autocomplete, _defineProperty({}, theme.focus, this.state.focus), this.props.className);
	
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'autocomplete', className: className },
	          this.props.selectedPosition === 'above' ? this.renderSelected() : null,
	          _react2.default.createElement(Input, _extends({}, other, {
	            ref: 'input',
	            className: theme.input,
	            error: error,
	            label: label,
	            onBlur: this.handleQueryBlur,
	            onChange: this.handleQueryChange,
	            onFocus: this.handleQueryFocus,
	            onKeyDown: this.handleQueryKeyDown,
	            onKeyUp: this.handleQueryKeyUp,
	            value: this.state.query
	          })),
	          this.renderSuggestions(),
	          this.props.selectedPosition === 'below' ? this.renderSelected() : null
	        );
	      }
	    }]);
	
	    return Autocomplete;
	  }(_react.Component);
	
	  Autocomplete.propTypes = {
	    allowCreate: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    direction: _react.PropTypes.oneOf(['auto', 'up', 'down']),
	    disabled: _react.PropTypes.bool,
	    error: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    multiple: _react.PropTypes.bool,
	    onChange: _react.PropTypes.func,
	    selectedPosition: _react.PropTypes.oneOf(['above', 'below']),
	    showSuggestionsWhenValueIsSet: _react.PropTypes.bool,
	    source: _react.PropTypes.any,
	    suggestionMatch: _react.PropTypes.oneOf(['start', 'anywhere', 'word']),
	    theme: _react.PropTypes.shape({
	      active: _react.PropTypes.string,
	      autocomplete: _react.PropTypes.string,
	      focus: _react.PropTypes.string,
	      input: _react.PropTypes.string,
	      label: _react.PropTypes.string,
	      suggestion: _react.PropTypes.string,
	      suggestions: _react.PropTypes.string,
	      up: _react.PropTypes.string,
	      value: _react.PropTypes.string,
	      values: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.any
	  };
	  Autocomplete.defaultProps = {
	    allowCreate: false,
	    className: '',
	    direction: 'auto',
	    selectedPosition: 'above',
	    multiple: true,
	    showSuggestionsWhenValueIsSet: false,
	    source: {},
	    suggestionMatch: 'start'
	  };
	
	
	  return Autocomplete;
	};
	
	var Autocomplete = factory(_Chip2.default, _Input2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.AUTOCOMPLETE)(Autocomplete);
	exports.autocompleteFactory = factory;
	exports.Autocomplete = Autocomplete;

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Chip = exports.chipFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Avatar = __webpack_require__(202);
	
	var _Avatar2 = _interopRequireDefault(_Avatar);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var factory = function factory(Avatar) {
	  var Chip = function Chip(_ref) {
	    var _classnames;
	
	    var children = _ref.children;
	    var className = _ref.className;
	    var deletable = _ref.deletable;
	    var onDeleteClick = _ref.onDeleteClick;
	    var theme = _ref.theme;
	
	    var other = _objectWithoutProperties(_ref, ['children', 'className', 'deletable', 'onDeleteClick', 'theme']);
	
	    var hasAvatar = false;
	    if (_react2.default.Children.count(children)) {
	      var firstChild = children[0];
	      hasAvatar = firstChild && firstChild.type && firstChild.type === Avatar;
	    }
	
	    var classes = (0, _classnames3.default)(theme.chip, (_classnames = {}, _defineProperty(_classnames, theme.deletable, !!deletable), _defineProperty(_classnames, theme.avatar, !!hasAvatar), _classnames), className);
	
	    return _react2.default.createElement(
	      'div',
	      _extends({ 'data-react-toolbox': 'chip', className: classes }, other),
	      typeof children === 'string' ? _react2.default.createElement(
	        'span',
	        null,
	        children
	      ) : children,
	      deletable ? _react2.default.createElement(
	        'span',
	        { className: theme.delete, onClick: onDeleteClick },
	        _react2.default.createElement(
	          'svg',
	          { viewBox: '0 0 40 40', className: theme.deleteIcon },
	          _react2.default.createElement('path', { className: theme.deleteX, d: 'M 12,12 L 28,28 M 28,12 L 12,28' })
	        )
	      ) : null
	    );
	  };
	
	  Chip.propTypes = {
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    deletable: _react.PropTypes.bool,
	    onDeleteClick: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      avatar: _react.PropTypes.string,
	      chip: _react.PropTypes.string,
	      deletable: _react.PropTypes.string,
	      delete: _react.PropTypes.string,
	      deleteIcon: _react.PropTypes.string,
	      deleteX: _react.PropTypes.string
	    })
	  };
	
	  Chip.defaultProps = {
	    className: '',
	    deletable: false
	  };
	
	  return Chip;
	};
	
	var Chip = factory(_Avatar2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.CHIP)(Chip);
	exports.chipFactory = factory;
	exports.Chip = Chip;

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Input = exports.inputFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames4 = __webpack_require__(43);
	
	var _classnames5 = _interopRequireDefault(_classnames4);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(FontIcon) {
	  var Input = function (_React$Component) {
	    _inherits(Input, _React$Component);
	
	    function Input() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Input);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Input)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleChange = function (event) {
	        var _this$props = _this.props;
	        var onChange = _this$props.onChange;
	        var multiline = _this$props.multiline;
	        var maxLength = _this$props.maxLength;
	
	        var valueFromEvent = event.target.value;
	
	        // Trim value to maxLength if that exists (only on multiline inputs).
	        // Note that this is still required even tho we have the onKeyPress filter
	        // because the user could paste smt in the textarea.
	        var haveToTrim = multiline && maxLength && event.target.value.length > maxLength;
	        var value = haveToTrim ? valueFromEvent.substr(0, maxLength) : valueFromEvent;
	
	        // propagate to to store and therefore to the input
	        if (onChange) onChange(value, event);
	      }, _this.handleAutoresize = function () {
	        var element = _this.refs.input;
	        // compute the height difference between inner height and outer height
	        var style = getComputedStyle(element, null);
	        var heightOffset = style.boxSizing === 'content-box' ? -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom)) : parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
	
	        // resize the input to its content size
	        element.style.height = 'auto';
	        element.style.height = element.scrollHeight + heightOffset + 'px';
	      }, _this.handleKeyPress = function (event) {
	        // prevent insertion of more characters if we're a multiline input
	        // and maxLength exists
	        var _this$props2 = _this.props;
	        var multiline = _this$props2.multiline;
	        var maxLength = _this$props2.maxLength;
	        var onKeyPress = _this$props2.onKeyPress;
	
	        if (multiline && maxLength) {
	          // check if smt is selected, in which case the newly added charcter would
	          // replace the selected characters, so the length of value doesn't actually
	          // increase.
	          var isReplacing = event.target.selectionEnd - event.target.selectionStart;
	          var value = event.target.value;
	
	          if (!isReplacing && value.length === maxLength) {
	            event.preventDefault();
	            event.stopPropagation();
	            return;
	          }
	        }
	
	        if (onKeyPress) onKeyPress(event);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Input, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        if (this.props.multiline) {
	          window.addEventListener('resize', this.handleAutoresize);
	          this.handleAutoresize();
	        }
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (!this.props.multiline && nextProps.multiline) {
	          window.addEventListener('resize', this.handleAutoresize);
	        } else if (this.props.multiline && !nextProps.multiline) {
	          window.removeEventListener('resize', this.handleAutoresize);
	        }
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate() {
	        // resize the textarea, if nessesary
	        if (this.props.multiline) this.handleAutoresize();
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (this.props.multiline) window.removeEventListener('resize', this.handleAutoresize);
	      }
	    }, {
	      key: 'blur',
	      value: function blur() {
	        this.refs.input.blur();
	      }
	    }, {
	      key: 'focus',
	      value: function focus() {
	        this.refs.input.focus();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classnames2;
	
	        var _props = this.props;
	        var children = _props.children;
	        var disabled = _props.disabled;
	        var error = _props.error;
	        var floating = _props.floating;
	        var hint = _props.hint;
	        var icon = _props.icon;
	        var name = _props.name;
	        var labelText = _props.label;
	        var maxLength = _props.maxLength;
	        var multiline = _props.multiline;
	        var required = _props.required;
	        var theme = _props.theme;
	        var type = _props.type;
	        var value = _props.value;
	        var onKeyPress = _props.onKeyPress;
	
	        var others = _objectWithoutProperties(_props, ['children', 'disabled', 'error', 'floating', 'hint', 'icon', 'name', 'label', 'maxLength', 'multiline', 'required', 'theme', 'type', 'value', 'onKeyPress']);
	
	        var length = maxLength && value ? value.length : 0;
	        var labelClassName = (0, _classnames5.default)(theme.label, _defineProperty({}, theme.fixed, !floating));
	
	        var className = (0, _classnames5.default)(theme.input, (_classnames2 = {}, _defineProperty(_classnames2, theme.disabled, disabled), _defineProperty(_classnames2, theme.errored, error), _defineProperty(_classnames2, theme.hidden, type === 'hidden'), _defineProperty(_classnames2, theme.withIcon, icon), _classnames2), this.props.className);
	
	        var valuePresent = value !== null && value !== undefined && value !== '' && !((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === Number && isNaN(value));
	
	        var inputElementProps = _extends({}, others, {
	          className: (0, _classnames5.default)(theme.inputElement, _defineProperty({}, theme.filled, valuePresent)),
	          onChange: this.handleChange,
	          ref: 'input',
	          role: 'input',
	          name: name,
	          disabled: disabled,
	          required: required,
	          type: type,
	          value: value
	        });
	        if (!multiline) {
	          inputElementProps.maxLength = maxLength;
	          inputElementProps.onKeyPress = onKeyPress;
	        } else {
	          inputElementProps.rows = 1;
	          inputElementProps.onKeyPress = this.handleKeyPress;
	        }
	
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'input', className: className },
	          _react2.default.createElement(multiline ? 'textarea' : 'input', inputElementProps),
	          icon ? _react2.default.createElement(FontIcon, { className: theme.icon, value: icon }) : null,
	          _react2.default.createElement('span', { className: theme.bar }),
	          labelText ? _react2.default.createElement(
	            'label',
	            { className: labelClassName },
	            labelText,
	            required ? _react2.default.createElement(
	              'span',
	              { className: theme.required },
	              ' * '
	            ) : null
	          ) : null,
	          hint ? _react2.default.createElement(
	            'span',
	            { className: theme.hint },
	            hint
	          ) : null,
	          error ? _react2.default.createElement(
	            'span',
	            { className: theme.error },
	            error
	          ) : null,
	          maxLength ? _react2.default.createElement(
	            'span',
	            { className: theme.counter },
	            length,
	            '/',
	            maxLength
	          ) : null,
	          children
	        );
	      }
	    }]);
	
	    return Input;
	  }(_react2.default.Component);
	
	  Input.propTypes = {
	    children: _react2.default.PropTypes.any,
	    className: _react2.default.PropTypes.string,
	    disabled: _react2.default.PropTypes.bool,
	    error: _react2.default.PropTypes.string,
	    floating: _react2.default.PropTypes.bool,
	    hint: _react2.default.PropTypes.string,
	    icon: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.element]),
	    label: _react2.default.PropTypes.string,
	    maxLength: _react2.default.PropTypes.number,
	    multiline: _react2.default.PropTypes.bool,
	    name: _react2.default.PropTypes.string,
	    onBlur: _react2.default.PropTypes.func,
	    onChange: _react2.default.PropTypes.func,
	    onFocus: _react2.default.PropTypes.func,
	    onKeyPress: _react2.default.PropTypes.func,
	    required: _react2.default.PropTypes.bool,
	    theme: _react2.default.PropTypes.shape({
	      bar: _react2.default.PropTypes.string,
	      counter: _react2.default.PropTypes.string,
	      disabled: _react2.default.PropTypes.string,
	      error: _react2.default.PropTypes.string,
	      errored: _react2.default.PropTypes.string,
	      hidden: _react2.default.PropTypes.string,
	      hint: _react2.default.PropTypes.string,
	      icon: _react2.default.PropTypes.string,
	      input: _react2.default.PropTypes.string,
	      inputElement: _react2.default.PropTypes.string,
	      required: _react2.default.PropTypes.string,
	      withIcon: _react2.default.PropTypes.string
	    }),
	    type: _react2.default.PropTypes.string,
	    value: _react2.default.PropTypes.any
	  };
	  Input.defaultProps = {
	    className: '',
	    hint: '',
	    disabled: false,
	    floating: true,
	    multiline: false,
	    required: false,
	    type: 'text'
	  };
	
	
	  return Input;
	};
	
	var Input = factory(_FontIcon2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.INPUT, null, { withRef: true })(Input);
	exports.inputFactory = factory;
	exports.Input = Input;

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Chip = undefined;
	
	var _identifiers = __webpack_require__(3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _Chip = __webpack_require__(361);
	
	var _avatar = __webpack_require__(203);
	
	var _avatar2 = _interopRequireDefault(_avatar);
	
	var _theme = __webpack_require__(364);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Chip = (0, _Chip.chipFactory)(_avatar2.default);
	var ThemedChip = (0, _reactCssThemr.themr)(_identifiers.CHIP, _theme2.default)(Chip);
	
	exports.default = ThemedChip;
	exports.Chip = ThemedChip;

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(365);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".chip {\n  position: relative;\n  display: inline-block;\n  max-width: 100%;\n  padding: 0 1.2rem;\n  margin-right: 0.25rem;\n  overflow: hidden;\n  font-size: 1.4rem;\n  line-height: 3.2rem;\n  color: #757575;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background-color: #eeeeee;\n  border-radius: 3.2rem; }\n\n.avatar {\n  padding-left: 0; }\n  .avatar > [data-react-toolbox=\"avatar\"] {\n    width: 3.2rem;\n    height: 3.2rem;\n    margin-right: 0.8rem;\n    vertical-align: middle; }\n    .avatar > [data-react-toolbox=\"avatar\"] > span {\n      font-size: 2rem;\n      line-height: 3.2rem; }\n\n.deletable {\n  padding-right: 3.2rem; }\n\n.delete {\n  position: absolute;\n  right: 0;\n  display: inline-block;\n  width: 2.4rem;\n  height: 2.4rem;\n  padding: 0.4rem;\n  margin: 0.4rem;\n  vertical-align: middle;\n  cursor: pointer; }\n\n.delete:hover .deleteIcon {\n  background: #9e9e9e; }\n\n.deleteIcon {\n  vertical-align: top;\n  background: #bdbdbd;\n  border-radius: 2.4rem; }\n  .deleteIcon .deleteX {\n    fill: transparent;\n    stroke-width: 0.4rem;\n    stroke: white; }\n", ""]);
	
	// exports


/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Input = undefined;
	
	var _identifiers = __webpack_require__(3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _Input = __webpack_require__(362);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _theme = __webpack_require__(367);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Input = (0, _Input.inputFactory)(_FontIcon2.default);
	var ThemedInput = (0, _reactCssThemr.themr)(_identifiers.INPUT, _theme2.default, { withRef: true })(Input);
	
	exports.default = ThemedInput;
	exports.Input = ThemedInput;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(368);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".input {\n  position: relative;\n  padding: 2rem 0; }\n  .input.withIcon {\n    margin-left: 4.8rem; }\n\n.icon {\n  position: absolute;\n  top: 1.6rem;\n  left: -4.8rem;\n  display: block;\n  width: 4.8rem;\n  height: 4.8rem;\n  font-size: 2.4rem !important;\n  line-height: 4.8rem !important;\n  color: rgba(0, 0, 0, 0.26);\n  text-align: center;\n  transition: color 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n\n.inputElement {\n  display: block;\n  width: 100%;\n  padding: 0.8rem 0;\n  font-size: 1.6rem;\n  color: #212121;\n  background-color: transparent;\n  border: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  outline: none; }\n  .inputElement:focus:not([disabled]):not([readonly]) ~ .bar:before, .inputElement:focus:not([disabled]):not([readonly]) ~ .bar:after {\n    width: 50%; }\n  .inputElement:focus:not([disabled]):not([readonly]) ~ .label:not(.fixed) {\n    color: #3f51b5; }\n  .inputElement:focus:not([disabled]):not([readonly]) ~ .label > .required {\n    color: #de3226; }\n  .inputElement:focus:not([disabled]):not([readonly]) ~ .hint {\n    opacity: 1; }\n  .inputElement:focus:not([disabled]):not([readonly]) ~ .icon {\n    color: #3f51b5; }\n  .inputElement:focus:not([disabled]):not([readonly]) ~ .label:not(.fixed), .inputElement.filled ~ .label:not(.fixed), .inputElement[type=\"date\"] ~ .label:not(.fixed), .inputElement[type=\"time\"] ~ .label:not(.fixed) {\n    top: 0.6rem;\n    font-size: 1.2rem; }\n  .inputElement.filled ~ .label.fixed, .inputElement.filled ~ .hint {\n    display: none; }\n\n.label {\n  position: absolute;\n  top: 3.2rem;\n  left: 0;\n  font-size: 1.6rem;\n  line-height: 1.6rem;\n  color: rgba(0, 0, 0, 0.26);\n  pointer-events: none;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: top, font-size, color; }\n  .label.fixed ~ .hint {\n    display: none; }\n\n.hint {\n  position: absolute;\n  top: 3.2rem;\n  left: 0;\n  font-size: 1.6rem;\n  line-height: 1.6rem;\n  color: rgba(0, 0, 0, 0.26);\n  pointer-events: none;\n  opacity: 0;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: opacity; }\n\n.bar {\n  position: relative;\n  display: block;\n  width: 100%; }\n  .bar:before, .bar:after {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.2s;\n    position: absolute;\n    bottom: 0;\n    width: 0;\n    height: 2px;\n    content: \"\";\n    background-color: #3f51b5;\n    transition-property: width, background-color; }\n  .bar:before {\n    left: 50%; }\n  .bar:after {\n    right: 50%; }\n\n.error, .counter {\n  margin-bottom: -2rem;\n  font-size: 1.2rem;\n  line-height: 2rem;\n  color: #de3226; }\n\n.counter {\n  position: absolute;\n  right: 0;\n  color: rgba(0, 0, 0, 0.26); }\n\n.disabled > .inputElement {\n  color: rgba(0, 0, 0, 0.26);\n  border-bottom-style: dotted; }\n\n.errored {\n  padding-bottom: 0; }\n  .errored > .inputElement {\n    margin-top: 1px;\n    border-bottom-color: #de3226; }\n  .errored > .counter, .errored > .label {\n    color: #de3226; }\n  .errored > .label > .required {\n    color: #de3226; }\n\n.hidden {\n  display: none; }\n", ""]);
	
	// exports


/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(370);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".autocomplete {\n  position: relative;\n  padding: 1rem 0; }\n  .autocomplete.focus .label {\n    color: #3f51b5; }\n  .autocomplete.focus .suggestions {\n    max-height: 45vh;\n    visibility: visible;\n    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.12), 0 1px 4px rgba(0, 0, 0, 0.24); }\n\n.label {\n  font-size: 1.2rem;\n  color: #757575;\n  transition: color 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n\n.values {\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding-bottom: 0.5rem; }\n\n.value {\n  margin: 0.25rem 0.5rem 0.25rem 0; }\n\n.suggestions {\n  position: absolute;\n  z-index: 100;\n  width: 100%;\n  max-height: 0;\n  overflow-x: hidden;\n  overflow-y: auto;\n  visibility: hidden;\n  background-color: white;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: max-height, box-shadow; }\n  .suggestions::-webkit-scrollbar {\n    width: 0;\n    height: 0; }\n  .suggestions:not(.up) {\n    margin-top: -2rem; }\n  .suggestions.up {\n    bottom: 0; }\n\n.suggestion {\n  padding: 1rem;\n  font-size: 1.6rem;\n  cursor: pointer; }\n  .suggestion.active {\n    background-color: #eeeeee; }\n\n.input {\n  position: relative; }\n  .input:after {\n    position: absolute;\n    top: 50%;\n    right: 0.8rem;\n    width: 0;\n    height: 0;\n    pointer-events: none;\n    content: \"\";\n    border-top: 0.54857rem solid rgba(0, 0, 0, 0.12);\n    border-right: 0.54857rem solid transparent;\n    border-left: 0.54857rem solid transparent;\n    transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n", ""]);
	
	// exports


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DatePickerDialog = exports.DatePicker = exports.default = undefined;
	
	var _DatePicker = __webpack_require__(372);
	
	var _DatePicker2 = _interopRequireDefault(_DatePicker);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _DatePicker3 = __webpack_require__(372);
	
	var _DatePickerDialog = __webpack_require__(396);
	
	var _DatePickerDialog2 = _interopRequireDefault(_DatePickerDialog);
	
	var _Calendar = __webpack_require__(377);
	
	var _Calendar2 = _interopRequireDefault(_Calendar);
	
	var _button = __webpack_require__(2);
	
	var _input = __webpack_require__(366);
	
	var _input2 = _interopRequireDefault(_input);
	
	var _dialog = __webpack_require__(397);
	
	var _dialog2 = _interopRequireDefault(_dialog);
	
	var _theme = __webpack_require__(403);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _DatePicker2.default;
	
	
	var Calendar = (0, _Calendar2.default)(_button.IconButton);
	var DatePickerDialog = (0, _DatePickerDialog2.default)(_dialog2.default, Calendar);
	var DatePicker = (0, _DatePicker3.datePickerFactory)(_input2.default, DatePickerDialog);
	
	var ThemedDatePicker = (0, _reactCssThemr.themr)(_identifiers.DATE_PICKER, _theme2.default)(DatePicker);
	exports.default = ThemedDatePicker;
	exports.DatePicker = ThemedDatePicker;
	
	
	var ThemedDatePickerDialog = (0, _reactCssThemr.themr)(_identifiers.DIALOG, _theme2.default)(DatePickerDialog);
	exports.DatePickerDialog = ThemedDatePickerDialog;

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DatePicker = exports.datePickerFactory = exports.DatePickerDialog = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _IconButton = __webpack_require__(188);
	
	var _IconButton2 = _interopRequireDefault(_IconButton);
	
	var _Input = __webpack_require__(362);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _Dialog = __webpack_require__(373);
	
	var _Dialog2 = _interopRequireDefault(_Dialog);
	
	var _Calendar = __webpack_require__(377);
	
	var _Calendar2 = _interopRequireDefault(_Calendar);
	
	var _DatePickerDialog = __webpack_require__(396);
	
	var _DatePickerDialog2 = _interopRequireDefault(_DatePickerDialog);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Input, DatePickerDialog) {
	  var DatePicker = function (_Component) {
	    _inherits(DatePicker, _Component);
	
	    function DatePicker() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, DatePicker);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(DatePicker)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        active: _this.props.active
	      }, _this.handleDismiss = function () {
	        _this.setState({ active: false });
	      }, _this.handleInputFocus = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.setState({ active: true });
	      }, _this.handleInputBlur = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.setState({ active: false });
	      }, _this.handleInputMouseDown = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.setState({ active: true });
	      }, _this.handleInputKeyPress = function (event) {
	        if (event.charCode === 13) {
	          _events2.default.pauseEvent(event);
	          _this.setState({ active: true });
	        }
	        if (_this.props.onKeyPress) _this.props.onKeyPress(event);
	      }, _this.handleSelect = function (value, event) {
	        if (_this.props.onChange) _this.props.onChange(value, event);
	        _this.setState({ active: false });
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(DatePicker, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.state.active !== nextProps.active) {
	          this.setState({ active: nextProps.active });
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var active = _props.active;
	        var autoOk = _props.autoOk;
	        var inputClassName = _props.inputClassName;
	        var inputFormat = _props.inputFormat;
	        var locale = _props.locale;
	        var maxDate = _props.maxDate;
	        var minDate = _props.minDate;
	        var onEscKeyDown = _props.onEscKeyDown;
	        var onOverlayClick = _props.onOverlayClick;
	        var readonly = _props.readonly;
	        var sundayFirstDayOfWeek = _props.sundayFirstDayOfWeek;
	        var value = _props.value;
	
	        var others = _objectWithoutProperties(_props, ['active', 'autoOk', 'inputClassName', 'inputFormat', 'locale', 'maxDate', 'minDate', 'onEscKeyDown', 'onOverlayClick', 'readonly', 'sundayFirstDayOfWeek', 'value']);
	
	        var finalInputFormat = inputFormat || _time2.default.formatDate;
	        var date = Object.prototype.toString.call(value) === '[object Date]' ? value : undefined;
	        var formattedDate = date === undefined ? '' : finalInputFormat(value, locale);
	
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'date-picker' },
	          _react2.default.createElement(Input, _extends({}, others, {
	            className: (0, _classnames3.default)(this.props.theme.input, _defineProperty({}, inputClassName, inputClassName)),
	            disabled: readonly,
	            error: this.props.error,
	            icon: this.props.icon,
	            label: this.props.label,
	            name: this.props.name,
	            onFocus: this.handleInputFocus,
	            onKeyPress: this.handleInputKeyPress,
	            onMouseDown: this.handleInputMouseDown,
	            readOnly: true,
	            type: 'text',
	            value: formattedDate
	          })),
	          _react2.default.createElement(DatePickerDialog, {
	            active: this.state.active,
	            autoOk: autoOk,
	            className: this.props.className,
	            locale: locale,
	            maxDate: maxDate,
	            minDate: minDate,
	            name: this.props.name,
	            onDismiss: this.handleDismiss,
	            onEscKeyDown: onEscKeyDown || this.handleDismiss,
	            onOverlayClick: onOverlayClick || this.handleDismiss,
	            onSelect: this.handleSelect,
	            sundayFirstDayOfWeek: sundayFirstDayOfWeek,
	            theme: this.props.theme,
	            value: date
	          })
	        );
	      }
	    }]);
	
	    return DatePicker;
	  }(_react.Component);
	
	  DatePicker.propTypes = {
	    active: _react.PropTypes.bool,
	    autoOk: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    error: _react.PropTypes.string,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    inputClassName: _react.PropTypes.string,
	    inputFormat: _react.PropTypes.func,
	    label: _react.PropTypes.string,
	    locale: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),
	    maxDate: _react.PropTypes.object,
	    minDate: _react.PropTypes.object,
	    name: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    onEscKeyDown: _react.PropTypes.func,
	    onKeyPress: _react.PropTypes.func,
	    onOverlayClick: _react.PropTypes.func,
	    readonly: _react.PropTypes.bool,
	    sundayFirstDayOfWeek: _react2.default.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      input: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.oneOfType([_react.PropTypes.instanceOf(Date), _react.PropTypes.string])
	  };
	  DatePicker.defaultProps = {
	    active: false,
	    locale: 'en',
	    sundayFirstDayOfWeek: false
	  };
	
	
	  return DatePicker;
	};
	
	var Calendar = (0, _Calendar2.default)(_IconButton2.default);
	var DatePickerDialog = (0, _DatePickerDialog2.default)(_Dialog2.default, Calendar);
	var DatePicker = factory(_Input2.default, DatePickerDialog);
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.DATE_PICKER)(DatePicker);
	exports.DatePickerDialog = DatePickerDialog;
	exports.datePickerFactory = factory;
	exports.DatePicker = DatePicker;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.dialogFactory = exports.Dialog = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames3 = __webpack_require__(43);
	
	var _classnames4 = _interopRequireDefault(_classnames3);
	
	var _identifiers = __webpack_require__(3);
	
	var _ActivableRenderer = __webpack_require__(374);
	
	var _ActivableRenderer2 = _interopRequireDefault(_ActivableRenderer);
	
	var _Button = __webpack_require__(42);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Overlay = __webpack_require__(375);
	
	var _Overlay2 = _interopRequireDefault(_Overlay);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var factory = function factory(Overlay, Button) {
	  var Dialog = function Dialog(props) {
	    var actions = props.actions.map(function (action, idx) {
	      var className = (0, _classnames4.default)(props.theme.button, _defineProperty({}, action.className, action.className));
	      return _react2.default.createElement(Button, _extends({ key: idx }, action, { className: className }));
	    });
	
	    var className = (0, _classnames4.default)([props.theme.dialog, props.theme[props.type]], _defineProperty({}, props.theme.active, props.active), props.className);
	
	    return _react2.default.createElement(
	      Overlay,
	      {
	        active: props.active,
	        onClick: props.onOverlayClick,
	        onEscKeyDown: props.onEscKeyDown,
	        onMouseDown: props.onOverlayMouseDown,
	        onMouseMove: props.onOverlayMouseMove,
	        onMouseUp: props.onOverlayMouseUp
	      },
	      _react2.default.createElement(
	        'div',
	        { 'data-react-toolbox': 'dialog', className: className },
	        _react2.default.createElement(
	          'section',
	          { role: 'body', className: props.theme.body },
	          props.title ? _react2.default.createElement(
	            'h6',
	            { className: props.theme.title },
	            props.title
	          ) : null,
	          props.children
	        ),
	        actions.length ? _react2.default.createElement(
	          'nav',
	          { role: 'navigation', className: props.theme.navigation },
	          actions
	        ) : null
	      )
	    );
	  };
	
	  Dialog.propTypes = {
	    actions: _react.PropTypes.array,
	    active: _react.PropTypes.bool,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    onEscKeyDown: _react.PropTypes.func,
	    onOverlayClick: _react.PropTypes.func,
	    onOverlayMouseDown: _react.PropTypes.func,
	    onOverlayMouseMove: _react.PropTypes.func,
	    onOverlayMouseUp: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      active: _react.PropTypes.string,
	      body: _react.PropTypes.string,
	      button: _react.PropTypes.string,
	      dialog: _react.PropTypes.string,
	      navigation: _react.PropTypes.string,
	      title: _react.PropTypes.string
	    }),
	    title: _react.PropTypes.string,
	    type: _react.PropTypes.string
	  };
	
	  Dialog.defaultProps = {
	    actions: [],
	    active: false,
	    type: 'normal'
	  };
	
	  return (0, _ActivableRenderer2.default)()(Dialog);
	};
	
	var Dialog = factory(_Overlay2.default, _Button2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.DIALOG)(Dialog);
	exports.Dialog = Dialog;
	exports.dialogFactory = factory;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ActivableRendererFactory = function ActivableRendererFactory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? { delay: 500 } : arguments[0];
	  return function (ActivableComponent) {
	    var _class, _temp2;
	
	    return _temp2 = _class = function (_Component) {
	      _inherits(ActivableRenderer, _Component);
	
	      function ActivableRenderer() {
	        var _Object$getPrototypeO;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, ActivableRenderer);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(ActivableRenderer)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	          active: _this.props.active,
	          rendered: _this.props.active
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	      }
	
	      _createClass(ActivableRenderer, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	          if (nextProps.active && !this.props.active) this.renderAndActivate();
	          if (!nextProps.active && this.props.active) this.deactivateAndUnrender();
	        }
	      }, {
	        key: 'renderAndActivate',
	        value: function renderAndActivate() {
	          var _this2 = this;
	
	          if (this.unrenderTimeout) clearTimeout(this.unrenderTimeout);
	          this.setState({ rendered: true, active: false }, function () {
	            setTimeout(function () {
	              return _this2.setState({ active: true });
	            }, 20);
	          });
	        }
	      }, {
	        key: 'deactivateAndUnrender',
	        value: function deactivateAndUnrender() {
	          var _this3 = this;
	
	          this.setState({ rendered: true, active: false }, function () {
	            _this3.unrenderTimeout = setTimeout(function () {
	              _this3.setState({ rendered: false });
	              _this3.unrenderTimeout = null;
	            }, _this3.props.delay);
	          });
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var _props = this.props;
	          var delay = _props.delay;
	
	          var others = _objectWithoutProperties(_props, ['delay']); // eslint-disable-line no-unused-vars
	
	
	          var _state = this.state;
	          var active = _state.active;
	          var rendered = _state.rendered;
	
	          return rendered ? _react2.default.createElement(ActivableComponent, _extends({}, others, { active: active })) : null;
	        }
	      }]);
	
	      return ActivableRenderer;
	    }(_react.Component), _class.propTypes = {
	      active: _react.PropTypes.bool.isRequired,
	      children: _react.PropTypes.any,
	      delay: _react.PropTypes.number
	    }, _class.defaultProps = {
	      delay: options.delay
	    }, _temp2;
	  };
	};
	
	exports.default = ActivableRendererFactory;

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Overlay = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Portal = __webpack_require__(376);
	
	var _Portal2 = _interopRequireDefault(_Portal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Overlay = function (_Component) {
	  _inherits(Overlay, _Component);
	
	  function Overlay() {
	    _classCallCheck(this, Overlay);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Overlay).apply(this, arguments));
	  }
	
	  _createClass(Overlay, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.active) {
	        this.escKeyListener = document.body.addEventListener('keydown', this.handleEscKey.bind(this));
	        document.body.style.overflow = 'hidden';
	      }
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProps) {
	      if (nextProps.active && !this.props.active) document.body.style.overflow = 'hidden';
	      if (!nextProps.active && this.props.active) document.body.style.overflow = null;
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      if (this.props.active && !this.escKeyListener) {
	        this.escKeyListener = document.body.addEventListener('keydown', this.handleEscKey.bind(this));
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      document.body.style.overflow = null;
	      if (this.escKeyListener) {
	        document.body.removeEventListener('keydown', this.handleEscKey);
	        this.escKeyListener = null;
	      }
	    }
	  }, {
	    key: 'handleEscKey',
	    value: function handleEscKey(e) {
	      if (this.props.active && this.props.onEscKeyDown && e.which === 27) {
	        this.props.onEscKeyDown(e);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classnames;
	
	      var _props = this.props;
	      var active = _props.active;
	      var className = _props.className;
	      var children = _props.children;
	      var invisible = _props.invisible;
	      var onClick = _props.onClick;
	      var theme = _props.theme;
	
	      var _className = (0, _classnames3.default)(theme.overlay, (_classnames = {}, _defineProperty(_classnames, theme.active, active), _defineProperty(_classnames, theme.invisible, invisible), _classnames), className);
	
	      return _react2.default.createElement(
	        _Portal2.default,
	        null,
	        _react2.default.createElement(
	          'div',
	          { className: _className },
	          _react2.default.createElement('div', { className: theme.backdrop, onClick: onClick }),
	          children
	        )
	      );
	    }
	  }]);
	
	  return Overlay;
	}(_react.Component);
	
	Overlay.propTypes = {
	  active: _react.PropTypes.bool,
	  children: _react.PropTypes.node,
	  className: _react.PropTypes.string,
	  invisible: _react.PropTypes.bool,
	  onClick: _react.PropTypes.func,
	  onEscKeyDown: _react.PropTypes.func,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    backdrop: _react.PropTypes.string,
	    invisible: _react.PropTypes.string,
	    overlay: _react.PropTypes.string
	  })
	};
	Overlay.defaultProps = {
	  invisible: false
	};
	exports.default = (0, _reactCssThemr.themr)(_identifiers.OVERLAY)(Overlay);
	exports.Overlay = Overlay;

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(46);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Portal = function (_Component) {
	  _inherits(Portal, _Component);
	
	  function Portal() {
	    _classCallCheck(this, Portal);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Portal).apply(this, arguments));
	  }
	
	  _createClass(Portal, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._renderOverlay();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this._overlayTarget && nextProps.container !== this.props.container) {
	        this._portalContainerNode.removeChild(this._overlayTarget);
	        this._portalContainerNode = getContainer(nextProps.container);
	        this._portalContainerNode.appendChild(this._overlayTarget);
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this._renderOverlay();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this._unrenderOverlay();
	      this._unmountOverlayTarget();
	    }
	  }, {
	    key: '_mountOverlayTarget',
	    value: function _mountOverlayTarget() {
	      if (!this._overlayTarget) {
	        this._overlayTarget = document.createElement('div');
	        this._portalContainerNode = getContainer(this.props.container);
	        this._portalContainerNode.appendChild(this._overlayTarget);
	      }
	    }
	  }, {
	    key: '_unmountOverlayTarget',
	    value: function _unmountOverlayTarget() {
	      if (this._overlayTarget) {
	        this._portalContainerNode.removeChild(this._overlayTarget);
	        this._overlayTarget = null;
	      }
	      this._portalContainerNode = null;
	    }
	  }, {
	    key: '_renderOverlay',
	    value: function _renderOverlay() {
	      var overlay = !this.props.children ? null : _react2.default.Children.only(this.props.children);
	
	      if (overlay !== null) {
	        this._mountOverlayTarget();
	        this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, overlay, this._overlayTarget);
	      } else {
	        this._unrenderOverlay();
	        this._unmountOverlayTarget();
	      }
	    }
	  }, {
	    key: '_unrenderOverlay',
	    value: function _unrenderOverlay() {
	      if (this._overlayTarget) {
	        _reactDom2.default.unmountComponentAtNode(this._overlayTarget);
	        this._overlayInstance = null;
	      }
	    }
	  }, {
	    key: 'getMountNode',
	    value: function getMountNode() {
	      return this._overlayTarget;
	    }
	  }, {
	    key: 'getOverlayDOMNode',
	    value: function getOverlayDOMNode() {
	      if (!this.isMounted()) {
	        throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');
	      }
	
	      if (this._overlayInstance) {
	        if (this._overlayInstance.getWrappedDOMNode) {
	          return this._overlayInstance.getWrappedDOMNode();
	        } else {
	          return _reactDom2.default.findDOMNode(this._overlayInstance);
	        }
	      }
	
	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return Portal;
	}(_react.Component);
	
	Portal.propTypes = {
	  children: _react.PropTypes.any,
	  container: _react.PropTypes.any,
	  lockBody: _react.PropTypes.bool
	};
	Portal.defaultProps = {
	  lockBody: true
	};
	
	
	function getContainer(container) {
	  var _container = typeof container === 'function' ? container() : container;
	  return _reactDom2.default.findDOMNode(_container) || document.body;
	}
	
	exports.default = Portal;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(378);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	var _animations = __webpack_require__(385);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _CalendarMonth = __webpack_require__(394);
	
	var _CalendarMonth2 = _interopRequireDefault(_CalendarMonth);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DIRECTION_STEPS = { left: -1, right: 1 };
	
	var factory = function factory(IconButton) {
	  var Calendar = function (_Component) {
	    _inherits(Calendar, _Component);
	
	    function Calendar() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Calendar);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Calendar)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        viewDate: _this.props.selectedDate
	      }, _this.handleDayClick = function (day) {
	        _this.props.onChange(_time2.default.setDay(_this.state.viewDate, day), true);
	      }, _this.handleYearClick = function (event) {
	        var year = parseInt(event.currentTarget.id);
	        var viewDate = _time2.default.setYear(_this.props.selectedDate, year);
	        _this.setState({ viewDate: viewDate });
	        _this.props.onChange(viewDate, false);
	      }, _this.handleKeys = function (e) {
	        var selectedDate = _this.props.selectedDate;
	
	
	        if (e.which === 37 || e.which === 38 || e.which === 39 || e.which === 40 || e.which === 13) e.preventDefault();
	
	        switch (e.which) {
	          case 13:
	            _this.props.handleSelect();break; // enter
	          case 37:
	            _this.handleDayArrowKey(_time2.default.addDays(selectedDate, -1));break; // left
	          case 38:
	            _this.handleDayArrowKey(_time2.default.addDays(selectedDate, -7));break; // up
	          case 39:
	            _this.handleDayArrowKey(_time2.default.addDays(selectedDate, 1));break; // right
	          case 40:
	            _this.handleDayArrowKey(_time2.default.addDays(selectedDate, 7));break; // down
	          default:
	            break;
	        }
	      }, _this.handleDayArrowKey = function (date) {
	        _this.setState({ viewDate: date });
	        _this.props.onChange(date, false);
	      }, _this.changeViewMonth = function (event) {
	        var direction = event.currentTarget.id;
	        _this.setState({
	          direction: direction,
	          viewDate: _time2.default.addMonths(_this.state.viewDate, DIRECTION_STEPS[direction])
	        });
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Calendar, [{
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        document.body.addEventListener('keydown', this.handleKeys);
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate() {
	        if (this.refs.activeYear) {
	          this.scrollToActive();
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        document.body.removeEventListener('keydown', this.handleKeys);
	      }
	    }, {
	      key: 'scrollToActive',
	      value: function scrollToActive() {
	        this.refs.years.scrollTop = this.refs.activeYear.offsetTop - this.refs.years.offsetHeight / 2 + this.refs.activeYear.offsetHeight / 2;
	      }
	    }, {
	      key: 'renderYears',
	      value: function renderYears() {
	        var _this2 = this;
	
	        return _react2.default.createElement(
	          'ul',
	          { 'data-react-toolbox': 'years', ref: 'years', className: this.props.theme.years },
	          _utils2.default.range(1900, 2100).map(function (year) {
	            return _react2.default.createElement('li', {
	              children: year,
	              className: year === _this2.state.viewDate.getFullYear() ? _this2.props.theme.active : '',
	              id: year,
	              key: year,
	              onClick: _this2.handleYearClick,
	              ref: year === _this2.state.viewDate.getFullYear() ? 'activeYear' : undefined
	            });
	          })
	        );
	      }
	    }, {
	      key: 'renderMonths',
	      value: function renderMonths() {
	        var theme = this.props.theme;
	
	        var animation = this.state.direction === 'left' ? _animations.SlideLeft : _animations.SlideRight;
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'calendar' },
	          _react2.default.createElement(IconButton, { id: 'left', className: theme.prev, icon: 'chevron_left', onClick: this.changeViewMonth }),
	          _react2.default.createElement(IconButton, { id: 'right', className: theme.next, icon: 'chevron_right', onClick: this.changeViewMonth }),
	          _react2.default.createElement(
	            _reactAddonsCssTransitionGroup2.default,
	            { transitionName: animation, transitionEnterTimeout: 350, transitionLeaveTimeout: 350 },
	            _react2.default.createElement(_CalendarMonth2.default, {
	              key: this.state.viewDate.getMonth(),
	              locale: this.props.locale,
	              maxDate: this.props.maxDate,
	              minDate: this.props.minDate,
	              onDayClick: this.handleDayClick,
	              selectedDate: this.props.selectedDate,
	              sundayFirstDayOfWeek: this.props.sundayFirstDayOfWeek,
	              theme: this.props.theme,
	              viewDate: this.state.viewDate
	            })
	          )
	        );
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(
	          'div',
	          { className: this.props.theme.calendar },
	          this.props.display === 'months' ? this.renderMonths() : this.renderYears()
	        );
	      }
	    }]);
	
	    return Calendar;
	  }(_react.Component);
	
	  Calendar.propTypes = {
	    display: _react.PropTypes.oneOf(['months', 'years']),
	    handleSelect: _react.PropTypes.func,
	    locale: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),
	    maxDate: _react.PropTypes.object,
	    minDate: _react.PropTypes.object,
	    onChange: _react.PropTypes.func,
	    selectedDate: _react.PropTypes.object,
	    sundayFirstDayOfWeek: _react2.default.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      active: _react.PropTypes.string,
	      calendar: _react.PropTypes.string,
	      next: _react.PropTypes.string,
	      prev: _react.PropTypes.string,
	      years: _react.PropTypes.string
	    }),
	    viewDate: _react.PropTypes.object
	  };
	  Calendar.defaultProps = {
	    display: 'months',
	    selectedDate: new Date()
	  };
	
	
	  return Calendar;
	};
	
	exports.default = factory;

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(379);

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCSSTransitionGroup
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var React = __webpack_require__(7);
	
	var ReactTransitionGroup = __webpack_require__(380);
	var ReactCSSTransitionGroupChild = __webpack_require__(382);
	
	function createTransitionTimeoutPropValidator(transitionType) {
	  var timeoutPropName = 'transition' + transitionType + 'Timeout';
	  var enabledPropName = 'transition' + transitionType;
	
	  return function (props) {
	    // If the transition is enabled
	    if (props[enabledPropName]) {
	      // If no timeout duration is provided
	      if (props[timeoutPropName] == null) {
	        return new Error(timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');
	
	        // If the duration isn't a number
	      } else if (typeof props[timeoutPropName] !== 'number') {
	          return new Error(timeoutPropName + ' must be a number (in milliseconds)');
	        }
	    }
	  };
	}
	
	/**
	 * An easy way to perform CSS transitions and animations when a React component
	 * enters or leaves the DOM.
	 * See https://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup
	 */
	var ReactCSSTransitionGroup = React.createClass({
	  displayName: 'ReactCSSTransitionGroup',
	
	  propTypes: {
	    transitionName: ReactCSSTransitionGroupChild.propTypes.name,
	
	    transitionAppear: React.PropTypes.bool,
	    transitionEnter: React.PropTypes.bool,
	    transitionLeave: React.PropTypes.bool,
	    transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),
	    transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),
	    transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')
	  },
	
	  getDefaultProps: function () {
	    return {
	      transitionAppear: false,
	      transitionEnter: true,
	      transitionLeave: true
	    };
	  },
	
	  _wrapChild: function (child) {
	    // We need to provide this childFactory so that
	    // ReactCSSTransitionGroupChild can receive updates to name, enter, and
	    // leave while it is leaving.
	    return React.createElement(ReactCSSTransitionGroupChild, {
	      name: this.props.transitionName,
	      appear: this.props.transitionAppear,
	      enter: this.props.transitionEnter,
	      leave: this.props.transitionLeave,
	      appearTimeout: this.props.transitionAppearTimeout,
	      enterTimeout: this.props.transitionEnterTimeout,
	      leaveTimeout: this.props.transitionLeaveTimeout
	    }, child);
	  },
	
	  render: function () {
	    return React.createElement(ReactTransitionGroup, _assign({}, this.props, { childFactory: this._wrapChild }));
	  }
	});
	
	module.exports = ReactCSSTransitionGroup;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTransitionGroup
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(9);
	
	var React = __webpack_require__(7);
	var ReactInstanceMap = __webpack_require__(131);
	var ReactTransitionChildMapping = __webpack_require__(381);
	
	var emptyFunction = __webpack_require__(17);
	
	/**
	 * A basis for animations. When children are declaratively added or removed,
	 * special lifecycle hooks are called.
	 * See https://facebook.github.io/react/docs/animation.html#low-level-api-reacttransitiongroup
	 */
	var ReactTransitionGroup = React.createClass({
	  displayName: 'ReactTransitionGroup',
	
	  propTypes: {
	    component: React.PropTypes.any,
	    childFactory: React.PropTypes.func
	  },
	
	  getDefaultProps: function () {
	    return {
	      component: 'span',
	      childFactory: emptyFunction.thatReturnsArgument
	    };
	  },
	
	  getInitialState: function () {
	    return {
	      // TODO: can we get useful debug information to show at this point?
	      children: ReactTransitionChildMapping.getChildMapping(this.props.children)
	    };
	  },
	
	  componentWillMount: function () {
	    this.currentlyTransitioningKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	  },
	
	  componentDidMount: function () {
	    var initialChildMapping = this.state.children;
	    for (var key in initialChildMapping) {
	      if (initialChildMapping[key]) {
	        this.performAppear(key);
	      }
	    }
	  },
	
	  componentWillReceiveProps: function (nextProps) {
	    var nextChildMapping;
	    if (process.env.NODE_ENV !== 'production') {
	      nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children, ReactInstanceMap.get(this)._debugID);
	    } else {
	      nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);
	    }
	    var prevChildMapping = this.state.children;
	
	    this.setState({
	      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)
	    });
	
	    var key;
	
	    for (key in nextChildMapping) {
	      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
	      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
	        this.keysToEnter.push(key);
	      }
	    }
	
	    for (key in prevChildMapping) {
	      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
	      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {
	        this.keysToLeave.push(key);
	      }
	    }
	
	    // If we want to someday check for reordering, we could do it here.
	  },
	
	  componentDidUpdate: function () {
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(this.performEnter);
	
	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(this.performLeave);
	  },
	
	  performAppear: function (key) {
	    this.currentlyTransitioningKeys[key] = true;
	
	    var component = this.refs[key];
	
	    if (component.componentWillAppear) {
	      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));
	    } else {
	      this._handleDoneAppearing(key);
	    }
	  },
	
	  _handleDoneAppearing: function (key) {
	    var component = this.refs[key];
	    if (component.componentDidAppear) {
	      component.componentDidAppear();
	    }
	
	    delete this.currentlyTransitioningKeys[key];
	
	    var currentChildMapping;
	    if (process.env.NODE_ENV !== 'production') {
	      currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children, ReactInstanceMap.get(this)._debugID);
	    } else {
	      currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);
	    }
	
	    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	      // This was removed before it had fully appeared. Remove it.
	      this.performLeave(key);
	    }
	  },
	
	  performEnter: function (key) {
	    this.currentlyTransitioningKeys[key] = true;
	
	    var component = this.refs[key];
	
	    if (component.componentWillEnter) {
	      component.componentWillEnter(this._handleDoneEntering.bind(this, key));
	    } else {
	      this._handleDoneEntering(key);
	    }
	  },
	
	  _handleDoneEntering: function (key) {
	    var component = this.refs[key];
	    if (component.componentDidEnter) {
	      component.componentDidEnter();
	    }
	
	    delete this.currentlyTransitioningKeys[key];
	
	    var currentChildMapping;
	    if (process.env.NODE_ENV !== 'production') {
	      currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children, ReactInstanceMap.get(this)._debugID);
	    } else {
	      currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);
	    }
	
	    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	      // This was removed before it had fully entered. Remove it.
	      this.performLeave(key);
	    }
	  },
	
	  performLeave: function (key) {
	    this.currentlyTransitioningKeys[key] = true;
	
	    var component = this.refs[key];
	    if (component.componentWillLeave) {
	      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));
	    } else {
	      // Note that this is somewhat dangerous b/c it calls setState()
	      // again, effectively mutating the component before all the work
	      // is done.
	      this._handleDoneLeaving(key);
	    }
	  },
	
	  _handleDoneLeaving: function (key) {
	    var component = this.refs[key];
	
	    if (component.componentDidLeave) {
	      component.componentDidLeave();
	    }
	
	    delete this.currentlyTransitioningKeys[key];
	
	    var currentChildMapping;
	    if (process.env.NODE_ENV !== 'production') {
	      currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children, ReactInstanceMap.get(this)._debugID);
	    } else {
	      currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);
	    }
	
	    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
	      // This entered again before it fully left. Add it again.
	      this.performEnter(key);
	    } else {
	      this.setState(function (state) {
	        var newChildren = _assign({}, state.children);
	        delete newChildren[key];
	        return { children: newChildren };
	      });
	    }
	  },
	
	  render: function () {
	    // TODO: we could get rid of the need for the wrapper node
	    // by cloning a single child
	    var childrenToRender = [];
	    for (var key in this.state.children) {
	      var child = this.state.children[key];
	      if (child) {
	        // You may need to apply reactive updates to a child as it is leaving.
	        // The normal React way to do it won't work since the child will have
	        // already been removed. In case you need this behavior you can provide
	        // a childFactory function to wrap every child, even the ones that are
	        // leaving.
	        childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));
	      }
	    }
	
	    // Do not forward ReactTransitionGroup props to primitive DOM nodes
	    var props = _assign({}, this.props);
	    delete props.transitionLeave;
	    delete props.transitionName;
	    delete props.transitionAppear;
	    delete props.transitionEnter;
	    delete props.childFactory;
	    delete props.transitionLeaveTimeout;
	    delete props.transitionEnterTimeout;
	    delete props.transitionAppearTimeout;
	    delete props.component;
	
	    return React.createElement(this.props.component, props, childrenToRender);
	  }
	});
	
	module.exports = ReactTransitionGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTransitionChildMapping
	 */
	
	'use strict';
	
	var flattenChildren = __webpack_require__(140);
	
	var ReactTransitionChildMapping = {
	  /**
	   * Given `this.props.children`, return an object mapping key to child. Just
	   * simple syntactic sugar around flattenChildren().
	   *
	   * @param {*} children `this.props.children`
	   * @param {number=} selfDebugID Optional debugID of the current internal instance.
	   * @return {object} Mapping of key to child
	   */
	  getChildMapping: function (children, selfDebugID) {
	    if (!children) {
	      return children;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      return flattenChildren(children, selfDebugID);
	    }
	
	    return flattenChildren(children);
	  },
	
	  /**
	   * When you're adding or removing children some may be added or removed in the
	   * same render pass. We want to show *both* since we want to simultaneously
	   * animate elements in and out. This function takes a previous set of keys
	   * and a new set of keys and merges them with its best guess of the correct
	   * ordering. In the future we may expose some of the utilities in
	   * ReactMultiChild to make this easy, but for now React itself does not
	   * directly have this concept of the union of prevChildren and nextChildren
	   * so we implement it here.
	   *
	   * @param {object} prev prev children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @param {object} next next children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @return {object} a key set that contains all keys in `prev` and all keys
	   * in `next` in a reasonable order.
	   */
	  mergeChildMappings: function (prev, next) {
	    prev = prev || {};
	    next = next || {};
	
	    function getValueForKey(key) {
	      if (next.hasOwnProperty(key)) {
	        return next[key];
	      } else {
	        return prev[key];
	      }
	    }
	
	    // For each key of `next`, the list of keys to insert before that key in
	    // the combined list
	    var nextKeysPending = {};
	
	    var pendingKeys = [];
	    for (var prevKey in prev) {
	      if (next.hasOwnProperty(prevKey)) {
	        if (pendingKeys.length) {
	          nextKeysPending[prevKey] = pendingKeys;
	          pendingKeys = [];
	        }
	      } else {
	        pendingKeys.push(prevKey);
	      }
	    }
	
	    var i;
	    var childMapping = {};
	    for (var nextKey in next) {
	      if (nextKeysPending.hasOwnProperty(nextKey)) {
	        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	          var pendingNextKey = nextKeysPending[nextKey][i];
	          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	        }
	      }
	      childMapping[nextKey] = getValueForKey(nextKey);
	    }
	
	    // Finally, add the keys which didn't appear before any key in `next`
	    for (i = 0; i < pendingKeys.length; i++) {
	      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	    }
	
	    return childMapping;
	  }
	};
	
	module.exports = ReactTransitionChildMapping;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCSSTransitionGroupChild
	 */
	
	'use strict';
	
	var React = __webpack_require__(7);
	var ReactDOM = __webpack_require__(47);
	
	var CSSCore = __webpack_require__(383);
	var ReactTransitionEvents = __webpack_require__(384);
	
	var onlyChild = __webpack_require__(38);
	
	var TICK = 17;
	
	var ReactCSSTransitionGroupChild = React.createClass({
	  displayName: 'ReactCSSTransitionGroupChild',
	
	  propTypes: {
	    name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({
	      enter: React.PropTypes.string,
	      leave: React.PropTypes.string,
	      active: React.PropTypes.string
	    }), React.PropTypes.shape({
	      enter: React.PropTypes.string,
	      enterActive: React.PropTypes.string,
	      leave: React.PropTypes.string,
	      leaveActive: React.PropTypes.string,
	      appear: React.PropTypes.string,
	      appearActive: React.PropTypes.string
	    })]).isRequired,
	
	    // Once we require timeouts to be specified, we can remove the
	    // boolean flags (appear etc.) and just accept a number
	    // or a bool for the timeout flags (appearTimeout etc.)
	    appear: React.PropTypes.bool,
	    enter: React.PropTypes.bool,
	    leave: React.PropTypes.bool,
	    appearTimeout: React.PropTypes.number,
	    enterTimeout: React.PropTypes.number,
	    leaveTimeout: React.PropTypes.number
	  },
	
	  transition: function (animationType, finishCallback, userSpecifiedDelay) {
	    var node = ReactDOM.findDOMNode(this);
	
	    if (!node) {
	      if (finishCallback) {
	        finishCallback();
	      }
	      return;
	    }
	
	    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
	    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
	    var timeout = null;
	
	    var endListener = function (e) {
	      if (e && e.target !== node) {
	        return;
	      }
	
	      clearTimeout(timeout);
	
	      CSSCore.removeClass(node, className);
	      CSSCore.removeClass(node, activeClassName);
	
	      ReactTransitionEvents.removeEndEventListener(node, endListener);
	
	      // Usually this optional callback is used for informing an owner of
	      // a leave animation and telling it to remove the child.
	      if (finishCallback) {
	        finishCallback();
	      }
	    };
	
	    CSSCore.addClass(node, className);
	
	    // Need to do this to actually trigger a transition.
	    this.queueClassAndNode(activeClassName, node);
	
	    // If the user specified a timeout delay.
	    if (userSpecifiedDelay) {
	      // Clean-up the animation after the specified delay
	      timeout = setTimeout(endListener, userSpecifiedDelay);
	      this.transitionTimeouts.push(timeout);
	    } else {
	      // DEPRECATED: this listener will be removed in a future version of react
	      ReactTransitionEvents.addEndEventListener(node, endListener);
	    }
	  },
	
	  queueClassAndNode: function (className, node) {
	    this.classNameAndNodeQueue.push({
	      className: className,
	      node: node
	    });
	
	    if (!this.timeout) {
	      this.timeout = setTimeout(this.flushClassNameAndNodeQueue, TICK);
	    }
	  },
	
	  flushClassNameAndNodeQueue: function () {
	    if (this.isMounted()) {
	      this.classNameAndNodeQueue.forEach(function (obj) {
	        CSSCore.addClass(obj.node, obj.className);
	      });
	    }
	    this.classNameAndNodeQueue.length = 0;
	    this.timeout = null;
	  },
	
	  componentWillMount: function () {
	    this.classNameAndNodeQueue = [];
	    this.transitionTimeouts = [];
	  },
	
	  componentWillUnmount: function () {
	    if (this.timeout) {
	      clearTimeout(this.timeout);
	    }
	    this.transitionTimeouts.forEach(function (timeout) {
	      clearTimeout(timeout);
	    });
	
	    this.classNameAndNodeQueue.length = 0;
	  },
	
	  componentWillAppear: function (done) {
	    if (this.props.appear) {
	      this.transition('appear', done, this.props.appearTimeout);
	    } else {
	      done();
	    }
	  },
	
	  componentWillEnter: function (done) {
	    if (this.props.enter) {
	      this.transition('enter', done, this.props.enterTimeout);
	    } else {
	      done();
	    }
	  },
	
	  componentWillLeave: function (done) {
	    if (this.props.leave) {
	      this.transition('leave', done, this.props.leaveTimeout);
	    } else {
	      done();
	    }
	  },
	
	  render: function () {
	    return onlyChild(this.props.children);
	  }
	});
	
	module.exports = ReactCSSTransitionGroupChild;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(13);
	
	/**
	 * The CSSCore module specifies the API (and implements most of the methods)
	 * that should be used when dealing with the display of elements (via their
	 * CSS classes and visibility on screen. It is an API focused on mutating the
	 * display and not reading it as no logical state should be encoded in the
	 * display of elements.
	 */
	
	/* Slow implementation for browsers that don't natively support .matches() */
	function matchesSelector_SLOW(element, selector) {
	  var root = element;
	  while (root.parentNode) {
	    root = root.parentNode;
	  }
	
	  var all = root.querySelectorAll(selector);
	  return Array.prototype.indexOf.call(all, element) !== -1;
	}
	
	var CSSCore = {
	
	  /**
	   * Adds the class passed in to the element if it doesn't already have it.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  addClass: function addClass(element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : void 0;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.add(className);
	      } else if (!CSSCore.hasClass(element, className)) {
	        element.className = element.className + ' ' + className;
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Removes the class passed in from the element
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  removeClass: function removeClass(element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : void 0;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.remove(className);
	      } else if (CSSCore.hasClass(element, className)) {
	        element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ') // multiple spaces to one
	        .replace(/^\s*|\s*$/g, ''); // trim the ends
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Helper to add or remove a class from an element based on a condition.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @param {*} bool condition to whether to add or remove the class
	   * @return {DOMElement} the element passed in
	   */
	  conditionClass: function conditionClass(element, className, bool) {
	    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
	  },
	
	  /**
	   * Tests whether the element has the class specified.
	   *
	   * @param {DOMNode|DOMWindow} element the element to check the class on
	   * @param {string} className the CSS className
	   * @return {boolean} true if the element has the class, false if not
	   */
	  hasClass: function hasClass(element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : void 0;
	    if (element.classList) {
	      return !!className && element.classList.contains(className);
	    }
	    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
	  },
	
	  /**
	   * Tests whether the element matches the selector specified
	   *
	   * @param {DOMNode|DOMWindow} element the element that we are querying
	   * @param {string} selector the CSS selector
	   * @return {boolean} true if the element matches the selector, false if not
	   */
	  matchesSelector: function matchesSelector(element, selector) {
	    var matchesImpl = element.matches || element.webkitMatchesSelector || element.mozMatchesSelector || element.msMatchesSelector || function (s) {
	      return matchesSelector_SLOW(element, s);
	    };
	    return matchesImpl.call(element, selector);
	  }
	
	};
	
	module.exports = CSSCore;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTransitionEvents
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(61);
	
	var getVendorPrefixedEventName = __webpack_require__(121);
	
	var endEvents = [];
	
	function detectEvents() {
	  var animEnd = getVendorPrefixedEventName('animationend');
	  var transEnd = getVendorPrefixedEventName('transitionend');
	
	  if (animEnd) {
	    endEvents.push(animEnd);
	  }
	
	  if (transEnd) {
	    endEvents.push(transEnd);
	  }
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  detectEvents();
	}
	
	// We use the raw {add|remove}EventListener() call because EventListener
	// does not know how to remove event listeners and we really should
	// clean up. Also, these events are not triggered in older browsers
	// so we should be A-OK here.
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var ReactTransitionEvents = {
	  addEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      // If CSS transitions are not supported, trigger an "end animation"
	      // event immediately.
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	  removeEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	module.exports = ReactTransitionEvents;

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ZoomOut = exports.ZoomIn = exports.SlideRight = exports.SlideLeft = undefined;
	
	var _slideLeft = __webpack_require__(386);
	
	var _slideLeft2 = _interopRequireDefault(_slideLeft);
	
	var _slideRight = __webpack_require__(388);
	
	var _slideRight2 = _interopRequireDefault(_slideRight);
	
	var _zoomIn = __webpack_require__(390);
	
	var _zoomIn2 = _interopRequireDefault(_zoomIn);
	
	var _zoomOut = __webpack_require__(392);
	
	var _zoomOut2 = _interopRequireDefault(_zoomOut);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.SlideLeft = _slideLeft2.default;
	exports.SlideRight = _slideRight2.default;
	exports.ZoomIn = _zoomIn2.default;
	exports.ZoomOut = _zoomOut2.default;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(387);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./slide-left.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./slide-left.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".enter, .leave {\n  position: absolute;\n  transition-timing-function: ease-in-out;\n  transition-duration: .35s;\n  transition-property: transform, opacity; }\n\n.enter {\n  opacity: 0;\n  transform: translate3d(-100%, 0, 0); }\n  .enter.enterActive {\n    opacity: 1;\n    transform: translate3d(0, 0, 0); }\n\n.leave {\n  opacity: 1;\n  transform: translate3d(0, 0, 0); }\n  .leave.leaveActive {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0); }\n", ""]);
	
	// exports


/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(389);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./slide-right.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./slide-right.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".enter, .leave {\n  position: absolute; }\n\n.enterActive, .leaveActive {\n  transition-timing-function: ease-in-out;\n  transition-duration: 350ms;\n  transition-property: transform, opacity; }\n\n.enter {\n  opacity: 0;\n  transform: translateX(100%); }\n  .enter.enterActive {\n    opacity: 1;\n    transform: translateX(0); }\n\n.leave {\n  opacity: 1;\n  transform: translateX(0); }\n  .leave.leaveActive {\n    opacity: 0;\n    transform: translateX(-100%); }\n", ""]);
	
	// exports


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(391);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./zoom-in.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./zoom-in.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".enter, .leave {\n  position: absolute; }\n\n.enterActive, .leaveActive {\n  transition: transform, opacity;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 500ms; }\n\n.enter {\n  opacity: 0;\n  transform: scale(0.85); }\n  .enter.enterActive {\n    opacity: 1;\n    transform: scale(1); }\n\n.leave {\n  opacity: 1;\n  transform: scale(1); }\n  .leave.leaveActive {\n    opacity: 0;\n    transform: scale(1.25); }\n", ""]);
	
	// exports


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(393);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./zoom-out.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./zoom-out.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".enter, .leave {\n  position: absolute; }\n\n.enterActive, .leaveActive {\n  transition: transform, opacity;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 500ms; }\n\n.enter {\n  opacity: 0;\n  transform: scale(1.25); }\n  .enter.enterActive {\n    opacity: 1;\n    transform: scale(1); }\n\n.leave {\n  opacity: 1;\n  transform: scale(1); }\n  .leave.leaveActive {\n    opacity: 0;\n    transform: scale(0.85); }\n", ""]);
	
	// exports


/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _CalendarDay = __webpack_require__(395);
	
	var _CalendarDay2 = _interopRequireDefault(_CalendarDay);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Month = function (_Component) {
	  _inherits(Month, _Component);
	
	  function Month() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Month);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Month)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleDayClick = function (day) {
	      if (_this.props.onDayClick) _this.props.onDayClick(day);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Month, [{
	    key: 'renderWeeks',
	    value: function renderWeeks() {
	      var _this2 = this;
	
	      var days = _utils2.default.range(0, 7).map(function (d) {
	        return _time2.default.getDayOfWeekLetter(d, _this2.props.locale);
	      });
	      var source = this.props.sundayFirstDayOfWeek ? days : [].concat(_toConsumableArray(days.slice(1)), [days[0]]);
	      return source.map(function (d, i) {
	        return _react2.default.createElement(
	          'span',
	          { key: i },
	          d
	        );
	      });
	    }
	  }, {
	    key: 'renderDays',
	    value: function renderDays() {
	      var _this3 = this;
	
	      return _utils2.default.range(1, _time2.default.getDaysInMonth(this.props.viewDate) + 1).map(function (i) {
	        var date = new Date(_this3.props.viewDate.getFullYear(), _this3.props.viewDate.getMonth(), i);
	        var disabled = _time2.default.dateOutOfRange(date, _this3.props.minDate, _this3.props.maxDate);
	
	        return _react2.default.createElement(_CalendarDay2.default, {
	          key: i,
	          day: i,
	          disabled: disabled,
	          onClick: _this3.handleDayClick,
	          selectedDate: _this3.props.selectedDate,
	          theme: _this3.props.theme,
	          viewDate: _this3.props.viewDate,
	          sundayFirstDayOfWeek: _this3.props.sundayFirstDayOfWeek
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { 'data-react-toolbox': 'month', className: this.props.theme.month },
	        _react2.default.createElement(
	          'span',
	          { className: this.props.theme.title },
	          _time2.default.getFullMonth(this.props.viewDate, this.props.locale),
	          ' ',
	          this.props.viewDate.getFullYear()
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: this.props.theme.week },
	          this.renderWeeks()
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: this.props.theme.days },
	          this.renderDays()
	        )
	      );
	    }
	  }]);
	
	  return Month;
	}(_react.Component);
	
	Month.propTypes = {
	  locale: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),
	  maxDate: _react.PropTypes.object,
	  minDate: _react.PropTypes.object,
	  onDayClick: _react.PropTypes.func,
	  selectedDate: _react.PropTypes.object,
	  sundayFirstDayOfWeek: _react2.default.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    days: _react.PropTypes.string,
	    month: _react.PropTypes.string,
	    title: _react.PropTypes.string,
	    week: _react.PropTypes.string
	  }),
	  viewDate: _react.PropTypes.object
	};
	exports.default = Month;

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Day = function (_Component) {
	  _inherits(Day, _Component);
	
	  function Day() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Day);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Day)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleClick = function () {
	      if (!_this.props.disabled && _this.props.onClick) {
	        _this.props.onClick(_this.props.day);
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Day, [{
	    key: 'dayStyle',
	    value: function dayStyle() {
	      if (this.props.day === 1) {
	        var e = this.props.sundayFirstDayOfWeek ? 0 : 1;
	        return {
	          marginLeft: (_time2.default.getFirstWeekDay(this.props.viewDate) - e) * 100 / 7 + '%'
	        };
	      }
	    }
	  }, {
	    key: 'isSelected',
	    value: function isSelected() {
	      var sameYear = this.props.viewDate.getFullYear() === this.props.selectedDate.getFullYear();
	      var sameMonth = this.props.viewDate.getMonth() === this.props.selectedDate.getMonth();
	      var sameDay = this.props.day === this.props.selectedDate.getDate();
	      return sameYear && sameMonth && sameDay;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classnames;
	
	      var className = (0, _classnames3.default)(this.props.theme.day, (_classnames = {}, _defineProperty(_classnames, this.props.theme.active, this.isSelected()), _defineProperty(_classnames, this.props.theme.disabled, this.props.disabled), _classnames));
	
	      return _react2.default.createElement(
	        'div',
	        { 'data-react-toolbox': 'day', className: className, style: this.dayStyle() },
	        _react2.default.createElement(
	          'span',
	          { onClick: this.handleClick },
	          this.props.day
	        )
	      );
	    }
	  }]);
	
	  return Day;
	}(_react.Component);
	
	Day.propTypes = {
	  day: _react.PropTypes.number,
	  disabled: _react.PropTypes.bool,
	  onClick: _react.PropTypes.func,
	  selectedDate: _react.PropTypes.object,
	  sundayFirstDayOfWeek: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    day: _react.PropTypes.string,
	    disabled: _react.PropTypes.string
	  }),
	  viewDate: _react.PropTypes.object
	};
	exports.default = Day;

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Dialog, Calendar) {
	  var CalendarDialog = function (_Component) {
	    _inherits(CalendarDialog, _Component);
	
	    function CalendarDialog() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, CalendarDialog);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(CalendarDialog)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        display: 'months',
	        date: _this.props.value
	      }, _this.handleNewDate = function (value, dayClick) {
	        var state = { display: 'months', date: value };
	        if (_time2.default.dateOutOfRange(value, _this.props.minDate, _this.props.maxDate)) {
	          if (_this.props.maxDate && _this.props.minDate) {
	            state.date = _time2.default.closestDate(value, _this.props.maxDate, _this.props.minDate);
	          } else {
	            state.date = _this.props.maxDate || _this.props.minDate;
	          }
	        }
	        _this.setState(state);
	        if (dayClick && _this.props.autoOk && _this.props.onSelect) {
	          _this.props.onSelect(value);
	        }
	      }, _this.handleSelect = function (event) {
	        if (_this.props.onSelect) _this.props.onSelect(_this.state.date, event);
	      }, _this.handleSwitchDisplay = function (event) {
	        _this.setState({ display: event.target.id });
	      }, _this.updateStateDate = function (date) {
	        if (Object.prototype.toString.call(date) === '[object Date]') {
	          _this.handleNewDate(date, false);
	        }
	      }, _this.actions = [{ label: 'Cancel', className: _this.props.theme.button, onClick: _this.props.onDismiss }, { label: 'Ok', className: _this.props.theme.button, name: _this.props.name, onClick: _this.handleSelect }], _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(CalendarDialog, [{
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        this.updateStateDate(this.props.value);
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        this.updateStateDate(nextProps.value);
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var theme = this.props.theme;
	
	        var display = this.state.display + 'Display';
	        var className = (0, _classnames2.default)(theme.dialog, this.props.className);
	        var headerClassName = (0, _classnames2.default)(theme.header, theme[display]);
	        var shortDayOfWeek = _time2.default.getShortDayOfWeek(this.state.date.getDay(), this.props.locale);
	        var shortMonth = _time2.default.getShortMonth(this.state.date, this.props.locale);
	        var date = this.state.date.getDate();
	
	        return _react2.default.createElement(
	          Dialog,
	          {
	            actions: this.actions,
	            active: this.props.active,
	            className: className,
	            onEscKeyDown: this.props.onEscKeyDown,
	            onOverlayClick: this.props.onOverlayClick,
	            type: 'custom'
	          },
	          _react2.default.createElement(
	            'header',
	            { className: headerClassName },
	            _react2.default.createElement(
	              'span',
	              { id: 'years', className: theme.year, onClick: this.handleSwitchDisplay },
	              this.state.date.getFullYear()
	            ),
	            _react2.default.createElement(
	              'h3',
	              { id: 'months', className: theme.date, onClick: this.handleSwitchDisplay },
	              shortDayOfWeek,
	              ', ',
	              shortMonth,
	              ' ',
	              date
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: theme.calendarWrapper },
	            _react2.default.createElement(Calendar, {
	              display: this.state.display,
	              handleSelect: this.handleSelect,
	              maxDate: this.props.maxDate,
	              minDate: this.props.minDate,
	              onChange: this.handleNewDate,
	              selectedDate: this.state.date,
	              theme: this.props.theme,
	              locale: this.props.locale,
	              sundayFirstDayOfWeek: this.props.sundayFirstDayOfWeek })
	          )
	        );
	      }
	    }]);
	
	    return CalendarDialog;
	  }(_react.Component);
	
	  CalendarDialog.propTypes = {
	    active: _react.PropTypes.bool,
	    autoOk: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    locale: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),
	    maxDate: _react.PropTypes.object,
	    minDate: _react.PropTypes.object,
	    name: _react.PropTypes.string,
	    onDismiss: _react.PropTypes.func,
	    onEscKeyDown: _react.PropTypes.func,
	    onOverlayClick: _react.PropTypes.func,
	    onSelect: _react.PropTypes.func,
	    sundayFirstDayOfWeek: _react2.default.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      button: _react.PropTypes.string,
	      calendarWrapper: _react.PropTypes.string,
	      date: _react.PropTypes.string,
	      dialog: _react.PropTypes.string,
	      header: _react.PropTypes.string,
	      monthsDisplay: _react.PropTypes.string,
	      year: _react.PropTypes.string,
	      yearsDisplay: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.object
	  };
	  CalendarDialog.defaultProps = {
	    active: false,
	    className: '',
	    value: new Date()
	  };
	
	
	  return CalendarDialog;
	};
	
	exports.default = factory;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Dialog = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Dialog = __webpack_require__(373);
	
	var _overlay = __webpack_require__(398);
	
	var _overlay2 = _interopRequireDefault(_overlay);
	
	var _button = __webpack_require__(2);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _theme = __webpack_require__(401);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Dialog = (0, _Dialog.dialogFactory)(_overlay2.default, _button2.default);
	var ThemedDialog = (0, _reactCssThemr.themr)(_identifiers.DIALOG, _theme2.default)(Dialog);
	
	exports.default = ThemedDialog;
	exports.Dialog = ThemedDialog;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Overlay = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Overlay = __webpack_require__(375);
	
	var _theme = __webpack_require__(399);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedOverlay = (0, _reactCssThemr.themr)(_identifiers.OVERLAY, _theme2.default)(_Overlay.Overlay);
	exports.default = ThemedOverlay;
	exports.Overlay = ThemedOverlay;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(400);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 300;\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none; }\n  .overlay.invisible > *:not(.backdrop) {\n    pointer-events: all; }\n\n.backdrop {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n  opacity: 0;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: opacity; }\n\n.active {\n  pointer-events: all; }\n  .active > .backdrop {\n    opacity: 0.6; }\n", ""]);
	
	// exports


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(402);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".dialog {\n  display: flex;\n  max-width: 96vw;\n  max-height: 96vh;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 0.2rem;\n  box-shadow: 0 19px 60px rgba(0, 0, 0, 0.3), 0 15px 20px rgba(0, 0, 0, 0.22);\n  opacity: 0;\n  transition-delay: 0.07s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: opacity, transform;\n  transform: translateY(-4rem); }\n  .dialog.active {\n    opacity: 1;\n    transform: translateY(0%); }\n\n.small {\n  width: 30vw; }\n  @media screen and (max-width: 720px) {\n    .small {\n      width: 50vw; } }\n  @media screen and (max-width: 600px) {\n    .small {\n      width: 75vw; } }\n\n.normal {\n  width: 50vw; }\n  @media screen and (max-width: 600px) {\n    .normal {\n      width: 96vw; } }\n\n.large {\n  width: 96vw; }\n\n.fullscreen {\n  width: 96vw; }\n  @media screen and (max-width: 600px) {\n    .fullscreen {\n      width: 100vw;\n      max-width: 100vw;\n      min-height: 100vh;\n      max-height: 100vh;\n      border-radius: 0; } }\n\n.title {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 2rem;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: .02em;\n  flex-grow: 0;\n  margin-bottom: 1.6rem;\n  color: black; }\n\n.body {\n  flex-grow: 2;\n  padding: 2.4rem;\n  overflow-y: auto;\n  color: #757575; }\n\n.navigation {\n  flex-grow: 0;\n  padding: 0.8rem;\n  text-align: right; }\n\n.button {\n  min-width: 0;\n  padding-right: 0.8rem;\n  padding-left: 0.8rem;\n  margin-left: 0.8rem; }\n", ""]);
	
	// exports


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(404);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".input:not(.disabled) > .inputElement {\n  cursor: pointer; }\n\n.header {\n  padding: 1.6rem 2rem;\n  color: white;\n  cursor: pointer;\n  background-color: #3f51b5; }\n\n.year {\n  display: inline-block;\n  font-size: 1.4rem;\n  transition: opacity, font-size 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n\n.date {\n  display: block;\n  font-weight: 500;\n  text-transform: capitalize;\n  transition: opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n\n.calendarWrapper {\n  padding: 1rem 0.5rem 0; }\n\n.yearsDisplay .date {\n  opacity: 0.6; }\n\n.yearsDisplay .year {\n  font-size: 1.6rem; }\n\n.monthsDisplay .year {\n  opacity: 0.6; }\n\n.dialog {\n  width: 33rem; }\n  .dialog > [role=\"body\"] {\n    padding: 0; }\n  .dialog > [role=\"navigation\"] > .button {\n    color: #3f51b5; }\n    .dialog > [role=\"navigation\"] > .button:hover {\n      background: rgba(63, 81, 181, 0.2); }\n    .dialog > [role=\"navigation\"] > .button:focus:not(:active) {\n      background: rgba(63, 81, 181, 0.2); }\n\n.calendar {\n  position: relative;\n  height: 27rem;\n  overflow: hidden;\n  font-size: 1.4rem;\n  line-height: 3rem;\n  text-align: center;\n  background: white; }\n  .calendar .prev, .calendar .next {\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    height: 3.6rem;\n    cursor: pointer;\n    opacity: .7; }\n  .calendar .prev {\n    left: 0; }\n  .calendar .next {\n    right: 0; }\n\n.title {\n  display: inline-block;\n  font-weight: 500;\n  line-height: 3rem; }\n\n.years {\n  height: 100%;\n  overflow-y: auto;\n  font-size: 1.8rem; }\n  .years > li {\n    line-height: 2.4;\n    cursor: pointer; }\n    .years > li.active {\n      font-size: 2.4;\n      color: #3f51b5; }\n\n.week {\n  display: flex;\n  height: 3rem;\n  flex-wrap: wrap;\n  font-size: 1.3rem;\n  line-height: 3rem;\n  opacity: .5; }\n  .week > span {\n    flex: 0 0 14.28571%; }\n\n.days {\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 1.3rem; }\n\n.day {\n  flex: 0 0 14.28571%;\n  padding: 0.2rem 0; }\n  .day > span {\n    display: inline-block;\n    width: 3rem;\n    height: 3rem;\n    line-height: 3rem;\n    border-radius: 50%; }\n  .day:hover:not(.active):not(.disabled) > span {\n    color: white;\n    background: rgba(63, 81, 181, 0.21); }\n  .day.active > span {\n    color: white;\n    background: #3f51b5; }\n  .day:hover:not(.disabled) > span {\n    cursor: pointer; }\n  .day.disabled {\n    opacity: 0.25; }\n\n.month {\n  background-color: white; }\n", ""]);
	
	// exports


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Drawer = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _overlay = __webpack_require__(398);
	
	var _Drawer = __webpack_require__(406);
	
	var _theme = __webpack_require__(407);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Drawer = (0, _Drawer.drawerFactory)(_overlay.Overlay);
	var ThemedDrawer = (0, _reactCssThemr.themr)(_identifiers.DRAWER, _theme2.default)(Drawer);
	
	exports.default = ThemedDrawer;
	exports.Drawer = ThemedDrawer;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Drawer = exports.drawerFactory = undefined;
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _identifiers = __webpack_require__(3);
	
	var _ActivableRenderer = __webpack_require__(374);
	
	var _ActivableRenderer2 = _interopRequireDefault(_ActivableRenderer);
	
	var _Overlay = __webpack_require__(375);
	
	var _Overlay2 = _interopRequireDefault(_Overlay);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var factory = function factory(Overlay) {
	  var Drawer = function Drawer(_ref) {
	    var active = _ref.active;
	    var children = _ref.children;
	    var className = _ref.className;
	    var onOverlayClick = _ref.onOverlayClick;
	    var theme = _ref.theme;
	    var type = _ref.type;
	
	    var _className = (0, _classnames3.default)([theme.drawer, theme[type]], _defineProperty({}, theme.active, active), className);
	
	    return _react2.default.createElement(
	      Overlay,
	      { active: active, onClick: onOverlayClick },
	      _react2.default.createElement(
	        'div',
	        { 'data-react-toolbox': 'drawer', className: _className },
	        _react2.default.createElement(
	          'aside',
	          { className: theme.content },
	          children
	        )
	      )
	    );
	  };
	
	  Drawer.propTypes = {
	    active: _react.PropTypes.bool,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    onOverlayClick: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      active: _react.PropTypes.string,
	      content: _react.PropTypes.string,
	      drawer: _react.PropTypes.string,
	      left: _react.PropTypes.string,
	      right: _react.PropTypes.string
	    }),
	    type: _react.PropTypes.oneOf(['left', 'right'])
	  };
	
	  Drawer.defaultProps = {
	    active: false,
	    className: '',
	    type: 'left'
	  };
	
	  return (0, _ActivableRenderer2.default)()(Drawer);
	};
	
	var Drawer = factory(_Overlay2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.DRAWER)(Drawer);
	exports.drawerFactory = factory;
	exports.Drawer = Drawer;

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(408);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".drawer {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  position: absolute;\n  top: 0;\n  display: block;\n  width: 24rem;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  color: #424242;\n  pointer-events: none;\n  background-color: #fafafa;\n  transition-delay: 0s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: transform;\n  transform-style: preserve-3d;\n  will-change: transform; }\n  .drawer.active {\n    pointer-events: all;\n    transition-delay: 0.07s;\n    transform: translateX(0); }\n  .drawer.right {\n    right: 0;\n    border-left: 1px solid #e0e0e0; }\n    .drawer.right:not(.active) {\n      transform: translateX(100%); }\n  .drawer.left {\n    left: 0;\n    border-right: 1px solid #e0e0e0; }\n    .drawer.left:not(.active) {\n      transform: translateX(-100%); }\n", ""]);
	
	// exports


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Dropdown = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Dropdown = __webpack_require__(410);
	
	var _input = __webpack_require__(366);
	
	var _theme = __webpack_require__(411);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Dropdown = (0, _Dropdown.dropdownFactory)(_input.Input);
	var ThemedDropdown = (0, _reactCssThemr.themr)(_identifiers.DROPDOWN, _theme2.default)(Dropdown);
	
	exports.default = ThemedDropdown;
	exports.Dropdown = ThemedDropdown;

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Dropdown = exports.dropdownFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(46);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames3 = __webpack_require__(43);
	
	var _classnames4 = _interopRequireDefault(_classnames3);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Input = __webpack_require__(362);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Input) {
	  var Dropdown = function (_Component) {
	    _inherits(Dropdown, _Component);
	
	    function Dropdown() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Dropdown);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Dropdown)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        active: false,
	        up: false
	      }, _this.close = function () {
	        if (_this.state.active) {
	          _this.setState({ active: false });
	        }
	      }, _this.handleDocumentClick = function (event) {
	        if (_this.state.active && !_events2.default.targetIsDescendant(event, _reactDom2.default.findDOMNode(_this))) {
	          _this.setState({ active: false });
	        }
	      }, _this.handleClick = function (event) {
	        _events2.default.pauseEvent(event);
	        var client = event.target.getBoundingClientRect();
	        var screen_height = window.innerHeight || document.documentElement.offsetHeight;
	        var up = _this.props.auto ? client.top > screen_height / 2 + client.height : false;
	        if (_this.props.onClick) _this.props.onClick(event);
	        if (_this.props.onFocus) _this.props.onFocus(event);
	        _this.setState({ active: true, up: up });
	      }, _this.handleSelect = function (item, event) {
	        if (_this.props.onBlur) _this.props.onBlur(event);
	        if (!_this.props.disabled && _this.props.onChange) {
	          if (_this.props.name) {
	            event.target.name = _this.props.name;
	          }
	          _this.props.onChange(item, event);
	          _this.setState({ active: false });
	        }
	      }, _this.getSelectedItem = function () {
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;
	
	        try {
	          for (var _iterator = _this.props.source[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var item = _step.value;
	
	            if (item.value === _this.props.value) return item;
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	
	        if (!_this.props.allowBlank) {
	          return _this.props.source[0];
	        }
	      }, _this.renderValue = function (item, idx) {
	        var theme = _this.props.theme;
	
	        var className = item.value === _this.props.value ? theme.selected : null;
	        return _react2.default.createElement(
	          'li',
	          { key: idx, className: className, onClick: _this.handleSelect.bind(_this, item.value) },
	          _this.props.template ? _this.props.template(item) : item.label
	        );
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Dropdown, [{
	      key: 'componentWillUpdate',
	      value: function componentWillUpdate(nextProps, nextState) {
	        if (!this.state.active && nextState.active) {
	          _events2.default.addEventsToDocument({ click: this.handleDocumentClick });
	        }
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate(prevProps, prevState) {
	        if (prevState.active && !this.state.active) {
	          _events2.default.removeEventsFromDocument({ click: this.handleDocumentClick });
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (this.state.active) {
	          _events2.default.removeEventsFromDocument({ click: this.handleDocumentClick });
	        }
	      }
	    }, {
	      key: 'renderTemplateValue',
	      value: function renderTemplateValue(selected) {
	        var _classnames;
	
	        var theme = this.props.theme;
	
	        var className = (0, _classnames4.default)(theme.field, (_classnames = {}, _defineProperty(_classnames, theme.errored, this.props.error), _defineProperty(_classnames, theme.disabled, this.props.disabled), _classnames));
	
	        return _react2.default.createElement(
	          'div',
	          { className: className, onClick: this.handleClick },
	          _react2.default.createElement(
	            'div',
	            { className: theme.templateValue + ' ' + theme.value },
	            this.props.template(selected)
	          ),
	          this.props.label ? _react2.default.createElement(
	            'label',
	            { className: theme.label },
	            this.props.label
	          ) : null,
	          this.props.error ? _react2.default.createElement(
	            'span',
	            { className: theme.error },
	            this.props.error
	          ) : null
	        );
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classnames2;
	
	        var _props = this.props;
	        var template = _props.template;
	        var theme = _props.theme;
	        var source = _props.source;
	        var allowBlank = _props.allowBlank;
	        var auto = _props.auto;
	
	        var others = _objectWithoutProperties(_props, ['template', 'theme', 'source', 'allowBlank', 'auto']); //eslint-disable-line no-unused-vars
	
	
	        var selected = this.getSelectedItem();
	        var className = (0, _classnames4.default)(theme.dropdown, (_classnames2 = {}, _defineProperty(_classnames2, theme.up, this.state.up), _defineProperty(_classnames2, theme.active, this.state.active), _defineProperty(_classnames2, theme.disabled, this.props.disabled), _classnames2), this.props.className);
	
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'dropdown', className: className },
	          _react2.default.createElement(Input, _extends({}, others, {
	            className: theme.value,
	            onClick: this.handleClick,
	            readOnly: true,
	            type: template && selected ? 'hidden' : null,
	            value: selected && selected.label ? selected.label : ''
	          })),
	          template && selected ? this.renderTemplateValue(selected) : null,
	          _react2.default.createElement(
	            'ul',
	            { className: theme.values, ref: 'values' },
	            source.map(this.renderValue)
	          )
	        );
	      }
	    }]);
	
	    return Dropdown;
	  }(_react.Component);
	
	  Dropdown.propTypes = {
	    allowBlank: _react.PropTypes.bool,
	    auto: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    error: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    name: _react.PropTypes.string,
	    onBlur: _react.PropTypes.func,
	    onChange: _react.PropTypes.func,
	    onClick: _react.PropTypes.func,
	    onFocus: _react.PropTypes.func,
	    source: _react.PropTypes.array.isRequired,
	    template: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      active: _react.PropTypes.string,
	      disabled: _react.PropTypes.string,
	      dropdown: _react.PropTypes.string,
	      error: _react.PropTypes.string,
	      errored: _react.PropTypes.string,
	      field: _react.PropTypes.string,
	      label: _react.PropTypes.string,
	      selected: _react.PropTypes.string,
	      templateValue: _react.PropTypes.string,
	      up: _react.PropTypes.string,
	      value: _react.PropTypes.string,
	      values: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
	  };
	  Dropdown.defaultProps = {
	    auto: true,
	    className: '',
	    allowBlank: true,
	    disabled: false
	  };
	
	
	  return Dropdown;
	};
	
	var Dropdown = factory(_Input2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.DROPDOWN)(Dropdown);
	exports.dropdownFactory = factory;
	exports.Dropdown = Dropdown;

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(412);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".dropdown {\n  position: relative; }\n  .dropdown:not(.active) > .values {\n    max-height: 0;\n    visibility: hidden; }\n  .dropdown.active > .label, .dropdown.active > .value {\n    opacity: .5; }\n  .dropdown.active > .values {\n    max-height: 45vh;\n    visibility: visible;\n    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.12), 0 1px 4px rgba(0, 0, 0, 0.24); }\n  .dropdown:not(.up) > .values {\n    top: 0;\n    bottom: auto; }\n  .dropdown.up > .values {\n    top: auto;\n    bottom: 0; }\n  .dropdown.disabled {\n    pointer-events: none;\n    cursor: normal; }\n\n.value > input {\n  cursor: pointer; }\n\n.value:after {\n  position: absolute;\n  top: 50%;\n  right: 0.8rem;\n  width: 0;\n  height: 0;\n  pointer-events: none;\n  content: \"\";\n  border-top: 0.54857rem solid rgba(0, 0, 0, 0.12);\n  border-right: 0.54857rem solid transparent;\n  border-left: 0.54857rem solid transparent;\n  transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n\n.field {\n  position: relative;\n  padding: 2rem 0;\n  cursor: pointer; }\n  .field.errored {\n    padding-bottom: 0; }\n    .field.errored > .label {\n      color: #de3226; }\n    .field.errored > .templateValue {\n      border-bottom: 1px solid #de3226; }\n  .field.disabled {\n    pointer-events: none;\n    cursor: normal; }\n    .field.disabled > .templateValue {\n      border-bottom-style: dotted;\n      opacity: .7; }\n\n.templateValue {\n  position: relative;\n  min-height: 3.84rem;\n  padding: 0.8rem 0;\n  color: #212121;\n  background-color: transparent;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n\n.label {\n  position: absolute;\n  top: 0.6rem;\n  left: 0;\n  font-size: 1.2rem;\n  line-height: 1.6rem;\n  color: rgba(0, 0, 0, 0.26); }\n\n.error {\n  margin-bottom: -2rem;\n  font-size: 1.2rem;\n  line-height: 2rem;\n  color: #de3226; }\n\n.values {\n  position: absolute;\n  z-index: 100;\n  width: 100%;\n  overflow-y: auto;\n  list-style: none;\n  background-color: white;\n  border-radius: 0.2rem;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transition-property: max-height, box-shadow; }\n  .values::-webkit-scrollbar {\n    width: 0;\n    height: 0; }\n  .values > * {\n    position: relative;\n    padding: 1rem;\n    overflow: hidden;\n    cursor: pointer; }\n    .values > *:hover {\n      background-color: #eeeeee; }\n    .values > *.selected {\n      color: #3f51b5; }\n", ""]);
	
	// exports


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Form = undefined;
	
	var _Form = __webpack_require__(414);
	
	var _autocomplete = __webpack_require__(359);
	
	var _autocomplete2 = _interopRequireDefault(_autocomplete);
	
	var _button = __webpack_require__(2);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _checkbox = __webpack_require__(216);
	
	var _checkbox2 = _interopRequireDefault(_checkbox);
	
	var _date_picker = __webpack_require__(371);
	
	var _date_picker2 = _interopRequireDefault(_date_picker);
	
	var _dropdown = __webpack_require__(409);
	
	var _dropdown2 = _interopRequireDefault(_dropdown);
	
	var _input = __webpack_require__(366);
	
	var _input2 = _interopRequireDefault(_input);
	
	var _radio = __webpack_require__(242);
	
	var _radio2 = _interopRequireDefault(_radio);
	
	var _slider = __webpack_require__(426);
	
	var _slider2 = _interopRequireDefault(_slider);
	
	var _switch = __webpack_require__(432);
	
	var _switch2 = _interopRequireDefault(_switch);
	
	var _time_picker = __webpack_require__(435);
	
	var _time_picker2 = _interopRequireDefault(_time_picker);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedForm = (0, _Form.formFactory)(_autocomplete2.default, _button2.default, _checkbox2.default, _date_picker2.default, _dropdown2.default, _input2.default, _radio2.default, _slider2.default, _switch2.default, _time_picker2.default);
	
	exports.default = ThemedForm;
	exports.Form = ThemedForm;

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Form = exports.formFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Autocomplete = __webpack_require__(360);
	
	var _Autocomplete2 = _interopRequireDefault(_Autocomplete);
	
	var _Button = __webpack_require__(42);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Checkbox = __webpack_require__(217);
	
	var _Checkbox2 = _interopRequireDefault(_Checkbox);
	
	var _DatePicker = __webpack_require__(372);
	
	var _DatePicker2 = _interopRequireDefault(_DatePicker);
	
	var _Dropdown = __webpack_require__(410);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _Input = __webpack_require__(362);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _RadioGroup = __webpack_require__(245);
	
	var _RadioGroup2 = _interopRequireDefault(_RadioGroup);
	
	var _Slider = __webpack_require__(415);
	
	var _Slider2 = _interopRequireDefault(_Slider);
	
	var _Switch = __webpack_require__(417);
	
	var _Switch2 = _interopRequireDefault(_Switch);
	
	var _TimePicker = __webpack_require__(419);
	
	var _TimePicker2 = _interopRequireDefault(_TimePicker);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Autocomplete, Button, Checkbox, DatePicker, Dropdown, Input, RadioGroup, Slider, Switch, TimePicker) {
	
	  var COMPONENTS = {
	    'autocomplete': Autocomplete,
	    'button': Button,
	    'checkbox': Checkbox,
	    'datepicker': DatePicker,
	    'dropdown': Dropdown,
	    'input': Input,
	    'radioGroup': RadioGroup,
	    'slider': Slider,
	    'switch': Switch,
	    'timepicker': TimePicker
	  };
	
	  var Form = function (_Component) {
	    _inherits(Form, _Component);
	
	    function Form() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Form);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Form)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.onSubmit = function (event) {
	        event.preventDefault();
	        if (_this.props.onSubmit) _this.props.onSubmit(event);
	      }, _this.onChange = function (field, value, event) {
	        if (_this.props.onChange) _this.props.onChange(field, value, event);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Form, [{
	      key: 'renderFields',
	      value: function renderFields() {
	        var _this2 = this;
	
	        return Object.keys(this.props.model).map(function (field, index) {
	          var properties = _this2.props.model[field];
	          var Field = COMPONENTS[properties.kind.toLowerCase()];
	          return _react2.default.createElement(Field, _extends({ key: index }, properties, { onChange: _this2.onChange.bind(_this2, field) }));
	        });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(
	          'form',
	          { 'data-react-toolbox': 'form', className: this.props.className, onSubmit: this.onSubmit },
	          this.renderFields(),
	          this.props.children
	        );
	      }
	    }]);
	
	    return Form;
	  }(_react.Component);
	
	  Form.propTypes = {
	    attributes: _react.PropTypes.array,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    model: _react.PropTypes.object,
	    onChange: _react.PropTypes.func,
	    onError: _react.PropTypes.func,
	    onSubmit: _react.PropTypes.func,
	    onValid: _react.PropTypes.func,
	    storage: _react.PropTypes.string
	  };
	  Form.defaultProps = {
	    attributes: [],
	    className: ''
	  };
	
	
	  return Form;
	};
	
	var Form = factory(_Autocomplete2.default, _Button2.default, _Checkbox2.default, _DatePicker2.default, _Dropdown2.default, _Input2.default, _RadioGroup2.default, _Slider2.default, _Switch2.default, _TimePicker2.default);
	
	exports.default = Form;
	exports.formFactory = factory;
	exports.Form = Form;

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Slider = exports.sliderFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(46);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _prefixer = __webpack_require__(186);
	
	var _prefixer2 = _interopRequireDefault(_prefixer);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _ProgressBar = __webpack_require__(416);
	
	var _ProgressBar2 = _interopRequireDefault(_ProgressBar);
	
	var _Input = __webpack_require__(362);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(ProgressBar, Input) {
	  var Slider = function (_Component) {
	    _inherits(Slider, _Component);
	
	    function Slider() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Slider);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Slider)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        inputFocused: false,
	        inputValue: null,
	        sliderLength: 0,
	        sliderStart: 0
	      }, _this.handleInputFocus = function () {
	        _this.setState({
	          inputFocused: true,
	          inputValue: _this.valueForInput(_this.props.value)
	        });
	      }, _this.handleInputChange = function (value) {
	        _this.setState({ inputValue: value });
	      }, _this.handleInputBlur = function (event) {
	        var value = _this.state.inputValue || 0;
	        _this.setState({ inputFocused: false, inputValue: null }, function () {
	          _this.props.onChange(_this.trimValue(value), event);
	        });
	      }, _this.handleKeyDown = function (event) {
	        if ([13, 27].indexOf(event.keyCode) !== -1) _this.getInput().blur();
	        if (event.keyCode === 38) _this.addToValue(_this.props.step);
	        if (event.keyCode === 40) _this.addToValue(-_this.props.step);
	      }, _this.handleMouseDown = function (event) {
	        if (_this.state.inputFocused) _this.getInput().blur();
	        _events2.default.addEventsToDocument(_this.getMouseEventMap());
	        _this.start(_events2.default.getMousePosition(event));
	        _events2.default.pauseEvent(event);
	      }, _this.handleMouseMove = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.move(_events2.default.getMousePosition(event));
	      }, _this.handleMouseUp = function () {
	        _this.end(_this.getMouseEventMap());
	      }, _this.handleResize = function (event, callback) {
	        var _ReactDOM$findDOMNode = _reactDom2.default.findDOMNode(_this.refs.progressbar).getBoundingClientRect();
	
	        var left = _ReactDOM$findDOMNode.left;
	        var right = _ReactDOM$findDOMNode.right;
	
	        var cb = callback || function () {};
	        _this.setState({ sliderStart: left, sliderLength: right - left }, cb);
	      }, _this.handleSliderBlur = function () {
	        _events2.default.removeEventsFromDocument(_this.getKeyboardEvents());
	      }, _this.handleSliderFocus = function () {
	        _events2.default.addEventsToDocument(_this.getKeyboardEvents());
	      }, _this.handleTouchEnd = function () {
	        _this.end(_this.getTouchEventMap());
	      }, _this.handleTouchMove = function (event) {
	        _this.move(_events2.default.getTouchPosition(event));
	      }, _this.handleTouchStart = function (event) {
	        if (_this.state.inputFocused) _this.getInput().blur();
	        _this.start(_events2.default.getTouchPosition(event));
	        _events2.default.addEventsToDocument(_this.getTouchEventMap());
	        _events2.default.pauseEvent(event);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Slider, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        window.addEventListener('resize', this.handleResize);
	        this.handleResize();
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.state.inputFocused && this.props.value !== nextProps.value) {
	          this.setState({ inputValue: this.valueForInput(nextProps.value) });
	        }
	      }
	    }, {
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps, nextState) {
	        return this.state.inputFocused || !nextState.inputFocused;
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        window.removeEventListener('resize', this.handleResize);
	        _events2.default.removeEventsFromDocument(this.getMouseEventMap());
	        _events2.default.removeEventsFromDocument(this.getTouchEventMap());
	        _events2.default.removeEventsFromDocument(this.getKeyboardEvents());
	      }
	    }, {
	      key: 'addToValue',
	      value: function addToValue(increment) {
	        var value = this.state.inputFocused ? parseFloat(this.state.inputValue) : this.props.value;
	        value = this.trimValue(value + increment);
	        if (value !== this.props.value) this.props.onChange(value);
	      }
	    }, {
	      key: 'getInput',
	      value: function getInput() {
	        return this.refs.input && this.refs.input.getWrappedInstance ? this.refs.input.getWrappedInstance() : this.refs.input;
	      }
	    }, {
	      key: 'getKeyboardEvents',
	      value: function getKeyboardEvents() {
	        return {
	          keydown: this.handleKeyDown
	        };
	      }
	    }, {
	      key: 'getMouseEventMap',
	      value: function getMouseEventMap() {
	        return {
	          mousemove: this.handleMouseMove,
	          mouseup: this.handleMouseUp
	        };
	      }
	    }, {
	      key: 'getTouchEventMap',
	      value: function getTouchEventMap() {
	        return {
	          touchmove: this.handleTouchMove,
	          touchend: this.handleTouchEnd
	        };
	      }
	    }, {
	      key: 'end',
	      value: function end(revents) {
	        _events2.default.removeEventsFromDocument(revents);
	        this.setState({ pressed: false });
	      }
	    }, {
	      key: 'knobOffset',
	      value: function knobOffset() {
	        var _props = this.props;
	        var max = _props.max;
	        var min = _props.min;
	
	        return this.state.sliderLength * (this.props.value - min) / (max - min);
	      }
	    }, {
	      key: 'move',
	      value: function move(position) {
	        var newValue = this.positionToValue(position);
	        if (newValue !== this.props.value) this.props.onChange(newValue);
	      }
	    }, {
	      key: 'positionToValue',
	      value: function positionToValue(position) {
	        var _state = this.state;
	        var start = _state.sliderStart;
	        var length = _state.sliderLength;
	        var _props2 = this.props;
	        var max = _props2.max;
	        var min = _props2.min;
	
	        return this.trimValue((position.x - start) / length * (max - min) + min);
	      }
	    }, {
	      key: 'start',
	      value: function start(position) {
	        var _this2 = this;
	
	        this.handleResize(null, function () {
	          _this2.setState({ pressed: true });
	          _this2.props.onChange(_this2.positionToValue(position));
	        });
	      }
	    }, {
	      key: 'stepDecimals',
	      value: function stepDecimals() {
	        return (this.props.step.toString().split('.')[1] || []).length;
	      }
	    }, {
	      key: 'trimValue',
	      value: function trimValue(value) {
	        if (value < this.props.min) return this.props.min;
	        if (value > this.props.max) return this.props.max;
	        return _utils2.default.round(value, this.stepDecimals());
	      }
	    }, {
	      key: 'valueForInput',
	      value: function valueForInput(value) {
	        var decimals = this.stepDecimals();
	        return decimals > 0 ? value.toFixed(decimals) : value.toString();
	      }
	    }, {
	      key: 'renderSnaps',
	      value: function renderSnaps() {
	        var _this3 = this;
	
	        if (this.props.snaps) {
	          return _react2.default.createElement(
	            'div',
	            { ref: 'snaps', className: this.props.theme.snaps },
	            _utils2.default.range(0, (this.props.max - this.props.min) / this.props.step).map(function (i) {
	              return _react2.default.createElement('div', { key: 'span-' + i, className: _this3.props.theme.snap });
	            })
	          );
	        }
	      }
	    }, {
	      key: 'renderInput',
	      value: function renderInput() {
	        if (this.props.editable) {
	          var value = this.state.inputFocused ? this.state.inputValue : this.valueForInput(this.props.value);
	          return _react2.default.createElement(Input, {
	            ref: 'input',
	            className: this.props.theme.input,
	            onFocus: this.handleInputFocus,
	            onChange: this.handleInputChange,
	            onBlur: this.handleInputBlur,
	            value: value
	          });
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var theme = this.props.theme;
	
	        var knobStyles = (0, _prefixer2.default)({ transform: 'translateX(' + this.knobOffset() + 'px)' });
	        var className = (0, _classnames3.default)(theme.slider, (_classnames = {}, _defineProperty(_classnames, theme.editable, this.props.editable), _defineProperty(_classnames, theme.pinned, this.props.pinned), _defineProperty(_classnames, theme.pressed, this.state.pressed), _defineProperty(_classnames, theme.ring, this.props.value === this.props.min), _classnames), this.props.className);
	
	        return _react2.default.createElement(
	          'div',
	          {
	            className: className,
	            'data-react-toolbox': 'slider',
	            onBlur: this.handleSliderBlur,
	            onFocus: this.handleSliderFocus,
	            tabIndex: '0'
	          },
	          _react2.default.createElement(
	            'div',
	            {
	              ref: 'slider',
	              className: theme.container,
	              onMouseDown: this.handleMouseDown,
	              onTouchStart: this.handleTouchStart
	            },
	            _react2.default.createElement(
	              'div',
	              {
	                ref: 'knob',
	                className: theme.knob,
	                onMouseDown: this.handleMouseDown,
	                onTouchStart: this.handleTouchStart,
	                style: knobStyles
	              },
	              _react2.default.createElement('div', { className: theme.innerknob, 'data-value': parseInt(this.props.value) })
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: theme.progress },
	              _react2.default.createElement(ProgressBar, {
	                ref: 'progressbar',
	                className: theme.innerprogress,
	                max: this.props.max,
	                min: this.props.min,
	                mode: 'determinate',
	                value: this.props.value
	              }),
	              this.renderSnaps()
	            )
	          ),
	          this.renderInput()
	        );
	      }
	    }]);
	
	    return Slider;
	  }(_react.Component);
	
	  Slider.propTypes = {
	    className: _react.PropTypes.string,
	    editable: _react.PropTypes.bool,
	    max: _react.PropTypes.number,
	    min: _react.PropTypes.number,
	    onChange: _react.PropTypes.func,
	    pinned: _react.PropTypes.bool,
	    snaps: _react.PropTypes.bool,
	    step: _react.PropTypes.number,
	    theme: _react.PropTypes.shape({
	      container: _react.PropTypes.string,
	      editable: _react.PropTypes.string,
	      innerknob: _react.PropTypes.string,
	      innerprogress: _react.PropTypes.string,
	      input: _react.PropTypes.string,
	      knob: _react.PropTypes.string,
	      pinned: _react.PropTypes.string,
	      pressed: _react.PropTypes.string,
	      progress: _react.PropTypes.string,
	      ring: _react.PropTypes.string,
	      slider: _react.PropTypes.string,
	      snap: _react.PropTypes.string,
	      snaps: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.number
	  };
	  Slider.defaultProps = {
	    className: '',
	    editable: false,
	    max: 100,
	    min: 0,
	    pinned: false,
	    snaps: false,
	    step: 0.01,
	    value: 0
	  };
	
	
	  return Slider;
	};
	
	var Slider = factory(_ProgressBar2.default, _Input2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.SLIDER)(Slider);
	exports.sliderFactory = factory;
	exports.Slider = Slider;

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ProgressBar = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _prefixer = __webpack_require__(186);
	
	var _prefixer2 = _interopRequireDefault(_prefixer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ProgressBar = function (_Component) {
	  _inherits(ProgressBar, _Component);
	
	  function ProgressBar() {
	    _classCallCheck(this, ProgressBar);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ProgressBar).apply(this, arguments));
	  }
	
	  _createClass(ProgressBar, [{
	    key: 'calculateRatio',
	    value: function calculateRatio(value) {
	      if (value < this.props.min) return 0;
	      if (value > this.props.max) return 1;
	      return (value - this.props.min) / (this.props.max - this.props.min);
	    }
	  }, {
	    key: 'circularStyle',
	    value: function circularStyle() {
	      if (this.props.mode !== 'indeterminate') {
	        return { strokeDasharray: 2 * Math.PI * 25 * this.calculateRatio(this.props.value) + ', 400' };
	      }
	    }
	  }, {
	    key: 'linearStyle',
	    value: function linearStyle() {
	      if (this.props.mode !== 'indeterminate') {
	        return {
	          buffer: (0, _prefixer2.default)({ transform: 'scaleX(' + this.calculateRatio(this.props.buffer) + ')' }),
	          value: (0, _prefixer2.default)({ transform: 'scaleX(' + this.calculateRatio(this.props.value) + ')' })
	        };
	      } else {
	        return {};
	      }
	    }
	  }, {
	    key: 'renderCircular',
	    value: function renderCircular() {
	      return _react2.default.createElement(
	        'svg',
	        { className: this.props.theme.circle, viewBox: '0 0 60 60' },
	        _react2.default.createElement('circle', { className: this.props.theme.path, style: this.circularStyle(), cx: '30', cy: '30', r: '25' })
	      );
	    }
	  }, {
	    key: 'renderLinear',
	    value: function renderLinear() {
	      var _linearStyle = this.linearStyle();
	
	      var buffer = _linearStyle.buffer;
	      var value = _linearStyle.value;
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement('span', { ref: 'buffer', 'data-ref': 'buffer', className: this.props.theme.buffer, style: buffer }),
	        _react2.default.createElement('span', { ref: 'value', 'data-ref': 'value', className: this.props.theme.value, style: value })
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classnames;
	
	      var _props = this.props;
	      var className = _props.className;
	      var max = _props.max;
	      var min = _props.min;
	      var mode = _props.mode;
	      var multicolor = _props.multicolor;
	      var type = _props.type;
	      var theme = _props.theme;
	      var value = _props.value;
	
	      var _className = (0, _classnames3.default)(theme[type], (_classnames = {}, _defineProperty(_classnames, theme[mode], mode), _defineProperty(_classnames, theme.multicolor, multicolor), _classnames), className);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          'data-react-toolbox': 'progress-bar',
	          'aria-valuenow': value,
	          'aria-valuemin': min,
	          'aria-valuemax': max,
	          className: _className
	        },
	        type === 'circular' ? this.renderCircular() : this.renderLinear()
	      );
	    }
	  }]);
	
	  return ProgressBar;
	}(_react.Component);
	
	ProgressBar.propTypes = {
	  buffer: _react.PropTypes.number,
	  className: _react.PropTypes.string,
	  max: _react.PropTypes.number,
	  min: _react.PropTypes.number,
	  mode: _react.PropTypes.oneOf(['determinate', 'indeterminate']),
	  multicolor: _react.PropTypes.bool,
	  theme: _react.PropTypes.shape({
	    buffer: _react.PropTypes.string,
	    circle: _react.PropTypes.string,
	    circular: _react.PropTypes.string,
	    indeterminate: _react.PropTypes.string,
	    linear: _react.PropTypes.string,
	    multicolor: _react.PropTypes.string,
	    path: _react.PropTypes.string,
	    value: _react.PropTypes.string
	  }),
	  type: _react.PropTypes.oneOf(['linear', 'circular']),
	  value: _react.PropTypes.number
	};
	ProgressBar.defaultProps = {
	  buffer: 0,
	  className: '',
	  max: 100,
	  min: 0,
	  mode: 'indeterminate',
	  multicolor: false,
	  type: 'linear',
	  value: 0
	};
	exports.default = (0, _reactCssThemr.themr)(_identifiers.PROGRESS_BAR)(ProgressBar);
	exports.ProgressBar = ProgressBar;

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Switch = exports.switchFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Ripple = __webpack_require__(45);
	
	var _Ripple2 = _interopRequireDefault(_Ripple);
	
	var _Thumb = __webpack_require__(418);
	
	var _Thumb2 = _interopRequireDefault(_Thumb);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Thumb) {
	  var Switch = function (_Component) {
	    _inherits(Switch, _Component);
	
	    function Switch() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Switch);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Switch)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleToggle = function (event) {
	        if (event.pageX !== 0 && event.pageY !== 0) _this.blur();
	        if (!_this.props.disabled && _this.props.onChange) {
	          _this.props.onChange(!_this.props.checked, event);
	        }
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Switch, [{
	      key: 'blur',
	      value: function blur() {
	        this.refs.input.blur();
	      }
	    }, {
	      key: 'focus',
	      value: function focus() {
	        this.refs.input.focus();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var className = _props.className;
	        var checked = _props.checked;
	        var disabled = _props.disabled;
	        var onChange = _props.onChange;
	        var theme = _props.theme;
	
	        var others = _objectWithoutProperties(_props, ['className', 'checked', 'disabled', 'onChange', 'theme']); //eslint-disable-line no-unused-vars
	
	
	        var _className = (0, _classnames2.default)(theme[disabled ? 'disabled' : 'field'], className);
	        return _react2.default.createElement(
	          'label',
	          { 'data-react-toolbox': 'switch', className: _className },
	          _react2.default.createElement('input', _extends({}, others, {
	            checked: this.props.checked,
	            className: theme.input,
	            onClick: this.handleToggle,
	            readOnly: true,
	            ref: 'input',
	            type: 'checkbox'
	          })),
	          _react2.default.createElement(
	            'span',
	            { className: theme[checked ? 'on' : 'off'] },
	            _react2.default.createElement(Thumb, { disabled: this.props.disabled, theme: theme })
	          ),
	          this.props.label ? _react2.default.createElement(
	            'span',
	            { className: theme.text },
	            this.props.label
	          ) : null
	        );
	      }
	    }]);
	
	    return Switch;
	  }(_react.Component);
	
	  Switch.propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    label: _react.PropTypes.string,
	    name: _react.PropTypes.string,
	    onBlur: _react.PropTypes.func,
	    onChange: _react.PropTypes.func,
	    onFocus: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      disabled: _react.PropTypes.string,
	      field: _react.PropTypes.string,
	      input: _react.PropTypes.string,
	      off: _react.PropTypes.string,
	      on: _react.PropTypes.string,
	      ripple: _react.PropTypes.string,
	      text: _react.PropTypes.string,
	      thumb: _react.PropTypes.string
	    })
	  };
	  Switch.defaultProps = {
	    checked: false,
	    className: '',
	    disabled: false
	  };
	
	
	  return Switch;
	};
	
	var Thumb = (0, _Thumb2.default)((0, _Ripple2.default)({ centered: true, spread: 2.6 }));
	var Switch = factory(Thumb);
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.SWITCH)(Switch);
	exports.switchFactory = factory;
	exports.Switch = Switch;

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var factory = function factory(ripple) {
	  var Thumb = function Thumb(_ref) {
	    var onMouseDown = _ref.onMouseDown;
	    var theme = _ref.theme;
	
	    var other = _objectWithoutProperties(_ref, ['onMouseDown', 'theme']);
	
	    return _react2.default.createElement('span', _extends({ role: 'thumb', className: theme.thumb, onMouseDown: onMouseDown }, other));
	  };
	
	  Thumb.propTypes = {
	    children: _react.PropTypes.any,
	    theme: _react.PropTypes.shape({
	      ripple: _react.PropTypes.string,
	      thumb: _react.PropTypes.string
	    })
	  };
	
	  return ripple(Thumb);
	};
	
	exports.default = factory;

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TimePicker = exports.timePickerFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _Dialog = __webpack_require__(373);
	
	var _Dialog2 = _interopRequireDefault(_Dialog);
	
	var _Input = __webpack_require__(362);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _TimePickerDialog = __webpack_require__(420);
	
	var _TimePickerDialog2 = _interopRequireDefault(_TimePickerDialog);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(TimePickerDialog, Input) {
	  var TimePicker = function (_Component) {
	    _inherits(TimePicker, _Component);
	
	    function TimePicker() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, TimePicker);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TimePicker)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        active: _this.props.active
	      }, _this.handleDismiss = function () {
	        _this.setState({ active: false });
	      }, _this.handleInputFocus = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.setState({ active: true });
	      }, _this.handleInputBlur = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.setState({ active: false });
	      }, _this.handleInputMouseDown = function (event) {
	        _events2.default.pauseEvent(event);
	        _this.setState({ active: true });
	      }, _this.handleInputKeyPress = function (event) {
	        if (event.charCode === 13) {
	          _events2.default.pauseEvent(event);
	          _this.setState({ active: true });
	        }
	        if (_this.props.onKeyPress) _this.props.onKeyPress(event);
	      }, _this.handleSelect = function (value, event) {
	        if (_this.props.onChange) _this.props.onChange(value, event);
	        _this.setState({ active: false });
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(TimePicker, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.state.active !== nextProps.active) {
	          this.setState({ active: nextProps.active });
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var active = _props.active;
	        var format = _props.format;
	        var inputClassName = _props.inputClassName;
	        var onEscKeyDown = _props.onEscKeyDown;
	        var onOverlayClick = _props.onOverlayClick;
	        var readonly = _props.readonly;
	        var value = _props.value;
	
	        var others = _objectWithoutProperties(_props, ['active', 'format', 'inputClassName', 'onEscKeyDown', 'onOverlayClick', 'readonly', 'value']);
	
	        var formattedTime = value ? _time2.default.formatTime(value, format) : '';
	        return _react2.default.createElement(
	          'div',
	          { 'data-react-toolbox': 'time-picker' },
	          _react2.default.createElement(Input, _extends({}, others, {
	            className: (0, _classnames3.default)(this.props.theme.input, _defineProperty({}, inputClassName, inputClassName)),
	            disabled: readonly,
	            error: this.props.error,
	            label: this.props.label,
	            name: this.props.name,
	            onKeyPress: this.handleInputKeyPress,
	            onMouseDown: this.handleInputMouseDown,
	            readOnly: true,
	            type: 'text',
	            value: formattedTime
	          })),
	          _react2.default.createElement(TimePickerDialog, {
	            active: this.state.active,
	            className: this.props.className,
	            format: format,
	            name: this.props.name,
	            onDismiss: this.handleDismiss,
	            onEscKeyDown: onEscKeyDown,
	            onOverlayClick: onOverlayClick,
	            onSelect: this.handleSelect,
	            theme: this.props.theme,
	            value: this.props.value
	          })
	        );
	      }
	    }]);
	
	    return TimePicker;
	  }(_react.Component);
	
	  TimePicker.propTypes = {
	    active: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    error: _react.PropTypes.string,
	    format: _react.PropTypes.oneOf(['24hr', 'ampm']),
	    inputClassName: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    name: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    onEscKeyDown: _react.PropTypes.func,
	    onKeyPress: _react.PropTypes.func,
	    onOverlayClick: _react.PropTypes.func,
	    readonly: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      input: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.object
	  };
	  TimePicker.defaultProps = {
	    active: false,
	    className: '',
	    format: '24hr'
	  };
	
	
	  return TimePicker;
	};
	
	var TimePickerDialog = (0, _TimePickerDialog2.default)(_Dialog2.default);
	var TimePicker = factory(TimePickerDialog, _Input2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.TIME_PICKER)(TimePicker);
	exports.timePickerFactory = factory;
	exports.TimePicker = TimePicker;

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _Clock = __webpack_require__(421);
	
	var _Clock2 = _interopRequireDefault(_Clock);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Dialog) {
	  var TimePickerDialog = function (_Component) {
	    _inherits(TimePickerDialog, _Component);
	
	    function TimePickerDialog() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, TimePickerDialog);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TimePickerDialog)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	        display: 'hours',
	        displayTime: _this.props.value
	      }, _this.handleClockChange = function (value) {
	        _this.setState({ displayTime: value });
	      }, _this.handleSelect = function (event) {
	        _this.props.onSelect(_this.state.displayTime, event);
	      }, _this.toggleTimeMode = function () {
	        _this.setState({ displayTime: _time2.default.toggleTimeMode(_this.state.displayTime) });
	      }, _this.handleHandMoved = function () {
	        if (_this.state.display === 'hours') _this.setState({ display: 'minutes' });
	      }, _this.switchDisplay = function (event) {
	        _this.setState({ display: event.target.id });
	      }, _this.actions = [{ label: 'Cancel', className: _this.props.theme.button, onClick: _this.props.onDismiss }, { label: 'Ok', className: _this.props.theme.button, name: _this.props.name, onClick: _this.handleSelect }], _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(TimePickerDialog, [{
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate(prevProps) {
	        if (!prevProps.active && this.props.active) {
	          setTimeout(this.refs.clock.handleCalculateShape, 1000);
	        }
	      }
	    }, {
	      key: 'formatHours',
	      value: function formatHours() {
	        if (this.props.format === 'ampm') {
	          return this.state.displayTime.getHours() % 12 || 12;
	        } else {
	          return this.state.displayTime.getHours();
	        }
	      }
	    }, {
	      key: 'renderAMPMLabels',
	      value: function renderAMPMLabels() {
	        var theme = this.props.theme;
	
	        if (this.props.format === 'ampm') {
	          return _react2.default.createElement(
	            'div',
	            { className: theme.ampm },
	            _react2.default.createElement(
	              'span',
	              { className: theme.am, onClick: this.toggleTimeMode },
	              'AM'
	            ),
	            _react2.default.createElement(
	              'span',
	              { className: theme.pm, onClick: this.toggleTimeMode },
	              'PM'
	            )
	          );
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var theme = this.props.theme;
	
	        var display = this.state.display + 'Display';
	        var format = _time2.default.getTimeMode(this.state.displayTime) + 'Format';
	        var className = (0, _classnames2.default)([theme.dialog, theme[display], theme[format]], this.props.className);
	        return _react2.default.createElement(
	          Dialog,
	          {
	            actions: this.actions,
	            active: this.props.active,
	            className: className,
	            onEscKeyDown: this.props.onEscKeyDown,
	            onOverlayClick: this.props.onOverlayClick
	          },
	          _react2.default.createElement(
	            'header',
	            { className: theme.header },
	            _react2.default.createElement(
	              'span',
	              { id: 'hours', className: theme.hours, onClick: this.switchDisplay },
	              ('0' + this.formatHours()).slice(-2)
	            ),
	            _react2.default.createElement(
	              'span',
	              { className: theme.separator },
	              ':'
	            ),
	            _react2.default.createElement(
	              'span',
	              { id: 'minutes', className: theme.minutes, onClick: this.switchDisplay },
	              ('0' + this.state.displayTime.getMinutes()).slice(-2)
	            ),
	            this.renderAMPMLabels()
	          ),
	          _react2.default.createElement(_Clock2.default, {
	            ref: 'clock',
	            display: this.state.display,
	            format: this.props.format,
	            onChange: this.handleClockChange,
	            onHandMoved: this.handleHandMoved,
	            theme: this.props.theme,
	            time: this.state.displayTime
	          })
	        );
	      }
	    }]);
	
	    return TimePickerDialog;
	  }(_react.Component);
	
	  TimePickerDialog.propTypes = {
	    active: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    format: _react.PropTypes.oneOf(['24hr', 'ampm']),
	    name: _react.PropTypes.string,
	    onDismiss: _react.PropTypes.func,
	    onEscKeyDown: _react.PropTypes.func,
	    onOverlayClick: _react.PropTypes.func,
	    onSelect: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      am: _react.PropTypes.string,
	      amFormat: _react.PropTypes.string,
	      ampm: _react.PropTypes.string,
	      button: _react.PropTypes.string,
	      dialog: _react.PropTypes.string,
	      header: _react.PropTypes.string,
	      hours: _react.PropTypes.string,
	      hoursDisplay: _react.PropTypes.string,
	      minutes: _react.PropTypes.string,
	      minutesDisplay: _react.PropTypes.string,
	      pm: _react.PropTypes.string,
	      pmFormat: _react.PropTypes.string,
	      separator: _react.PropTypes.string
	    }),
	    value: _react.PropTypes.object
	  };
	  TimePickerDialog.defaultProps = {
	    active: false,
	    format: '24hr',
	    value: new Date()
	  };
	
	
	  return TimePickerDialog;
	};
	
	exports.default = factory;

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(378);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	var _animations = __webpack_require__(385);
	
	var _time = __webpack_require__(238);
	
	var _time2 = _interopRequireDefault(_time);
	
	var _ClockHours = __webpack_require__(422);
	
	var _ClockHours2 = _interopRequireDefault(_ClockHours);
	
	var _ClockMinutes = __webpack_require__(425);
	
	var _ClockMinutes2 = _interopRequireDefault(_ClockMinutes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Clock = function (_Component) {
	  _inherits(Clock, _Component);
	
	  function Clock() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Clock);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Clock)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	      center: { x: null, y: null },
	      radius: 0
	    }, _this.handleHourChange = function (hours) {
	      if (_this.props.time.getHours() !== hours) {
	        _this.props.onChange(_time2.default.setHours(_this.props.time, _this.adaptHourToFormat(hours)));
	      }
	    }, _this.handleMinuteChange = function (minutes) {
	      if (_this.props.time.getMinutes() !== minutes) {
	        _this.props.onChange(_time2.default.setMinutes(_this.props.time, minutes));
	      }
	    }, _this.handleCalculateShape = function () {
	      var _this$refs$placeholde = _this.refs.placeholder.getBoundingClientRect();
	
	      var top = _this$refs$placeholde.top;
	      var left = _this$refs$placeholde.left;
	      var width = _this$refs$placeholde.width;
	
	      _this.setState({
	        center: { x: left + width / 2 - window.pageXOffset, y: top + width / 2 - window.pageXOffset },
	        radius: width / 2
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Clock, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      window.addEventListener('resize', this.handleCalculateShape);
	      setTimeout(function () {
	        _this2.handleCalculateShape();
	      });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      window.removeEventListener('resize', this.handleCalculateShape);
	    }
	  }, {
	    key: 'adaptHourToFormat',
	    value: function adaptHourToFormat(hour) {
	      if (this.props.format === 'ampm') {
	        if (_time2.default.getTimeMode(this.props.time) === 'pm') {
	          return hour < 12 ? hour + 12 : hour;
	        } else {
	          return hour === 12 ? 0 : hour;
	        }
	      } else {
	        return hour;
	      }
	    }
	  }, {
	    key: 'renderHours',
	    value: function renderHours() {
	      return _react2.default.createElement(_ClockHours2.default, {
	        center: this.state.center,
	        format: this.props.format,
	        onChange: this.handleHourChange,
	        radius: this.state.radius,
	        selected: this.props.time.getHours(),
	        spacing: this.state.radius * 0.18,
	        onHandMoved: this.props.onHandMoved,
	        theme: this.props.theme
	      });
	    }
	  }, {
	    key: 'renderMinutes',
	    value: function renderMinutes() {
	      return _react2.default.createElement(_ClockMinutes2.default, {
	        center: this.state.center,
	        onChange: this.handleMinuteChange,
	        radius: this.state.radius,
	        selected: this.props.time.getMinutes(),
	        spacing: this.state.radius * 0.18,
	        onHandMoved: this.props.onHandMoved,
	        theme: this.props.theme
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var theme = this.props.theme;
	
	      var animation = this.props.display === 'hours' ? _animations.ZoomOut : _animations.ZoomIn;
	      return _react2.default.createElement(
	        'div',
	        { 'data-react-toolbox': 'clock', className: theme.clock },
	        _react2.default.createElement(
	          'div',
	          { ref: 'placeholder', className: theme.placeholder, style: { height: this.state.radius * 2 } },
	          _react2.default.createElement(
	            _reactAddonsCssTransitionGroup2.default,
	            { transitionName: animation, transitionEnterTimeout: 500, transitionLeaveTimeout: 500 },
	            _react2.default.createElement(
	              'div',
	              { key: this.props.display, className: theme.clockWrapper, style: { height: this.state.radius * 2 } },
	              this.props.display === 'hours' ? this.renderHours() : null,
	              this.props.display === 'minutes' ? this.renderMinutes() : null
	            )
	          )
	        )
	      );
	    }
	  }]);
	
	  return Clock;
	}(_react.Component);
	
	Clock.propTypes = {
	  className: _react.PropTypes.string,
	  display: _react.PropTypes.oneOf(['hours', 'minutes']),
	  format: _react.PropTypes.oneOf(['24hr', 'ampm']),
	  onChange: _react.PropTypes.func,
	  onHandMoved: _react.PropTypes.func,
	  theme: _react.PropTypes.shape({
	    clock: _react.PropTypes.string,
	    clockWrapper: _react.PropTypes.string,
	    placeholder: _react.PropTypes.string
	  }),
	  time: _react.PropTypes.object
	};
	Clock.defaultProps = {
	  className: '',
	  display: 'hours',
	  format: '24hr',
	  time: new Date()
	};
	exports.default = Clock;

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _ClockHand = __webpack_require__(423);
	
	var _ClockHand2 = _interopRequireDefault(_ClockHand);
	
	var _ClockFace = __webpack_require__(424);
	
	var _ClockFace2 = _interopRequireDefault(_ClockFace);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var outerNumbers = [0].concat(_toConsumableArray(_utils2.default.range(13, 24)));
	var innerNumbers = [12].concat(_toConsumableArray(_utils2.default.range(1, 12)));
	var innerSpacing = 1.7;
	var step = 360 / 12;
	
	var Hours = function (_Component) {
	  _inherits(Hours, _Component);
	
	  function Hours() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Hours);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Hours)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	      inner: _this.props.format === '24hr' && _this.props.selected > 0 && _this.props.selected <= 12
	    }, _this.handleHandMove = function (degrees, radius) {
	      var currentInner = radius < _this.props.radius - _this.props.spacing * innerSpacing;
	      if (_this.props.format === '24hr' && _this.state.inner !== currentInner) {
	        _this.setState({ inner: currentInner }, function () {
	          _this.props.onChange(_this.valueFromDegrees(degrees));
	        });
	      } else {
	        _this.props.onChange(_this.valueFromDegrees(degrees));
	      }
	    }, _this.handleMouseDown = function (event) {
	      _this.refs.hand.mouseStart(event);
	    }, _this.handleTouchStart = function (event) {
	      _this.refs.hand.touchStart(event);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Hours, [{
	    key: 'valueFromDegrees',
	    value: function valueFromDegrees(degrees) {
	      if (this.props.format === 'ampm' || this.props.format === '24hr' && this.state.inner) {
	        return innerNumbers[degrees / step];
	      } else {
	        return outerNumbers[degrees / step];
	      }
	    }
	  }, {
	    key: 'renderInnerFace',
	    value: function renderInnerFace(innerRadius) {
	      if (this.props.format === '24hr') {
	        return _react2.default.createElement(_ClockFace2.default, {
	          onTouchStart: this.handleTouchStart,
	          onMouseDown: this.handleMouseDown,
	          numbers: innerNumbers,
	          spacing: this.props.spacing,
	          radius: innerRadius,
	          theme: this.props.theme,
	          active: this.props.selected
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var format = _props.format;
	      var selected = _props.selected;
	      var radius = _props.radius;
	      var spacing = _props.spacing;
	      var center = _props.center;
	      var onHandMoved = _props.onHandMoved;
	
	      var is24hr = format === '24hr';
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_ClockFace2.default, {
	          onTouchStart: this.handleTouchStart,
	          onMouseDown: this.handleMouseDown,
	          numbers: is24hr ? outerNumbers : innerNumbers,
	          spacing: spacing,
	          radius: radius,
	          twoDigits: is24hr,
	          active: is24hr ? selected : selected % 12 || 12,
	          theme: this.props.theme
	        }),
	        this.renderInnerFace(radius - spacing * innerSpacing),
	        _react2.default.createElement(_ClockHand2.default, { ref: 'hand',
	          angle: selected * step,
	          length: (this.state.inner ? radius - spacing * innerSpacing : radius) - spacing,
	          onMove: this.handleHandMove,
	          theme: this.props.theme,
	          onMoved: onHandMoved,
	          origin: center,
	          step: step
	        })
	      );
	    }
	  }]);
	
	  return Hours;
	}(_react.Component);
	
	Hours.propTypes = {
	  center: _react.PropTypes.object,
	  format: _react.PropTypes.oneOf(['24hr', 'ampm']),
	  onChange: _react.PropTypes.func,
	  onHandMoved: _react.PropTypes.func,
	  radius: _react.PropTypes.number,
	  selected: _react.PropTypes.number,
	  spacing: _react.PropTypes.number,
	  theme: _react.PropTypes.object
	};
	exports.default = Hours;

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _prefixer = __webpack_require__(186);
	
	var _prefixer2 = _interopRequireDefault(_prefixer);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Hand = function (_Component) {
	  _inherits(Hand, _Component);
	
	  function Hand() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Hand);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Hand)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	      knobWidth: 0
	    }, _this.handleMouseMove = function (event) {
	      _this.move(_events2.default.getMousePosition(event));
	    }, _this.handleTouchMove = function (event) {
	      _this.move(_events2.default.getTouchPosition(event));
	    }, _this.handleMouseUp = function () {
	      _this.end(_this.getMouseEventMap());
	    }, _this.handleTouchEnd = function () {
	      _this.end(_this.getTouchEventMap());
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Hand, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      setTimeout(function () {
	        _this2.setState({ knobWidth: _this2.refs.knob.offsetWidth });
	      });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      _events2.default.removeEventsFromDocument(this.getMouseEventMap());
	      _events2.default.removeEventsFromDocument(this.getTouchEventMap());
	    }
	  }, {
	    key: 'getMouseEventMap',
	    value: function getMouseEventMap() {
	      return {
	        mousemove: this.handleMouseMove,
	        mouseup: this.handleMouseUp
	      };
	    }
	  }, {
	    key: 'getTouchEventMap',
	    value: function getTouchEventMap() {
	      return {
	        touchmove: this.handleTouchMove,
	        touchend: this.handleTouchEnd
	      };
	    }
	  }, {
	    key: 'mouseStart',
	    value: function mouseStart(event) {
	      _events2.default.addEventsToDocument(this.getMouseEventMap());
	      this.move(_events2.default.getMousePosition(event));
	    }
	  }, {
	    key: 'touchStart',
	    value: function touchStart(event) {
	      _events2.default.addEventsToDocument(this.getTouchEventMap());
	      this.move(_events2.default.getTouchPosition(event));
	      _events2.default.pauseEvent(event);
	    }
	  }, {
	    key: 'getPositionRadius',
	    value: function getPositionRadius(position) {
	      var x = this.props.origin.x - position.x;
	      var y = this.props.origin.y - position.y;
	      return Math.sqrt(x * x + y * y);
	    }
	  }, {
	    key: 'trimAngleToValue',
	    value: function trimAngleToValue(angle) {
	      return this.props.step * Math.round(angle / this.props.step);
	    }
	  }, {
	    key: 'positionToAngle',
	    value: function positionToAngle(position) {
	      return _utils2.default.angle360FromPositions(this.props.origin.x, this.props.origin.y, position.x, position.y);
	    }
	  }, {
	    key: 'end',
	    value: function end(evts) {
	      if (this.props.onMoved) this.props.onMoved();
	      _events2.default.removeEventsFromDocument(evts);
	    }
	  }, {
	    key: 'move',
	    value: function move(position) {
	      var degrees = this.trimAngleToValue(this.positionToAngle(position));
	      var radius = this.getPositionRadius(position);
	      if (this.props.onMove) this.props.onMove(degrees === 360 ? 0 : degrees, radius);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var theme = this.props.theme;
	
	      var className = theme.hand + ' ' + this.props.className;
	      var handStyle = (0, _prefixer2.default)({
	        height: this.props.length - this.state.knobWidth / 2,
	        transform: 'rotate(' + this.props.angle + 'deg)'
	      });
	
	      return _react2.default.createElement(
	        'div',
	        { className: className, style: handStyle },
	        _react2.default.createElement('div', { ref: 'knob', className: theme.knob })
	      );
	    }
	  }]);
	
	  return Hand;
	}(_react.Component);
	
	Hand.propTypes = {
	  angle: _react.PropTypes.number,
	  className: _react.PropTypes.string,
	  length: _react.PropTypes.number,
	  onMove: _react.PropTypes.func,
	  onMoved: _react.PropTypes.func,
	  origin: _react.PropTypes.object,
	  step: _react.PropTypes.number,
	  theme: _react.PropTypes.shape({
	    hand: _react.PropTypes.string,
	    knob: _react.PropTypes.string
	  })
	};
	Hand.defaultProps = {
	  className: '',
	  angle: 0,
	  length: 0,
	  origin: {}
	};
	exports.default = Hand;

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Face = function (_Component) {
	  _inherits(Face, _Component);
	
	  function Face() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Face);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Face)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.renderNumber = function (number, idx) {
	      var _this$props = _this.props;
	      var active = _this$props.active;
	      var radius = _this$props.radius;
	      var spacing = _this$props.spacing;
	      var theme = _this$props.theme;
	      var twoDigits = _this$props.twoDigits;
	
	      return _react2.default.createElement(
	        'span',
	        {
	          className: (0, _classnames3.default)(theme.number, _defineProperty({}, theme.active, number === active)),
	          style: _this.numberStyle(radius - spacing, idx + 1),
	          key: number
	        },
	        twoDigits ? ('0' + number).slice(-2) : number
	      );
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Face, [{
	    key: 'numberStyle',
	    value: function numberStyle(rad, num) {
	      return {
	        position: 'absolute',
	        left: rad + rad * Math.sin(360 * (Math.PI / 180) / 12 * (num - 1)) + this.props.spacing,
	        top: rad - rad * Math.cos(360 * (Math.PI / 180) / 12 * (num - 1)) + this.props.spacing
	      };
	    }
	  }, {
	    key: 'faceStyle',
	    value: function faceStyle() {
	      return {
	        height: this.props.radius * 2,
	        width: this.props.radius * 2
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var numbers = _props.numbers;
	      var onTouchStart = _props.onTouchStart;
	      var onMouseDown = _props.onMouseDown;
	      var theme = _props.theme;
	
	      return _react2.default.createElement(
	        'div',
	        {
	          ref: 'root',
	          className: theme.face,
	          onTouchStart: onTouchStart,
	          onMouseDown: onMouseDown,
	          style: this.faceStyle()
	        },
	        numbers.map(this.renderNumber)
	      );
	    }
	  }]);
	
	  return Face;
	}(_react.Component);
	
	Face.propTypes = {
	  active: _react.PropTypes.number,
	  numbers: _react.PropTypes.array,
	  radius: _react.PropTypes.number,
	  spacing: _react.PropTypes.number,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    face: _react.PropTypes.string,
	    number: _react.PropTypes.string
	  }),
	  twoDigits: _react.PropTypes.bool
	};
	Face.defaultProps = {
	  active: null,
	  numbers: [],
	  radius: 0,
	  twoDigits: false
	};
	exports.default = Face;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _ClockHand = __webpack_require__(423);
	
	var _ClockHand2 = _interopRequireDefault(_ClockHand);
	
	var _ClockFace = __webpack_require__(424);
	
	var _ClockFace2 = _interopRequireDefault(_ClockFace);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var minutes = _utils2.default.range(0, 60, 5);
	var step = 360 / 60;
	
	var Minutes = function (_Component) {
	  _inherits(Minutes, _Component);
	
	  function Minutes() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Minutes);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Minutes)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleHandMove = function (degrees) {
	      _this.props.onChange(degrees / step);
	    }, _this.handleMouseDown = function (event) {
	      _this.refs.hand.mouseStart(event);
	    }, _this.handleTouchStart = function (event) {
	      _this.refs.hand.touchStart(event);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Minutes, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_ClockFace2.default, {
	          onTouchStart: this.handleTouchStart,
	          onMouseDown: this.handleMouseDown,
	          numbers: minutes,
	          spacing: this.props.spacing,
	          radius: this.props.radius,
	          active: this.props.selected,
	          theme: this.props.theme,
	          twoDigits: true
	        }),
	        _react2.default.createElement(_ClockHand2.default, { ref: 'hand',
	          className: minutes.indexOf(this.props.selected) === -1 ? this.props.theme.small : '',
	          angle: this.props.selected * step,
	          length: this.props.radius - this.props.spacing,
	          onMove: this.handleHandMove,
	          origin: this.props.center,
	          theme: this.props.theme,
	          step: step
	        })
	      );
	    }
	  }]);
	
	  return Minutes;
	}(_react.Component);
	
	Minutes.propTypes = {
	  center: _react.PropTypes.object,
	  onChange: _react.PropTypes.func,
	  radius: _react.PropTypes.number,
	  selected: _react.PropTypes.number,
	  spacing: _react.PropTypes.number,
	  theme: _react.PropTypes.shape({
	    small: _react.PropTypes.string
	  })
	};
	Minutes.defaultProps = {
	  selected: 0,
	  onChange: null
	};
	exports.default = Minutes;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Slider = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _progress_bar = __webpack_require__(427);
	
	var _input = __webpack_require__(366);
	
	var _Slider = __webpack_require__(415);
	
	var _theme = __webpack_require__(430);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedSlider = (0, _reactCssThemr.themr)(_identifiers.SLIDER, _theme2.default)((0, _Slider.sliderFactory)(_progress_bar.ProgressBar, _input.Input));
	exports.default = ThemedSlider;
	exports.Slider = ThemedSlider;

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ProgressBar = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ProgressBar = __webpack_require__(416);
	
	var _theme = __webpack_require__(428);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedProgressBar = (0, _reactCssThemr.themr)(_identifiers.PROGRESS_BAR, _theme2.default)(_ProgressBar.ProgressBar);
	
	exports.default = ThemedProgressBar;
	exports.ProgressBar = ThemedProgressBar;

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(429);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".linear {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 0.4rem;\n  overflow: hidden;\n  background: #eeeeee; }\n  .linear.indeterminate .value {\n    transform-origin: center center;\n    animation: linear-indeterminate-bar 1s linear infinite; }\n\n.value, .buffer {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.35s;\n  transform: scaleX(0);\n  transform-origin: left center; }\n\n.value {\n  background-color: #3f51b5; }\n\n.buffer {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7)), linear-gradient(to right, #3f51b5, #3f51b5); }\n\n.circular {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  transform: rotate(-90deg); }\n  .circular.indeterminate .circle {\n    animation: circular-indeterminate-bar-rotate 2s linear infinite; }\n  .circular.indeterminate .path {\n    animation: circular-indeterminate-bar-dash 1.5s ease-in-out infinite;\n    stroke-dasharray: 1.25, 250;\n    stroke-dashoffset: 0; }\n  .circular.indeterminate.multicolor .path {\n    animation: circular-indeterminate-bar-dash 1.5s ease-in-out infinite, colors 6s ease-in-out infinite; }\n\n.circle {\n  width: 100%;\n  height: 100%; }\n\n.path {\n  transition: stroke-dasharray 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  fill: none;\n  stroke-dasharray: 0, 250;\n  stroke-dashoffset: 0;\n  stroke-linecap: round;\n  stroke-miterlimit: 20;\n  stroke-width: 4;\n  stroke: #3f51b5; }\n\n@keyframes linear-indeterminate-bar {\n  0% {\n    transform: translate(-50%) scaleX(0); }\n  50% {\n    transform: translate(0%) scaleX(0.3); }\n  100% {\n    transform: translate(50%) scaleX(0); } }\n\n@keyframes circular-indeterminate-bar-rotate {\n  100% {\n    transform: rotate(360deg); } }\n\n@keyframes circular-indeterminate-bar-dash {\n  0% {\n    stroke-dasharray: 1.25, 250;\n    stroke-dashoffset: 0; }\n  50% {\n    stroke-dasharray: 111.25, 250;\n    stroke-dashoffset: -43.75; }\n  100% {\n    stroke-dasharray: 111.25, 250;\n    stroke-dashoffset: -155; } }\n\n@keyframes colors {\n  0% {\n    stroke: #4285f4; }\n  25% {\n    stroke: #de3e35; }\n  50% {\n    stroke: #f7c223; }\n  75% {\n    stroke: #1b9a59; }\n  100% {\n    stroke: #4285f4; } }\n", ""]);
	
	// exports


/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(431);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".container {\n  position: relative;\n  width: calc(100% - 3.2rem);\n  height: 3.2rem;\n  margin-right: 3.2rem;\n  user-select: none; }\n  .container:not(:last-child) {\n    margin-right: 4.2rem; }\n  .container:not(:first-child) {\n    margin-left: 1rem; }\n\n.knob {\n  position: relative;\n  top: 0;\n  left: 0;\n  z-index: 200;\n  display: flex;\n  width: 3.2rem;\n  height: 3.2rem;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent; }\n\n.innerknob {\n  z-index: 100;\n  width: 1.2rem;\n  height: 1.2rem;\n  background-color: #3f51b5;\n  border-radius: 50%;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: .1s;\n  transition-property: height, width, background-color, border; }\n\n.snaps {\n  position: absolute;\n  top: 1.5rem;\n  left: 0;\n  display: flex;\n  width: calc(100% + 0.2rem);\n  height: 0.2rem;\n  flex-direction: row;\n  pointer-events: none; }\n  .snaps:after {\n    display: block;\n    width: 0.2rem;\n    height: 0.2rem;\n    content: \"\";\n    background-color: black;\n    border-radius: 50%; }\n\n.snap {\n  flex: 1; }\n  .snap:after {\n    display: block;\n    width: 0.2rem;\n    height: 0.2rem;\n    content: \"\";\n    background-color: black;\n    border-radius: 50%; }\n\n.input {\n  width: 5rem;\n  padding: 0;\n  margin-bottom: 0; }\n  .input > input {\n    text-align: center; }\n\n.progress {\n  position: absolute;\n  top: 0;\n  left: 1.6rem;\n  width: 100%;\n  height: 100%; }\n  .progress .innerprogress {\n    position: absolute;\n    top: 1.5rem;\n    height: 0.2rem; }\n    .progress .innerprogress [data-ref=\"value\"] {\n      transition-duration: 0s; }\n\n.slider:focus .knob:before {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  content: \"\";\n  background-color: #3f51b5;\n  border-radius: 50%;\n  opacity: .26; }\n\n.slider.editable {\n  display: flex;\n  flex-direction: row;\n  align-items: center; }\n\n.slider.pinned .innerknob:before {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 2.6rem;\n  height: 2.6rem;\n  margin-left: 0.3rem;\n  content: \"\";\n  background-color: #3f51b5;\n  border-radius: 50% 50% 50% 0;\n  transition: transform .2s ease, background-color .18s ease;\n  transform: rotate(-45deg) scale(0) translate(0); }\n\n.slider.pinned .innerknob:after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 3.2rem;\n  height: 2.6rem;\n  font-size: 10px;\n  color: white;\n  text-align: center;\n  content: attr(data-value);\n  transition: transform .2s ease, background-color .18s ease;\n  transform: scale(0) translate(0); }\n\n.slider.pressed.pinned .innerknob:before {\n  transition-delay: 100ms;\n  transform: rotate(-45deg) scale(1) translate(1.7rem, -1.7rem); }\n\n.slider.pressed.pinned .innerknob:after {\n  transition-delay: 100ms;\n  transform: scale(1) translate(0, -1.7rem); }\n\n.slider.pressed:not(.pinned).ring .progress {\n  left: 3rem;\n  width: calc(100% - 1.4rem); }\n\n.slider.pressed:not(.pinned) .innerknob {\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0); }\n\n.slider.ring .innerknob {\n  background-color: transparent;\n  border: 0.2rem solid #eeeeee; }\n  .slider.ring .innerknob:before {\n    background-color: #3f51b5; }\n\n.slider.ring .progress {\n  left: 2rem;\n  width: calc(100% - 0.4rem);\n  transition: left .18s ease, width .18s ease; }\n\n.slider.ring.pinned .innerknob {\n  background-color: white; }\n\n.slider.ring.pinned .progress {\n  left: 1.6rem;\n  width: calc(100%); }\n", ""]);
	
	// exports


/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Switch = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _Switch = __webpack_require__(417);
	
	var _identifiers = __webpack_require__(3);
	
	var _Thumb = __webpack_require__(418);
	
	var _Thumb2 = _interopRequireDefault(_Thumb);
	
	var _ripple = __webpack_require__(189);
	
	var _ripple2 = _interopRequireDefault(_ripple);
	
	var _theme = __webpack_require__(433);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var applyTheme = function applyTheme(Component) {
	  return (0, _reactCssThemr.themr)(_identifiers.SWITCH, _theme2.default)(Component);
	};
	var ripple = (0, _ripple2.default)({ centered: true, spread: 2.6 });
	var ThemedThumb = applyTheme((0, _Thumb2.default)(ripple));
	var ThemedSwitch = applyTheme((0, _Switch.switchFactory)(ThemedThumb));
	
	exports.default = ThemedSwitch;
	exports.Switch = ThemedSwitch;

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(434);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".field, .disabled {\n  position: relative;\n  display: block;\n  height: 2.4rem;\n  margin-bottom: 1.5rem;\n  white-space: nowrap;\n  vertical-align: middle; }\n\n.text {\n  display: inline-block;\n  padding-left: 1rem;\n  font-size: 1.4rem;\n  line-height: 2.4rem;\n  color: black;\n  white-space: nowrap;\n  vertical-align: top; }\n\n.on, .off {\n  position: relative;\n  display: inline-block;\n  width: 3.6rem;\n  height: 1.4rem;\n  margin-top: 0.5rem;\n  vertical-align: top;\n  cursor: pointer;\n  border-radius: 1.4rem; }\n\n.thumb {\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.28s;\n  position: absolute;\n  top: -0.3rem;\n  width: 2rem;\n  height: 2rem;\n  cursor: pointer;\n  border-radius: 50%;\n  transition-property: left; }\n  .thumb .ripple {\n    background-color: #3f51b5;\n    opacity: .3;\n    transition-duration: 650ms; }\n\n.on {\n  background: rgba(63, 81, 181, 0.5); }\n  .on .thumb {\n    box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 8px 0 rgba(0, 0, 0, 0.12);\n    left: 1.6rem;\n    background: #3f51b5; }\n\n.off {\n  background: rgba(0, 0, 0, 0.26); }\n  .off .thumb {\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    left: 0;\n    background: #fafafa; }\n  .off .ripple {\n    background: rgba(0, 0, 0, 0.4); }\n\n.input:focus:not(:active) + .switch-on > .thumb:before, .input:focus:not(:active) + .switch-off > .thumb:before {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  box-sizing: border-box;\n  display: inline-block;\n  width: 0.8rem;\n  height: 0.8rem;\n  content: \"\";\n  background-color: transparent;\n  border-radius: 50%;\n  transform: translate(-0.4rem, -0.4rem); }\n\n.input {\n  width: 0;\n  height: 0;\n  overflow: hidden;\n  opacity: 0; }\n  .input:focus:not(:active) + .switch-on > .thumb:before {\n    background-color: rgba(63, 81, 181, 0.26);\n    box-shadow: 0 0 0 2rem rgba(63, 81, 181, 0.26); }\n  .input:focus:not(:active) + .switch-off > .thumb:before {\n    background-color: rgba(0, 0, 0, 0.1);\n    box-shadow: 0 0 0 2rem rgba(0, 0, 0, 0.1); }\n\n.disabled .text {\n  color: rgba(0, 0, 0, 0.26); }\n\n.disabled .on, .disabled .off {\n  cursor: auto;\n  background: rgba(0, 0, 0, 0.12); }\n\n.disabled .thumb {\n  cursor: auto;\n  background-color: #bdbdbd;\n  border-color: transparent; }\n", ""]);
	
	// exports


/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TimePicker = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _TimePicker = __webpack_require__(419);
	
	var _TimePickerDialog = __webpack_require__(420);
	
	var _TimePickerDialog2 = _interopRequireDefault(_TimePickerDialog);
	
	var _dialog = __webpack_require__(397);
	
	var _dialog2 = _interopRequireDefault(_dialog);
	
	var _input = __webpack_require__(366);
	
	var _input2 = _interopRequireDefault(_input);
	
	var _theme = __webpack_require__(436);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TimePickerDialog = (0, _TimePickerDialog2.default)(_dialog2.default);
	var ThemedTimePicker = (0, _reactCssThemr.themr)(_identifiers.TIME_PICKER, _theme2.default)((0, _TimePicker.timePickerFactory)(TimePickerDialog, _input2.default));
	exports.default = ThemedTimePicker;
	exports.TimePicker = ThemedTimePicker;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(437);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".input:not(.disabled) > .inputElement {\n  cursor: pointer; }\n\n.header {\n  position: relative;\n  width: 100%;\n  padding: 1rem;\n  font-size: 5.2rem;\n  color: white;\n  text-align: center;\n  background: #3f51b5; }\n\n.hours, .minutes {\n  display: inline-block;\n  cursor: pointer;\n  opacity: .6; }\n\n.separator {\n  margin: 0 0.5rem;\n  opacity: .6; }\n\n.ampm {\n  position: absolute;\n  top: 50%;\n  right: 2rem;\n  width: 4rem;\n  height: 4.4rem;\n  margin-top: -2.2rem;\n  font-size: 1.6rem;\n  line-height: 2.2rem;\n  text-align: center; }\n\n.am, .pm {\n  display: block;\n  cursor: pointer;\n  opacity: .6; }\n\n.dialog {\n  width: 30rem; }\n  .dialog > [role=\"body\"] {\n    padding: 0;\n    overflow-y: visible; }\n  .dialog > [role=\"navigation\"] > .button {\n    color: #3f51b5; }\n    .dialog > [role=\"navigation\"] > .button:hover {\n      background: rgba(63, 81, 181, 0.2); }\n    .dialog > [role=\"navigation\"] > .button:focus:not(:active) {\n      background: rgba(63, 81, 181, 0.2); }\n  .dialog.hoursDisplay .hours, .dialog.minutesDisplay .minutes, .dialog.amFormat .am,\n  .dialog.pmFormat .pm {\n    opacity: 1; }\n\n.clock {\n  padding: 1.5rem 2rem; }\n\n.placeholder {\n  position: relative;\n  z-index: 100; }\n\n.clockWrapper {\n  position: absolute;\n  width: 100%;\n  background-color: #eeeeee;\n  border-radius: 50%; }\n\n.face {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  cursor: pointer;\n  border-radius: 50%;\n  transform: translateX(-50%) translateY(-50%); }\n\n.number {\n  position: relative;\n  width: 2rem;\n  height: 2rem;\n  margin-top: -1rem;\n  margin-left: -1rem;\n  text-align: center;\n  pointer-events: none;\n  user-select: none; }\n  .number.active {\n    color: white; }\n\n.hand {\n  position: absolute;\n  bottom: 50%;\n  left: 50%;\n  display: block;\n  width: 0.4rem;\n  margin-left: -0.2rem;\n  background-color: #3f51b5;\n  transform-origin: 50% 100%; }\n  .hand:before {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    width: 1rem;\n    height: 1rem;\n    margin-bottom: -0.5rem;\n    margin-left: -0.5rem;\n    content: \"\";\n    background-color: #3f51b5;\n    border-radius: 50%; }\n  .hand.small > .knob {\n    background-color: rgba(63, 81, 181, 0.2); }\n    .hand.small > .knob:after {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 1.2rem;\n      height: 1.2rem;\n      margin-top: -0.6rem;\n      margin-left: -0.6rem;\n      content: \"\";\n      background: #3f51b5;\n      border-radius: 50%; }\n    .hand.small > .knob:before {\n      position: absolute;\n      bottom: 0;\n      left: 50%;\n      width: 0.4rem;\n      height: 2.2rem;\n      margin-left: -0.2rem;\n      content: \"\";\n      background: #3f51b5; }\n\n.knob {\n  position: absolute;\n  top: -3.4rem;\n  left: 50%;\n  width: 3.4rem;\n  height: 3.4rem;\n  margin-left: -1.7rem;\n  cursor: pointer;\n  background-color: #3f51b5;\n  border-radius: 50%; }\n", ""]);
	
	// exports


/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Link = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Link = __webpack_require__(439);
	
	var _theme = __webpack_require__(440);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedLink = (0, _reactCssThemr.themr)(_identifiers.LINK, _theme2.default)(_Link.Link);
	
	exports.default = ThemedLink;
	exports.Link = ThemedLink;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Link = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Link = function Link(_ref) {
	  var active = _ref.active;
	  var children = _ref.children;
	  var className = _ref.className;
	  var count = _ref.count;
	  var icon = _ref.icon;
	  var label = _ref.label;
	  var theme = _ref.theme;
	
	  var others = _objectWithoutProperties(_ref, ['active', 'children', 'className', 'count', 'icon', 'label', 'theme']);
	
	  var _className = (0, _classnames3.default)(theme.link, _defineProperty({}, theme.active, active), className);
	
	  return _react2.default.createElement(
	    'a',
	    _extends({ 'data-react-toolbox': 'link', className: _className }, others),
	    icon ? _react2.default.createElement(_FontIcon2.default, { className: theme.icon, value: icon }) : null,
	    label ? _react2.default.createElement(
	      'abbr',
	      null,
	      label
	    ) : null,
	    count && parseInt(count) !== 0 ? _react2.default.createElement(
	      'small',
	      null,
	      count
	    ) : null,
	    children
	  );
	};
	
	Link.propTypes = {
	  active: _react.PropTypes.bool,
	  children: _react.PropTypes.node,
	  className: _react.PropTypes.string,
	  count: _react.PropTypes.number,
	  icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	  label: _react.PropTypes.string,
	  theme: _react.PropTypes.shape({
	    active: _react.PropTypes.string,
	    icon: _react.PropTypes.string,
	    link: _react.PropTypes.string
	  })
	};
	
	Link.defaultProps = {
	  active: false,
	  className: ''
	};
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.LINK)(Link);
	exports.Link = Link;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(441);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".icon {\n  margin-right: 1rem;\n  font-size: 1.8rem; }\n\n.link {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  line-height: 1.5;\n  cursor: pointer;\n  transition: opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n  .link:not(.active) {\n    opacity: .5; }\n  .link:hover, .link:active {\n    opacity: 1; }\n  .link > * {\n    vertical-align: middle; }\n  .link > abbr {\n    text-transform: capitalize; }\n  .link > small {\n    margin-left: 0.8rem;\n    font-size: 1.2rem;\n    text-align: center; }\n", ""]);
	
	// exports


/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Navigation = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Navigation = __webpack_require__(443);
	
	var _button = __webpack_require__(2);
	
	var _link = __webpack_require__(438);
	
	var _theme = __webpack_require__(444);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedNavigation = (0, _reactCssThemr.themr)(_identifiers.NAVIGATION, _theme2.default)((0, _Navigation.navigationFactory)(_button.Button, _link.Link));
	exports.default = ThemedNavigation;
	exports.Navigation = ThemedNavigation;

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Navigation = exports.navigationFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Button = __webpack_require__(42);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Link = __webpack_require__(439);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var factory = function factory(Button, Link) {
	  var Navigation = function Navigation(_ref) {
	    var actions = _ref.actions;
	    var children = _ref.children;
	    var className = _ref.className;
	    var routes = _ref.routes;
	    var theme = _ref.theme;
	    var type = _ref.type;
	
	    var _className = (0, _classnames2.default)(theme[type], className);
	    var buttons = actions.map(function (action, index) {
	      return _react2.default.createElement(Button, _extends({ className: theme.button, key: index }, action));
	    });
	
	    var links = routes.map(function (route, index) {
	      return _react2.default.createElement(Link, _extends({ className: theme.link, key: index }, route));
	    });
	
	    return _react2.default.createElement(
	      'nav',
	      { 'data-react-toolbox': 'navigation', className: _className },
	      links,
	      buttons,
	      children
	    );
	  };
	
	  Navigation.propTypes = {
	    actions: _react.PropTypes.array,
	    children: _react.PropTypes.node,
	    className: _react.PropTypes.string,
	    routes: _react.PropTypes.array,
	    theme: _react.PropTypes.shape({
	      button: _react.PropTypes.string,
	      horizontal: _react.PropTypes.string,
	      link: _react.PropTypes.string,
	      vertical: _react.PropTypes.string
	    }),
	    type: _react.PropTypes.oneOf(['vertical', 'horizontal'])
	  };
	
	  Navigation.defaultProps = {
	    actions: [],
	    className: '',
	    type: 'horizontal',
	    routes: []
	  };
	
	  return Navigation;
	};
	
	var Navigation = factory(_Button2.default, _Link2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.NAVIGATION)(Navigation);
	exports.navigationFactory = factory;
	exports.Navigation = Navigation;

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(445);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".horizontal > [data-react-toolbox=\"button\"], .horizontal > [data-react-toolbox=\"link\"] {\n  display: inline-block;\n  margin: 0 0.5rem; }\n\n.vertical > [data-react-toolbox=\"button\"], .vertical > [data-react-toolbox=\"link\"] {\n  display: block;\n  margin: 0.5rem; }\n\n.vertical, .horizontal {\n  padding: 0.5rem; }\n  .vertical > [data-react-toolbox=\"link\"], .horizontal > [data-react-toolbox=\"link\"] {\n    color: black; }\n", ""]);
	
	// exports


/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Snackbar = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Snackbar = __webpack_require__(447);
	
	var _overlay = __webpack_require__(398);
	
	var _button = __webpack_require__(2);
	
	var _theme = __webpack_require__(448);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ThemedSnackbar = (0, _reactCssThemr.themr)(_identifiers.SNACKBAR, _theme2.default)((0, _Snackbar.snackbarFactory)(_overlay.Overlay, _button.Button));
	
	exports.default = ThemedSnackbar;
	exports.Snackbar = ThemedSnackbar;

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Snackbar = exports.snackbarFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _ActivableRenderer = __webpack_require__(374);
	
	var _ActivableRenderer2 = _interopRequireDefault(_ActivableRenderer);
	
	var _FontIcon = __webpack_require__(44);
	
	var _FontIcon2 = _interopRequireDefault(_FontIcon);
	
	var _Overlay = __webpack_require__(375);
	
	var _Overlay2 = _interopRequireDefault(_Overlay);
	
	var _Button = __webpack_require__(42);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Overlay, Button) {
	  var Snackbar = function (_Component) {
	    _inherits(Snackbar, _Component);
	
	    function Snackbar() {
	      _classCallCheck(this, Snackbar);
	
	      return _possibleConstructorReturn(this, Object.getPrototypeOf(Snackbar).apply(this, arguments));
	    }
	
	    _createClass(Snackbar, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var _this2 = this;
	
	        if (nextProps.active && nextProps.timeout) {
	          if (this.curTimeout) clearTimeout(this.curTimeout);
	          this.curTimeout = setTimeout(function () {
	            nextProps.onTimeout();
	            _this2.curTimeout = null;
	          }, nextProps.timeout);
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        clearTimeout(this.curTimeout);
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props;
	        var action = _props.action;
	        var active = _props.active;
	        var icon = _props.icon;
	        var label = _props.label;
	        var onClick = _props.onClick;
	        var theme = _props.theme;
	        var type = _props.type;
	
	        var className = (0, _classnames3.default)([theme.snackbar, theme[type]], _defineProperty({}, theme.active, active), this.props.className);
	
	        return _react2.default.createElement(
	          Overlay,
	          { invisible: true },
	          _react2.default.createElement(
	            'div',
	            { 'data-react-toolbox': 'snackbar', className: className },
	            icon ? _react2.default.createElement(_FontIcon2.default, { value: icon, className: theme.icon }) : null,
	            _react2.default.createElement(
	              'span',
	              { className: theme.label },
	              label
	            ),
	            action ? _react2.default.createElement(Button, { className: theme.button, label: action, onClick: onClick }) : null
	          )
	        );
	      }
	    }]);
	
	    return Snackbar;
	  }(_react.Component);
	
	  Snackbar.propTypes = {
	    action: _react.PropTypes.string,
	    active: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    label: _react.PropTypes.string,
	    onClick: _react.PropTypes.func,
	    onTimeout: _react.PropTypes.func,
	    theme: _react.PropTypes.shape({
	      accept: _react.PropTypes.string,
	      active: _react.PropTypes.string,
	      button: _react.PropTypes.string,
	      cancel: _react.PropTypes.string,
	      icon: _react.PropTypes.string,
	      label: _react.PropTypes.string,
	      snackbar: _react.PropTypes.string,
	      warning: _react.PropTypes.string
	    }),
	    timeout: _react.PropTypes.number,
	    type: _react.PropTypes.oneOf(['accept', 'cancel', 'warning'])
	  };
	
	
	  return (0, _ActivableRenderer2.default)()(Snackbar);
	};
	
	var Snackbar = factory(_Overlay2.default, _Button2.default);
	exports.default = (0, _reactCssThemr.themr)(_identifiers.SNACKBAR)(Snackbar);
	exports.snackbarFactory = factory;
	exports.Snackbar = Snackbar;

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(449);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".snackbar {\n  position: fixed;\n  right: 2.4rem;\n  bottom: 0;\n  left: 2.4rem;\n  z-index: 200;\n  display: flex;\n  align-items: center;\n  padding: 1.4rem 2.4rem;\n  margin: 0 auto;\n  margin-top: 1.4rem;\n  color: white;\n  background-color: #212121;\n  border-radius: 0.2rem;\n  transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1) 0.35s; }\n  .snackbar.accept .button {\n    color: #4caf50; }\n  .snackbar.warning .button {\n    color: #eeff41; }\n  .snackbar.cancel .button {\n    color: #f44336; }\n  .snackbar:not(.active) {\n    transform: translateY(100%); }\n  .snackbar.active {\n    transform: translateY(0%); }\n\n.icon {\n  margin-right: 1.4rem; }\n\n.label {\n  flex-grow: 1;\n  font-size: 1.4rem; }\n\n.button {\n  min-width: inherit;\n  margin-top: -0.7rem;\n  margin-right: -1.2rem;\n  margin-bottom: -0.7rem;\n  margin-left: 4.8rem; }\n", ""]);
	
	// exports


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Table = undefined;
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _checkbox = __webpack_require__(216);
	
	var _Table = __webpack_require__(451);
	
	var _TableHead = __webpack_require__(452);
	
	var _TableHead2 = _interopRequireDefault(_TableHead);
	
	var _TableRow = __webpack_require__(453);
	
	var _TableRow2 = _interopRequireDefault(_TableRow);
	
	var _theme = __webpack_require__(454);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var applyTheme = function applyTheme(Component) {
	  return (0, _reactCssThemr.themr)(_identifiers.TABLE, _theme2.default)(Component);
	};
	var ThemedTableHead = applyTheme((0, _TableHead2.default)(_checkbox.Checkbox));
	var ThemedTableRow = applyTheme((0, _TableRow2.default)(_checkbox.Checkbox));
	var ThemedTable = applyTheme((0, _Table.tableFactory)(ThemedTableHead, ThemedTableRow));
	
	exports.default = ThemedTable;
	exports.Table = ThemedTable;

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Table = exports.tableFactory = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(43);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _Checkbox = __webpack_require__(217);
	
	var _Checkbox2 = _interopRequireDefault(_Checkbox);
	
	var _TableHead = __webpack_require__(452);
	
	var _TableHead2 = _interopRequireDefault(_TableHead);
	
	var _TableRow = __webpack_require__(453);
	
	var _TableRow2 = _interopRequireDefault(_TableRow);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(TableHead, TableRow) {
	  var Table = function (_Component) {
	    _inherits(Table, _Component);
	
	    function Table() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, Table);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Table)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleFullSelect = function () {
	        if (_this.props.onSelect) {
	          var _this$props = _this.props;
	          var source = _this$props.source;
	          var selected = _this$props.selected;
	
	          var newSelected = source.length === selected.length ? [] : source.map(function (i, idx) {
	            return idx;
	          });
	          _this.props.onSelect(newSelected);
	        }
	      }, _this.handleRowSelect = function (index) {
	        if (_this.props.onSelect) {
	          var newSelection = [].concat(_toConsumableArray(_this.props.selected));
	          if (_this.props.multiSelectable) {
	            (function () {
	              var position = _this.props.selected.indexOf(index);
	              newSelection = position !== -1 ? newSelection.filter(function (el, idx) {
	                return idx !== position;
	              }) : newSelection.concat([index]);
	            })();
	          } else {
	            newSelection = [index];
	          }
	          _this.props.onSelect(newSelection);
	        }
	      }, _this.handleRowChange = function (index, key, value) {
	        if (_this.props.onChange) {
	          _this.props.onChange(index, key, value);
	        }
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Table, [{
	      key: 'renderHead',
	      value: function renderHead() {
	        if (this.props.heading) {
	          var _props = this.props;
	          var model = _props.model;
	          var selected = _props.selected;
	          var source = _props.source;
	          var selectable = _props.selectable;
	          var multiSelectable = _props.multiSelectable;
	
	          var isSelected = selected.length === source.length;
	          return _react2.default.createElement(TableHead, {
	            model: model,
	            onSelect: this.handleFullSelect,
	            selectable: selectable,
	            multiSelectable: multiSelectable,
	            selected: isSelected,
	            theme: this.props.theme
	          });
	        }
	      }
	    }, {
	      key: 'renderBody',
	      value: function renderBody() {
	        var _this2 = this;
	
	        var _props2 = this.props;
	        var source = _props2.source;
	        var model = _props2.model;
	        var onChange = _props2.onChange;
	        var selectable = _props2.selectable;
	        var selected = _props2.selected;
	        var theme = _props2.theme;
	
	        return _react2.default.createElement(
	          'tbody',
	          null,
	          source.map(function (data, index) {
	            return _react2.default.createElement(TableRow, {
	              data: data,
	              index: index,
	              key: index,
	              model: model,
	              onChange: onChange ? _this2.handleRowChange.bind(_this2) : undefined,
	              onSelect: _this2.handleRowSelect.bind(_this2, index),
	              selectable: selectable,
	              selected: selected.indexOf(index) !== -1,
	              theme: theme
	            });
	          })
	        );
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props3 = this.props;
	        var className = _props3.className;
	        var theme = _props3.theme;
	
	        return _react2.default.createElement(
	          'table',
	          { 'data-react-toolbox': 'table', className: (0, _classnames2.default)(theme.table, className) },
	          this.renderHead(),
	          this.renderBody()
	        );
	      }
	    }]);
	
	    return Table;
	  }(_react.Component);
	
	  Table.propTypes = {
	    className: _react.PropTypes.string,
	    heading: _react.PropTypes.bool,
	    model: _react.PropTypes.object,
	    multiSelectable: _react.PropTypes.bool,
	    onChange: _react.PropTypes.func,
	    onSelect: _react.PropTypes.func,
	    selectable: _react.PropTypes.bool,
	    selected: _react.PropTypes.array,
	    source: _react.PropTypes.array,
	    theme: _react.PropTypes.shape({
	      table: _react.PropTypes.string
	    })
	  };
	  Table.defaultProps = {
	    className: '',
	    heading: true,
	    selectable: true,
	    multiSelectable: true,
	    selected: [],
	    source: []
	  };
	
	
	  return Table;
	};
	
	var TableHead = (0, _TableHead2.default)(_Checkbox2.default);
	var TableRow = (0, _TableRow2.default)(_Checkbox2.default);
	var Table = factory(TableHead, TableRow);
	
	exports.default = (0, _reactCssThemr.themr)(_identifiers.TABLE)(Table);
	exports.tableFactory = factory;
	exports.Table = Table;

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var factory = function factory(Checkbox) {
	  var TableHead = function TableHead(_ref) {
	    var model = _ref.model;
	    var onSelect = _ref.onSelect;
	    var selectable = _ref.selectable;
	    var multiSelectable = _ref.multiSelectable;
	    var selected = _ref.selected;
	    var theme = _ref.theme;
	
	    var selectCell = void 0;
	    var contentCells = Object.keys(model).map(function (key) {
	      var name = model[key].title || key;
	      return _react2.default.createElement(
	        'th',
	        { key: key },
	        name
	      );
	    });
	
	    if (selectable && multiSelectable) {
	      selectCell = _react2.default.createElement(
	        'th',
	        { key: 'select', className: theme.selectable },
	        _react2.default.createElement(Checkbox, { onChange: onSelect, checked: selected })
	      );
	    } else if (selectable) {
	      selectCell = _react2.default.createElement('th', { key: 'select', className: theme.selectable });
	    }
	    return _react2.default.createElement(
	      'thead',
	      null,
	      _react2.default.createElement(
	        'tr',
	        null,
	        [selectCell].concat(_toConsumableArray(contentCells))
	      )
	    );
	  };
	
	  TableHead.propTypes = {
	    className: _react.PropTypes.string,
	    model: _react.PropTypes.object,
	    multiSelectable: _react.PropTypes.bool,
	    onSelect: _react.PropTypes.func,
	    selectable: _react.PropTypes.bool,
	    selected: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      selectable: _react.PropTypes.string
	    })
	  };
	
	  TableHead.defaultProps = {
	    className: '',
	    model: {},
	    selected: false
	  };
	
	  return TableHead;
	};
	
	exports.default = factory;

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var factory = function factory(Checkbox) {
	  var TableRow = function (_Component) {
	    _inherits(TableRow, _Component);
	
	    function TableRow() {
	      var _Object$getPrototypeO;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, TableRow);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TableRow)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleInputChange = function (index, key, type, event) {
	        var value = type === 'checkbox' ? event.target.checked : event.target.value;
	        var onChange = _this.props.model[key].onChange || _this.props.onChange;
	        onChange(index, key, value);
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(TableRow, [{
	      key: 'renderSelectCell',
	      value: function renderSelectCell() {
	        if (this.props.selectable) {
	          return _react2.default.createElement(
	            'td',
	            { className: this.props.theme.selectable },
	            _react2.default.createElement(Checkbox, { checked: this.props.selected, onChange: this.props.onSelect })
	          );
	        }
	      }
	    }, {
	      key: 'renderCells',
	      value: function renderCells() {
	        var _this2 = this;
	
	        return Object.keys(this.props.model).map(function (key) {
	          return _react2.default.createElement(
	            'td',
	            { key: key },
	            _this2.renderCell(key)
	          );
	        });
	      }
	    }, {
	      key: 'renderCell',
	      value: function renderCell(key) {
	        var value = this.props.data[key];
	
	        // if the value is a valid React element return it directly, since it
	        // cannot be edited and should not be converted to a string...
	        if (_react2.default.isValidElement(value)) {
	          return value;
	        }
	
	        var onChange = this.props.model[key].onChange || this.props.onChange;
	        if (onChange) {
	          return this.renderInput(key, value);
	        } else if (value) {
	          return value.toString();
	        }
	      }
	    }, {
	      key: 'renderInput',
	      value: function renderInput(key, value) {
	        var index = this.props.index;
	        var inputType = _utils2.default.inputTypeForPrototype(this.props.model[key].type);
	        var inputValue = _utils2.default.prepareValueForInput(value, inputType);
	        var checked = inputType === 'checkbox' && value ? true : null;
	        return _react2.default.createElement('input', {
	          checked: checked,
	          onChange: this.handleInputChange.bind(null, index, key, inputType),
	          type: inputType,
	          value: inputValue
	        });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classnames;
	
	        var className = (0, _classnames3.default)(this.props.theme.row, (_classnames = {}, _defineProperty(_classnames, this.props.theme.editable, this.props.onChange), _defineProperty(_classnames, this.props.theme.selected, this.props.selected), _classnames));
	
	        return _react2.default.createElement(
	          'tr',
	          { 'data-react-toolbox-table': 'row', className: className },
	          this.renderSelectCell(),
	          this.renderCells()
	        );
	      }
	    }]);
	
	    return TableRow;
	  }(_react.Component);
	
	  TableRow.propTypes = {
	    data: _react.PropTypes.object,
	    index: _react.PropTypes.number,
	    model: _react.PropTypes.object,
	    onChange: _react.PropTypes.func,
	    onSelect: _react.PropTypes.func,
	    selectable: _react.PropTypes.bool,
	    selected: _react.PropTypes.bool,
	    theme: _react.PropTypes.shape({
	      editable: _react.PropTypes.string,
	      row: _react.PropTypes.string,
	      selectable: _react.PropTypes.string,
	      selected: _react.PropTypes.string
	    })
	  };
	
	
	  return TableRow;
	};
	
	exports.default = factory;

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(455);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".table {\n  width: 100%;\n  font-size: 1.2rem;\n  color: #757575;\n  text-align: left;\n  border-spacing: 0; }\n  .table tr {\n    height: 48px;\n    line-height: 48px; }\n  .table th {\n    font-weight: 700; }\n    .table th:first-letter {\n      text-transform: capitalize; }\n  .table th, .table td {\n    position: relative;\n    padding: 0 1.8rem;\n    border-bottom: solid 1px rgba(0, 0, 0, 0.12); }\n    .table th.selectable, .table td.selectable {\n      width: 1.8rem;\n      padding-right: 0; }\n      .table th.selectable > *, .table td.selectable > * {\n        margin: 0; }\n\n.row {\n  transition: background-color 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n  .row:last-child td {\n    border-color: transparent; }\n  .row > td > input {\n    display: block;\n    width: 100%;\n    background-color: transparent;\n    border: 0; }\n\n.selected, .row:hover {\n  background-color: #eee; }\n\n.editable > * {\n  cursor: pointer; }\n", ""]);
	
	// exports


/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.tooltipFactory = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _Tooltip = __webpack_require__(457);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _theme = __webpack_require__(458);
	
	var _theme2 = _interopRequireDefault(_theme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var themedTooltipFactory = function themedTooltipFactory(options) {
	  return (0, _Tooltip2.default)(_extends({}, options, { theme: _theme2.default }));
	};
	exports.default = (0, _Tooltip2.default)({ theme: _theme2.default });
	exports.tooltipFactory = themedTooltipFactory;

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(6);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Portal = __webpack_require__(376);
	
	var _Portal2 = _interopRequireDefault(_Portal);
	
	var _classnames2 = __webpack_require__(43);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _reactCssThemr = __webpack_require__(4);
	
	var _identifiers = __webpack_require__(3);
	
	var _events = __webpack_require__(185);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _utils = __webpack_require__(187);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var POSITION = {
	  BOTTOM: 'bottom',
	  HORIZONTAL: 'horizontal',
	  LEFT: 'left',
	  RIGHT: 'right',
	  TOP: 'top',
	  VERTICAL: 'vertical'
	};
	
	var defaults = {
	  className: '',
	  delay: 0,
	  hideOnClick: true,
	  position: POSITION.VERTICAL,
	  theme: {}
	};
	
	var tooltipFactory = function tooltipFactory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  var _defaults$options = _extends({}, defaults, options);
	
	  var defaultClassName = _defaults$options.className;
	  var defaultDelay = _defaults$options.delay;
	  var defaultHideOnClick = _defaults$options.hideOnClick;
	  var defaultPosition = _defaults$options.position;
	  var defaultTheme = _defaults$options.theme;
	
	
	  return function (ComposedComponent) {
	    var TooltippedComponent = function (_Component) {
	      _inherits(TooltippedComponent, _Component);
	
	      function TooltippedComponent() {
	        var _Object$getPrototypeO;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, TooltippedComponent);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TooltippedComponent)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	          active: false,
	          position: _this.props.tooltipPosition,
	          visible: false
	        }, _this.onTransformEnd = function (e) {
	          if (e.propertyName === 'transform') {
	            _events2.default.removeEventListenerOnTransitionEnded(_this.refs.tooltip, _this.onTransformEnd);
	            _this.setState({ visible: false });
	          }
	        }, _this.handleMouseEnter = function (event) {
	          _this.activate(_this.calculatePosition(event.target));
	          if (_this.props.onMouseEnter) _this.props.onMouseEnter(event);
	        }, _this.handleMouseLeave = function (event) {
	          _this.deactivate();
	          if (_this.props.onMouseLeave) _this.props.onMouseLeave(event);
	        }, _this.handleClick = function (event) {
	          if (_this.props.tooltipHideOnClick) _this.deactivate();
	          if (_this.props.onClick) _this.props.onClick(event);
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	      }
	
	      _createClass(TooltippedComponent, [{
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          if (this.refs.tooltip) {
	            _events2.default.removeEventListenerOnTransitionEnded(this.refs.tooltip, this.onTransformEnd);
	          }
	        }
	      }, {
	        key: 'activate',
	        value: function activate(_ref) {
	          var _this2 = this;
	
	          var top = _ref.top;
	          var left = _ref.left;
	          var position = _ref.position;
	
	          if (this.timeout) clearTimeout(this.timeout);
	          this.setState({ visible: true, position: position });
	          this.timeout = setTimeout(function () {
	            _this2.setState({ active: true, top: top, left: left });
	          }, this.props.tooltipDelay);
	        }
	      }, {
	        key: 'deactivate',
	        value: function deactivate() {
	          if (this.timeout) clearTimeout(this.timeout);
	          if (this.state.active) {
	            _events2.default.addEventListenerOnTransitionEnded(this.refs.tooltip, this.onTransformEnd);
	            this.setState({ active: false });
	          } else if (this.state.visible) {
	            this.setState({ visible: false });
	          }
	        }
	      }, {
	        key: 'getPosition',
	        value: function getPosition(element) {
	          var tooltipPosition = this.props.tooltipPosition;
	
	          if (tooltipPosition === POSITION.HORIZONTAL) {
	            var origin = element.getBoundingClientRect();
	
	            var _utils$getViewport = _utils2.default.getViewport();
	
	            var ww = _utils$getViewport.width;
	
	            var toRight = origin.left < ww / 2 - origin.width / 2;
	            return toRight ? POSITION.RIGHT : POSITION.LEFT;
	          } else if (tooltipPosition === POSITION.VERTICAL) {
	            var _origin = element.getBoundingClientRect();
	
	            var _utils$getViewport2 = _utils2.default.getViewport();
	
	            var wh = _utils$getViewport2.height;
	
	            var toBottom = _origin.top < wh / 2 - _origin.height / 2;
	            return toBottom ? POSITION.BOTTOM : POSITION.TOP;
	          } else {
	            return tooltipPosition;
	          }
	        }
	      }, {
	        key: 'calculatePosition',
	        value: function calculatePosition(element) {
	          var position = this.getPosition(element);
	
	          var _element$getBoundingC = element.getBoundingClientRect();
	
	          var top = _element$getBoundingC.top;
	          var left = _element$getBoundingC.left;
	          var height = _element$getBoundingC.height;
	          var width = _element$getBoundingC.width;
	
	          var xOffset = window.scrollX || window.pageXOffset;
	          var yOffset = window.scrollY || window.pageYOffset;
	          if (position === POSITION.BOTTOM) {
	            return {
	              top: top + height + yOffset,
	              left: left + width / 2 + xOffset,
	              position: position
	            };
	          } else if (position === POSITION.TOP) {
	            return {
	              top: top + yOffset,
	              left: left + width / 2 + xOffset,
	              position: position
	            };
	          } else if (position === POSITION.LEFT) {
	            return {
	              top: top + height / 2 + yOffset,
	              left: left + xOffset,
	              position: position
	            };
	          } else if (position === POSITION.RIGHT) {
	            return {
	              top: top + height / 2 + yOffset,
	              left: left + width + xOffset,
	              position: position
	            };
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var _classnames;
	
	          var _state = this.state;
	          var active = _state.active;
	          var left = _state.left;
	          var top = _state.top;
	          var position = _state.position;
	          var visible = _state.visible;
	
	          var positionClass = 'tooltip' + (position.charAt(0).toUpperCase() + position.slice(1));
	          var _props = this.props;
	          var children = _props.children;
	          var className = _props.className;
	          var theme = _props.theme;
	          var tooltip = _props.tooltip;
	          var tooltipDelay = _props.tooltipDelay;
	          var tooltipHideOnClick = _props.tooltipHideOnClick;
	          var tooltipPosition = _props.tooltipPosition;
	
	          var other = _objectWithoutProperties(_props, ['children', 'className', 'theme', 'tooltip', 'tooltipDelay', 'tooltipHideOnClick', 'tooltipPosition']);
	
	          var _className = (0, _classnames3.default)(theme.tooltip, (_classnames = {}, _defineProperty(_classnames, theme.tooltipActive, active), _defineProperty(_classnames, theme[positionClass], theme[positionClass]), _classnames));
	
	          return _react2.default.createElement(
	            ComposedComponent,
	            _extends({}, other, {
	              className: className,
	              onClick: this.handleClick,
	              onMouseEnter: this.handleMouseEnter,
	              onMouseLeave: this.handleMouseLeave,
	              theme: theme
	            }),
	            children ? children : null,
	            visible && _react2.default.createElement(
	              _Portal2.default,
	              null,
	              _react2.default.createElement(
	                'span',
	                { ref: 'tooltip', className: _className, 'data-react-toolbox': 'tooltip', style: { top: top, left: left } },
	                _react2.default.createElement(
	                  'span',
	                  { className: theme.tooltipInner },
	                  tooltip
	                )
	              )
	            )
	          );
	        }
	      }]);
	
	      return TooltippedComponent;
	    }(_react.Component);
	
	    TooltippedComponent.propTypes = {
	      children: _react.PropTypes.any,
	      className: _react.PropTypes.string,
	      onClick: _react.PropTypes.func,
	      onMouseEnter: _react.PropTypes.func,
	      onMouseLeave: _react.PropTypes.func,
	      theme: _react.PropTypes.shape({
	        tooltip: _react.PropTypes.string,
	        tooltipActive: _react.PropTypes.string,
	        tooltipWrapper: _react.PropTypes.string
	      }),
	      tooltip: _react.PropTypes.string,
	      tooltipDelay: _react.PropTypes.number,
	      tooltipHideOnClick: _react.PropTypes.bool,
	      tooltipPosition: _react.PropTypes.oneOf(Object.keys(POSITION).map(function (key) {
	        return POSITION[key];
	      }))
	    };
	    TooltippedComponent.defaultProps = {
	      className: defaultClassName,
	      tooltipDelay: defaultDelay,
	      tooltipHideOnClick: defaultHideOnClick,
	      tooltipPosition: defaultPosition
	    };
	
	
	    return (0, _reactCssThemr.themr)(_identifiers.TOOLTIP, defaultTheme)(TooltippedComponent);
	  };
	};
	
	exports.default = tooltipFactory;

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(459);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss", function() {
				var newContent = require("!!./../../../css-loader/index.js!./../../../sass-loader/index.js!./theme.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, ".tooltip {\n  position: absolute;\n  z-index: 200;\n  display: block;\n  max-width: 17rem;\n  padding: 0.5rem;\n  font-family: Roboto, sans-serif;\n  font-size: 1rem;\n  font-weight: 700;\n  line-height: 1.4rem;\n  text-align: center;\n  text-transform: none;\n  pointer-events: none;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 200ms transform;\n  transform: scale(0) translateX(-50%);\n  transform-origin: top left; }\n  .tooltip.tooltipActive {\n    transform: scale(1) translateX(-50%); }\n  .tooltip.tooltipTop {\n    transform: scale(0) translateX(-50%) translateY(-100%); }\n    .tooltip.tooltipTop.tooltipActive {\n      transform: scale(1) translateX(-50%) translateY(-100%); }\n  .tooltip.tooltipLeft {\n    transform: scale(0) translateX(-100%) translateY(-50%); }\n    .tooltip.tooltipLeft.tooltipActive {\n      transform: scale(1) translateX(-100%) translateY(-50%); }\n  .tooltip.tooltipRight {\n    transform: scale(0) translateX(0) translateY(-50%); }\n    .tooltip.tooltipRight.tooltipActive {\n      transform: scale(1) translateX(0) translateY(-50%); }\n\n.tooltipInner {\n  display: block;\n  padding: 0.8rem;\n  color: #fff;\n  background: rgba(97, 97, 97, 0.9);\n  border-radius: 0.2rem; }\n", ""]);
	
	// exports


/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(461);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(193)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./../../sass-loader/index.js!./commons.scss", function() {
				var newContent = require("!!./../../css-loader/index.js!./../../sass-loader/index.js!./commons.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(192)();
	// imports
	
	
	// module
	exports.push([module.id, "/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in IE and iOS.\n */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  line-height: 1.15;\n  /* 2 */\n  -ms-text-size-adjust: 100%;\n  /* 3 */\n  -webkit-text-size-adjust: 100%;\n  /* 3 */ }\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\nbody {\n  margin: 0; }\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n * 2. Add the correct display in IE.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  /* 1 */\n  display: block; }\n\n/**\n * Add the correct display in IE 9-.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; }\n\n/**\n * Add the correct display in iOS 4-7.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/**\n * Add the correct display in IE 10-.\n * 1. Add the correct display in IE.\n */\ntemplate,\n[hidden] {\n  display: none; }\n\n/* Links\n   ========================================================================== */\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\na {\n  background-color: transparent;\n  /* 1 */\n  -webkit-text-decoration-skip: objects;\n  /* 2 */ }\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\na:active,\na:hover {\n  outline-width: 0; }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\nb,\nstrong {\n  font-weight: inherit; }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * Add the correct font style in Android 4.3-.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/**\n * Add the correct background and color in IE 9-.\n */\nmark {\n  background-color: #ff0;\n  color: #000; }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10-.\n */\nimg {\n  border-style: none; }\n\n/**\n * Hide the overflow in IE.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct margin in IE 8.\n */\nfigure {\n  margin: 1em 40px; }\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change font properties to `inherit` in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n * Restore the font weight unset by the previous rule.\n */\noptgroup {\n  font-weight: bold; }\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */ }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.\n */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\nhtml {\n  font-size: 62.5%; }\n\nbody {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  font-family: Roboto, sans-serif;\n  font-size: 1.6rem;\n  -webkit-touch-callout: none; }\n  body * {\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }\n\na, abbr, address, article, aside, audio, b, blockquote, body, caption, cite,\ncode, dd, del, dfn, dialog, div, dl, dt, em, fieldset, figure, footer, form, h1,\nh2, h3, h4, h5, h6, header, hgroup, hr, html, i, iframe, img, ins, kbd, label,\nlegend, li, mark, menu, nav, object, ol, p, pre, q, samp, section, small, span,\nstrong, sub, sup, table, tbody, td, tfoot, th, thead, time, tr, ul, var, video {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: 0; }\n\n*, *:before, *:after {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0; }\n\nh1, h2, h3, h4, h5, h6, label, p, button, abbr, a, span, small {\n  font-smoothing: antialiased;\n  -webkit-font-smoothing: antialiased;\n  text-size-adjust: 100%; }\n\na {\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent; }\n\ninput:not([type=\"checkbox\"]):not([type=\"radio\"]), button {\n  outline: none;\n  appearance: none;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }\n\nh1 small, h2 small, h3 small, h4 small, h5 small, h6 small {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 5.6rem;\n  font-weight: 400;\n  line-height: 1.35;\n  letter-spacing: -.02em;\n  opacity: .54; }\n\nh1 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 5.6rem;\n  font-weight: 400;\n  line-height: 1.35;\n  letter-spacing: -.02em; }\n\nh2 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 4.5rem;\n  font-weight: 400;\n  line-height: 4.8rem; }\n\nh3 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 3.4rem;\n  font-weight: 400;\n  line-height: 4rem; }\n\nh4 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 2.4rem;\n  font-weight: 400;\n  line-height: 3.2rem;\n  -moz-osx-font-smoothing: grayscale; }\n\nh5 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 2rem;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: .02em; }\n\nh6 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 1.6rem;\n  font-weight: 400;\n  line-height: 2.4rem;\n  letter-spacing: .04em; }\n\np {\n  font-size: 1.4rem;\n  font-weight: 400;\n  line-height: 2.4rem;\n  letter-spacing: 0; }\n", ""]);
	
	// exports


/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports !== "undefined") {
	        factory(exports);
	    } else {
	        var mod = {
	            exports: {}
	        };
	        factory(mod.exports);
	        global.fableCore = mod.exports;
	    }
	})(this, function (exports) {
	    "use strict";
	
	    Object.defineProperty(exports, "__esModule", {
	        value: true
	    });
	    exports.Tuple = Tuple;
	    exports.Tuple3 = Tuple3;
	
	    var _slicedToArray = function () {
	        function sliceIterator(arr, i) {
	            var _arr = [];
	            var _n = true;
	            var _d = false;
	            var _e = undefined;
	
	            try {
	                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	                    _arr.push(_s.value);
	
	                    if (i && _arr.length === i) break;
	                }
	            } catch (err) {
	                _d = true;
	                _e = err;
	            } finally {
	                try {
	                    if (!_n && _i["return"]) _i["return"]();
	                } finally {
	                    if (_d) throw _e;
	                }
	            }
	
	            return _arr;
	        }
	
	        return function (arr, i) {
	            if (Array.isArray(arr)) {
	                return arr;
	            } else if (Symbol.iterator in Object(arr)) {
	                return sliceIterator(arr, i);
	            } else {
	                throw new TypeError("Invalid attempt to destructure non-iterable instance");
	            }
	        };
	    }();
	
	    function _defineProperty(obj, key, value) {
	        if (key in obj) {
	            Object.defineProperty(obj, key, {
	                value: value,
	                enumerable: true,
	                configurable: true,
	                writable: true
	            });
	        } else {
	            obj[key] = value;
	        }
	
	        return obj;
	    }
	
	    function _possibleConstructorReturn(self, call) {
	        if (!self) {
	            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	        }
	
	        return call && (typeof call === "object" || typeof call === "function") ? call : self;
	    }
	
	    function _inherits(subClass, superClass) {
	        if (typeof superClass !== "function" && superClass !== null) {
	            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	        }
	
	        subClass.prototype = Object.create(superClass && superClass.prototype, {
	            constructor: {
	                value: subClass,
	                enumerable: false,
	                writable: true,
	                configurable: true
	            }
	        });
	        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	    }
	
	    var _createClass = function () {
	        function defineProperties(target, props) {
	            for (var i = 0; i < props.length; i++) {
	                var descriptor = props[i];
	                descriptor.enumerable = descriptor.enumerable || false;
	                descriptor.configurable = true;
	                if ("value" in descriptor) descriptor.writable = true;
	                Object.defineProperty(target, descriptor.key, descriptor);
	            }
	        }
	
	        return function (Constructor, protoProps, staticProps) {
	            if (protoProps) defineProperties(Constructor.prototype, protoProps);
	            if (staticProps) defineProperties(Constructor, staticProps);
	            return Constructor;
	        };
	    }();
	
	    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	        return typeof obj;
	    } : function (obj) {
	        return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
	    };
	
	    function _classCallCheck(instance, Constructor) {
	        if (!(instance instanceof Constructor)) {
	            throw new TypeError("Cannot call a class as a function");
	        }
	    }
	
	    var fableGlobal = function () {
	        var globalObj = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : null;
	        if (typeof globalObj.__FABLE_CORE__ == "undefined") {
	            globalObj.__FABLE_CORE__ = {
	                types: new Map(),
	                symbols: {
	                    interfaces: Symbol("interfaces"),
	                    typeName: Symbol("typeName")
	                }
	            };
	        }
	        return globalObj.__FABLE_CORE__;
	    }();
	    var FSymbol = fableGlobal.symbols;
	    exports.Symbol = FSymbol;
	    function Tuple(x, y) {
	        return [x, y];
	    }
	    function Tuple3(x, y, z) {
	        return [x, y, z];
	    }
	
	    var Util = exports.Util = function () {
	        function Util() {
	            _classCallCheck(this, Util);
	        }
	
	        // For legacy reasons the name is kept, but this method also adds
	        // the type name to a cache. Use it after declaration:
	        // Util.setInterfaces(Foo.prototype, ["IFoo", "IBar"], "MyModule.Foo");
	        Util.setInterfaces = function setInterfaces(proto, interfaces, typeName) {
	            if (Array.isArray(interfaces) && interfaces.length > 0) {
	                var currentInterfaces = proto[FSymbol.interfaces];
	                if (Array.isArray(currentInterfaces)) {
	                    for (var i = 0; i < interfaces.length; i++) {
	                        if (currentInterfaces.indexOf(interfaces[i]) == -1) currentInterfaces.push(interfaces[i]);
	                    }
	                } else proto[FSymbol.interfaces] = interfaces;
	            }
	            if (typeName) {
	                proto[FSymbol.typeName] = typeName;
	                fableGlobal.types.set(typeName, proto.constructor);
	            }
	        };
	
	        Util.hasInterface = function hasInterface(obj) {
	            for (var _len2 = arguments.length, interfaceNames = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	                interfaceNames[_key2 - 1] = arguments[_key2];
	            }
	
	            return Array.isArray(obj[FSymbol.interfaces]) && obj[FSymbol.interfaces].some(function (x) {
	                return interfaceNames.indexOf(x) >= 0;
	            });
	        };
	
	        Util.getTypeFullName = function getTypeFullName(cons) {
	            if (cons.prototype && cons.prototype[FSymbol.typeName]) {
	                return cons.prototype[FSymbol.typeName];
	            } else {
	                return cons.name || "unknown";
	            }
	        };
	
	        Util.getTypeNamespace = function getTypeNamespace(cons) {
	            var fullName = Util.getTypeFullName(cons);
	            var i = fullName.lastIndexOf('.');
	            return i > -1 ? fullName.substr(0, i) : "";
	        };
	
	        Util.getTypeName = function getTypeName(cons) {
	            var fullName = Util.getTypeFullName(cons);
	            var i = fullName.lastIndexOf('.');
	            return fullName.substr(i + 1);
	        };
	
	        Util.getRestParams = function getRestParams(args, idx) {
	            for (var _len = args.length, restArgs = Array(_len > idx ? _len - idx : 0), _key = idx; _key < _len; _key++) {
	                restArgs[_key - idx] = args[_key];
	            }return restArgs;
	        };
	
	        Util.toString = function toString(o) {
	            return o != null && typeof o.ToString == "function" ? o.ToString() : String(o);
	        };
	
	        Util.equals = function equals(x, y) {
	            if (x == null) return y == null;else if (y == null) return false;else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y)) return false;else if (Array.isArray(x) || ArrayBuffer.isView(x)) return x.length != y.length ? false : Seq.fold2(function (prev, v1, v2) {
	                return !prev ? prev : Util.equals(v1, v2);
	            }, true, x, y);else if (x instanceof Date) return FDate.equals(x, y);else if (Util.hasInterface(x, "System.IEquatable")) return x.Equals(y);else return x === y;
	        };
	
	        Util.compare = function compare(x, y) {
	            if (x == null) return y == null ? 0 : -1;else if (y == null) return -1;else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y)) return -1;else if (Array.isArray(x) || ArrayBuffer.isView(x)) return x.length != y.length ? x.length < y.length ? -1 : 1 : Seq.fold2(function (prev, v1, v2) {
	                return prev !== 0 ? prev : Util.compare(v1, v2);
	            }, 0, x, y);else if (Util.hasInterface(x, "System.IComparable")) return x.CompareTo(y);else return x < y ? -1 : x > y ? 1 : 0;
	        };
	
	        Util.equalsRecords = function equalsRecords(x, y) {
	            var keys = Object.getOwnPropertyNames(x);
	            for (var i = 0; i < keys.length; i++) {
	                if (!Util.equals(x[keys[i]], y[keys[i]])) return false;
	            }
	            return true;
	        };
	
	        Util.compareRecords = function compareRecords(x, y) {
	            var keys = Object.getOwnPropertyNames(x);
	            for (var i = 0; i < keys.length; i++) {
	                var res = Util.compare(x[keys[i]], y[keys[i]]);
	                if (res !== 0) return res;
	            }
	            return 0;
	        };
	
	        Util.equalsUnions = function equalsUnions(x, y) {
	            if (x.Case !== y.Case) return false;
	            for (var i = 0; i < x.Fields.length; i++) {
	                if (!Util.equals(x.Fields[i], y.Fields[i])) return false;
	            }
	            return true;
	        };
	
	        Util.compareUnions = function compareUnions(x, y) {
	            var res = Util.compare(x.Case, y.Case);
	            if (res !== 0) return res;
	            for (var i = 0; i < x.Fields.length; i++) {
	                res = Util.compare(x.Fields[i], y.Fields[i]);
	                if (res !== 0) return res;
	            }
	            return 0;
	        };
	
	        Util.createDisposable = function createDisposable(f) {
	            var disp = { Dispose: f };
	            disp[FSymbol.interfaces] = ["System.IDisposable"];
	            return disp;
	        };
	
	        Util.createObj = function createObj(fields) {
	            return Seq.fold(function (acc, kv) {
	                acc[kv[0]] = kv[1];return acc;
	            }, {}, fields);
	        };
	
	        return Util;
	    }();
	
	    Util.toPlainJsObj = function (source) {
	        if (source != null && source.constructor != Object) {
	            var target = {};
	            var props = Object.getOwnPropertyNames(source);
	            for (var i = 0; i < props.length; i++) {
	                target[props[i]] = source[props[i]];
	            }
	            // Copy also properties from prototype, see #192
	            var proto = Object.getPrototypeOf(source);
	            if (proto != null) {
	                props = Object.getOwnPropertyNames(proto);
	                for (var _i = 0; _i < props.length; _i++) {
	                    var prop = Object.getOwnPropertyDescriptor(proto, props[_i]);
	                    if (prop.value) {
	                        target[props[_i]] = prop.value;
	                    } else if (prop.get) {
	                        target[props[_i]] = prop.get.apply(source);
	                    }
	                }
	            }
	            return target;
	        } else {
	            return source;
	        }
	    };
	
	    var Serialize = exports.Serialize = function () {
	        function Serialize() {
	            _classCallCheck(this, Serialize);
	        }
	
	        Serialize.toJson = function toJson(o) {
	            return JSON.stringify(o, function (k, v) {
	                if (ArrayBuffer.isView(v)) {
	                    return Array.from(v);
	                } else if (v != null && (typeof v === "undefined" ? "undefined" : _typeof(v)) === "object") {
	                    if (v instanceof List || v instanceof FSet || v instanceof Set) {
	                        return {
	                            $type: v[FSymbol.typeName] || "System.Collections.Generic.HashSet",
	                            $values: Array.from(v) };
	                    } else if (v instanceof FMap || v instanceof Map) {
	                        return Seq.fold(function (o, kv) {
	                            o[kv[0]] = kv[1];return o;
	                        }, { $type: v[FSymbol.typeName] || "System.Collections.Generic.Dictionary" }, v);
	                    } else if (v[FSymbol.typeName]) {
	                        if (Util.hasInterface(v, "FSharpUnion", "FSharpRecord", "FSharpException")) {
	                            return Object.assign({ $type: v[FSymbol.typeName] }, v);
	                        } else {
	                            var proto = Object.getPrototypeOf(v),
	                                props = Object.getOwnPropertyNames(proto),
	                                _o = { $type: v[FSymbol.typeName] };
	                            for (var i = 0; i < props.length; i++) {
	                                var prop = Object.getOwnPropertyDescriptor(proto, props[i]);
	                                if (prop.get) _o[props[i]] = prop.get.apply(v);
	                            }
	                            return _o;
	                        }
	                    }
	                }
	                return v;
	            });
	        };
	
	        Serialize.ofJson = function ofJson(json, expected) {
	            var parsed = JSON.parse(json, function (k, v) {
	                if (v == null) return v;else if ((typeof v === "undefined" ? "undefined" : _typeof(v)) === "object" && typeof v.$type === "string") {
	                    // Remove generic args and assembly info added by Newtonsoft.Json
	                    var type = v.$type.replace('+', '.'),
	                        i = type.indexOf('`');
	                    if (i > -1) {
	                        type = type.substr(0, i);
	                    } else {
	                        i = type.indexOf(',');
	                        type = i > -1 ? type.substr(0, i) : type;
	                    }
	                    if (type === "System.Collections.Generic.List" || type.indexOf("[]") === type.length - 2) {
	                        return v.$values;
	                    }
	                    if (type === "Microsoft.FSharp.Collections.FSharpList") {
	                        return List.ofArray(v.$values);
	                    } else if (type == "Microsoft.FSharp.Collections.FSharpSet") {
	                        return FSet.create(v.$values);
	                    } else if (type == "System.Collections.Generic.HashSet") {
	                        return new Set(v.$values);
	                    } else if (type == "Microsoft.FSharp.Collections.FSharpMap") {
	                        delete v.$type;
	                        return FMap.create(Object.getOwnPropertyNames(v).map(function (k) {
	                            return [k, v[k]];
	                        }));
	                    } else if (type == "System.Collections.Generic.Dictionary") {
	                        delete v.$type;
	                        return new Map(Object.getOwnPropertyNames(v).map(function (k) {
	                            return [k, v[k]];
	                        }));
	                    } else {
	                        var T = fableGlobal.types.get(type);
	                        if (T) {
	                            delete v.$type;
	                            return Object.assign(new T(), v);
	                        }
	                    }
	                } else if (/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:[+-]\d{2}:\d{2}|Z)$/.test(v)) return FDate.parse(v);else return v;
	            });
	            if (parsed != null && typeof expected == "function" && !(parsed instanceof expected)) {
	                throw "JSON is not of type " + expected.name + ": " + json;
	            }
	            return parsed;
	        };
	
	        return Serialize;
	    }();
	
	    var GenericComparer = exports.GenericComparer = function GenericComparer(f) {
	        _classCallCheck(this, GenericComparer);
	
	        this.Compare = f || Util.compare;
	    };
	
	    Util.setInterfaces(GenericComparer.prototype, ["System.IComparer"], "Fable.Core.GenericComparer");
	
	    var Choice = exports.Choice = function () {
	        function Choice(t, d) {
	            _classCallCheck(this, Choice);
	
	            this.Case = t;
	            this.Fields = d;
	        }
	
	        Choice.Choice1Of2 = function Choice1Of2(v) {
	            return new Choice("Choice1Of2", [v]);
	        };
	
	        Choice.Choice2Of2 = function Choice2Of2(v) {
	            return new Choice("Choice2Of2", [v]);
	        };
	
	        Choice.prototype.Equals = function Equals(other) {
	            return Util.equalsUnions(this, other);
	        };
	
	        Choice.prototype.CompareTo = function CompareTo(other) {
	            return Util.compareUnions(this, other);
	        };
	
	        _createClass(Choice, [{
	            key: "valueIfChoice1",
	            get: function get() {
	                return this.Case === "Choice1Of2" ? this.Fields[0] : null;
	            }
	        }, {
	            key: "valueIfChoice2",
	            get: function get() {
	                return this.Case === "Choice2Of2" ? this.Fields[0] : null;
	            }
	        }]);
	
	        return Choice;
	    }();
	
	    Util.setInterfaces(Choice.prototype, ["FSharpUnion", "System.IEquatable", "System.IComparable"], "Microsoft.FSharp.Core.FSharpChoice");
	
	    var TimeSpan = exports.TimeSpan = function (_Number) {
	        _inherits(TimeSpan, _Number);
	
	        function TimeSpan() {
	            _classCallCheck(this, TimeSpan);
	
	            return _possibleConstructorReturn(this, _Number.apply(this, arguments));
	        }
	
	        TimeSpan.create = function create() {
	            var d = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
	            var h = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
	            var m = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
	            var s = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];
	            var ms = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];
	
	            switch (arguments.length) {
	                case 1:
	                    // ticks
	                    return this.fromTicks(arguments[0]);
	                case 3:
	                    // h,m,s
	                    d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;
	                    break;
	                default:
	                    // d,h,m,s,ms
	                    d = arguments[0], h = arguments[1], m = arguments[2], s = arguments[3], ms = arguments[4] || 0;
	                    break;
	            }
	            return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;
	        };
	
	        TimeSpan.fromTicks = function fromTicks(ticks) {
	            return ticks / 10000;
	        };
	
	        TimeSpan.fromDays = function fromDays(d) {
	            return TimeSpan.create(d, 0, 0, 0);
	        };
	
	        TimeSpan.fromHours = function fromHours(h) {
	            return TimeSpan.create(h, 0, 0);
	        };
	
	        TimeSpan.fromMinutes = function fromMinutes(m) {
	            return TimeSpan.create(0, m, 0);
	        };
	
	        TimeSpan.fromSeconds = function fromSeconds(s) {
	            return TimeSpan.create(0, 0, s);
	        };
	
	        TimeSpan.days = function days(ts) {
	            return Math.floor(ts / 86400000);
	        };
	
	        TimeSpan.hours = function hours(ts) {
	            return Math.floor(ts % 86400000 / 3600000);
	        };
	
	        TimeSpan.minutes = function minutes(ts) {
	            return Math.floor(ts % 3600000 / 60000);
	        };
	
	        TimeSpan.seconds = function seconds(ts) {
	            return Math.floor(ts % 60000 / 1000);
	        };
	
	        TimeSpan.milliseconds = function milliseconds(ts) {
	            return Math.floor(ts % 1000);
	        };
	
	        TimeSpan.ticks = function ticks(ts) {
	            return ts * 10000;
	        };
	
	        TimeSpan.totalDays = function totalDays(ts) {
	            return ts / 86400000;
	        };
	
	        TimeSpan.totalHours = function totalHours(ts) {
	            return ts / 3600000;
	        };
	
	        TimeSpan.totalMinutes = function totalMinutes(ts) {
	            return ts / 60000;
	        };
	
	        TimeSpan.totalSeconds = function totalSeconds(ts) {
	            return ts / 1000;
	        };
	
	        TimeSpan.negate = function negate(ts) {
	            return ts * -1;
	        };
	
	        TimeSpan.add = function add(ts1, ts2) {
	            return ts1 + ts2;
	        };
	
	        TimeSpan.subtract = function subtract(ts1, ts2) {
	            return ts1 - ts2;
	        };
	
	        return TimeSpan;
	    }(Number);
	
	    TimeSpan.compare = Util.compare;
	    TimeSpan.compareTo = Util.compare;
	    TimeSpan.duration = Math.abs;
	    var DateKind = exports.DateKind = undefined;
	    (function (DateKind) {
	        DateKind[DateKind["UTC"] = 1] = "UTC";
	        DateKind[DateKind["Local"] = 2] = "Local";
	    })(DateKind || (exports.DateKind = DateKind = {}));
	
	    var FDate = function (_Date) {
	        _inherits(FDate, _Date);
	
	        function FDate() {
	            _classCallCheck(this, FDate);
	
	            return _possibleConstructorReturn(this, _Date.apply(this, arguments));
	        }
	
	        FDate.__changeKind = function __changeKind(d, kind) {
	            var d2 = void 0;
	            return d.kind == kind ? d : (d2 = new Date(d.getTime()), d2.kind = kind, d2);
	        };
	
	        FDate.__getValue = function __getValue(d, key) {
	            return d[(d.kind == DateKind.UTC ? "getUTC" : "get") + key]();
	        };
	
	        FDate.minValue = function minValue() {
	            return FDate.parse(-8640000000000000, 1);
	        };
	
	        FDate.maxValue = function maxValue() {
	            return FDate.parse(8640000000000000, 1);
	        };
	
	        FDate.parse = function parse(v, kind) {
	            var date = v == null ? new Date() : new Date(v);
	            if (isNaN(date.getTime())) throw "The string is not a valid Date.";
	            date.kind = kind || (typeof v == "string" && v.slice(-1) == "Z" ? DateKind.UTC : DateKind.Local);
	            return date;
	        };
	
	        FDate.create = function create(year, month, day) {
	            var h = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];
	            var m = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];
	            var s = arguments.length <= 5 || arguments[5] === undefined ? 0 : arguments[5];
	            var ms = arguments.length <= 6 || arguments[6] === undefined ? 0 : arguments[6];
	            var kind = arguments.length <= 7 || arguments[7] === undefined ? DateKind.Local : arguments[7];
	
	            var date = kind === DateKind.UTC ? new Date(Date.UTC(year, month - 1, day, h, m, s, ms)) : new Date(year, month - 1, day, h, m, s, ms);
	            if (isNaN(date.getTime())) throw "The parameters describe an unrepresentable Date.";
	            date.kind = kind;
	            return date;
	        };
	
	        FDate.utcNow = function utcNow() {
	            return FDate.parse(null, 1);
	        };
	
	        FDate.today = function today() {
	            return FDate.date(FDate.now());
	        };
	
	        FDate.isLeapYear = function isLeapYear(year) {
	            return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	        };
	
	        FDate.daysInMonth = function daysInMonth(year, month) {
	            return month == 2 ? FDate.isLeapYear(year) ? 29 : 28 : month >= 8 ? month % 2 == 0 ? 31 : 30 : month % 2 == 0 ? 30 : 31;
	        };
	
	        FDate.toUniversalTime = function toUniversalTime(d) {
	            return FDate.__changeKind(d, 1);
	        };
	
	        FDate.toLocalTime = function toLocalTime(d) {
	            return FDate.__changeKind(d, 2);
	        };
	
	        FDate.timeOfDay = function timeOfDay(d) {
	            return TimeSpan.create(0, FDate.hour(d), FDate.minute(d), FDate.second(d), FDate.millisecond(d));
	        };
	
	        FDate.date = function date(d) {
	            return FDate.create(FDate.year(d), FDate.month(d), FDate.day(d), 0, 0, 0, 0, d.kind);
	        };
	
	        FDate.day = function day(d) {
	            return FDate.__getValue(d, "Date");
	        };
	
	        FDate.hour = function hour(d) {
	            return FDate.__getValue(d, "Hours");
	        };
	
	        FDate.millisecond = function millisecond(d) {
	            return FDate.__getValue(d, "Milliseconds");
	        };
	
	        FDate.minute = function minute(d) {
	            return FDate.__getValue(d, "Minutes");
	        };
	
	        FDate.month = function month(d) {
	            return FDate.__getValue(d, "Month") + 1;
	        };
	
	        FDate.second = function second(d) {
	            return FDate.__getValue(d, "Seconds");
	        };
	
	        FDate.year = function year(d) {
	            return FDate.__getValue(d, "FullYear");
	        };
	
	        FDate.ticks = function ticks(d) {
	            return (d.getTime() + 6.2135604e+13 /* millisecondsJSOffset */) * 10000;
	        };
	
	        FDate.dayOfWeek = function dayOfWeek(d) {
	            return FDate.__getValue(d, "Day");
	        };
	
	        FDate.dayOfYear = function dayOfYear(d) {
	            var year = FDate.year(d);
	            var month = FDate.month(d);
	            var day = FDate.day(d);
	            for (var i = 1; i < month; i++) {
	                day += FDate.daysInMonth(year, i);
	            }return day;
	        };
	
	        FDate.add = function add(d, ts) {
	            return FDate.parse(d.getTime() + ts, d.kind);
	        };
	
	        FDate.addDays = function addDays(d, v) {
	            return FDate.parse(d.getTime() + v * 86400000, d.kind);
	        };
	
	        FDate.addHours = function addHours(d, v) {
	            return FDate.parse(d.getTime() + v * 3600000, d.kind);
	        };
	
	        FDate.addMinutes = function addMinutes(d, v) {
	            return FDate.parse(d.getTime() + v * 60000, d.kind);
	        };
	
	        FDate.addSeconds = function addSeconds(d, v) {
	            return FDate.parse(d.getTime() + v * 1000, d.kind);
	        };
	
	        FDate.addMilliseconds = function addMilliseconds(d, v) {
	            return FDate.parse(d.getTime() + v, d.kind);
	        };
	
	        FDate.addTicks = function addTicks(d, v) {
	            return FDate.parse(d.getTime() + v / 10000, d.kind);
	        };
	
	        FDate.addYears = function addYears(d, v) {
	            var newMonth = FDate.month(d);
	            var newYear = FDate.year(d) + v;
	            var daysInMonth = FDate.daysInMonth(newYear, newMonth);
	            var newDay = Math.min(daysInMonth, FDate.day(d));
	            return FDate.create(newYear, newMonth, newDay, FDate.hour(d), FDate.minute(d), FDate.second(d), FDate.millisecond(d), d.kind);
	        };
	
	        FDate.addMonths = function addMonths(d, v) {
	            var newMonth = FDate.month(d) + v;
	            var newMonth_ = 0;
	            var yearOffset = 0;
	            if (newMonth > 12) {
	                newMonth_ = newMonth % 12;
	                yearOffset = Math.floor(newMonth / 12);
	                newMonth = newMonth_;
	            } else if (newMonth < 1) {
	                newMonth_ = 12 + newMonth % 12;
	                yearOffset = Math.floor(newMonth / 12) + (newMonth_ == 12 ? -1 : 0);
	                newMonth = newMonth_;
	            }
	            var newYear = FDate.year(d) + yearOffset;
	            var daysInMonth = FDate.daysInMonth(newYear, newMonth);
	            var newDay = Math.min(daysInMonth, FDate.day(d));
	            return FDate.create(newYear, newMonth, newDay, FDate.hour(d), FDate.minute(d), FDate.second(d), FDate.millisecond(d), d.kind);
	        };
	
	        FDate.subtract = function subtract(d, that) {
	            return typeof that == "number" ? FDate.parse(d.getTime() - that, d.kind) : d.getTime() - that.getTime();
	        };
	
	        FDate.toLongDateString = function toLongDateString(d) {
	            return d.toDateString();
	        };
	
	        FDate.toShortDateString = function toShortDateString(d) {
	            return d.toLocaleDateString();
	        };
	
	        FDate.toLongTimeString = function toLongTimeString(d) {
	            return d.toLocaleTimeString();
	        };
	
	        FDate.toShortTimeString = function toShortTimeString(d) {
	            return d.toLocaleTimeString().replace(/:\d\d(?!:)/, "");
	        };
	
	        FDate.equals = function equals(d1, d2) {
	            return d1.getTime() == d2.getTime();
	        };
	
	        return FDate;
	    }(Date);
	
	    FDate.now = FDate.parse;
	    FDate.toBinary = FDate.ticks;
	    FDate.compareTo = Util.compare;
	    FDate.compare = Util.compare;
	    FDate.op_Addition = FDate.add;
	    FDate.op_Subtraction = FDate.subtract;
	    exports.Date = FDate;
	
	    var Timer = exports.Timer = function () {
	        function Timer(interval) {
	            _classCallCheck(this, Timer);
	
	            this.Interval = interval > 0 ? interval : 100;
	            this.AutoReset = true;
	            this._elapsed = new Event();
	        }
	
	        Timer.prototype.Dispose = function Dispose() {
	            this.Enabled = false;
	            this._isDisposed = true;
	        };
	
	        Timer.prototype.Close = function Close() {
	            this.Dispose();
	        };
	
	        Timer.prototype.Start = function Start() {
	            this.Enabled = true;
	        };
	
	        Timer.prototype.Stop = function Stop() {
	            this.Enabled = false;
	        };
	
	        _createClass(Timer, [{
	            key: "Elapsed",
	            get: function get() {
	                return this._elapsed;
	            }
	        }, {
	            key: "Enabled",
	            get: function get() {
	                return this._enabled;
	            },
	            set: function set(x) {
	                var _this3 = this;
	
	                if (!this._isDisposed && this._enabled != x) {
	                    if (this._enabled = x) {
	                        if (this.AutoReset) {
	                            this._intervalId = setInterval(function () {
	                                if (!_this3.AutoReset) _this3.Enabled = false;
	                                _this3._elapsed.Trigger(new Date());
	                            }, this.Interval);
	                        } else {
	                            this._timeoutId = setTimeout(function () {
	                                _this3.Enabled = false;
	                                _this3._timeoutId = 0;
	                                if (_this3.AutoReset) _this3.Enabled = true;
	                                _this3._elapsed.Trigger(new Date());
	                            }, this.Interval);
	                        }
	                    } else {
	                        if (this._timeoutId) {
	                            clearTimeout(this._timeoutId);
	                            this._timeoutId = 0;
	                        }
	                        if (this._intervalId) {
	                            clearInterval(this._intervalId);
	                            this._intervalId = 0;
	                        }
	                    }
	                }
	            }
	        }]);
	
	        return Timer;
	    }();
	
	    Util.setInterfaces(Timer.prototype, ["System.IDisposable"]);
	
	    var FString = function () {
	        function FString() {
	            _classCallCheck(this, FString);
	        }
	
	        FString.fsFormat = function fsFormat(str) {
	            function isObject(x) {
	                return x !== null && (typeof x === "undefined" ? "undefined" : _typeof(x)) === "object" && !(x instanceof Number) && !(x instanceof String) && !(x instanceof Boolean);
	            }
	            function formatOnce(str, rep) {
	                return str.replace(FString.fsFormatRegExp, function (_, prefix, flags, pad, precision, format) {
	                    switch (format) {
	                        case "f":
	                        case "F":
	                            rep = rep.toFixed(precision || 6);
	                            break;
	                        case "g":
	                        case "G":
	                            rep = rep.toPrecision(precision);
	                            break;
	                        case "e":
	                        case "E":
	                            rep = rep.toExponential(precision);
	                            break;
	                        case "A":
	                            try {
	                                rep = JSON.stringify(rep, function (k, v) {
	                                    return v && v[Symbol.iterator] && !Array.isArray(v) && isObject(v) ? Array.from(v) : v;
	                                });
	                            } catch (err) {
	                                // Fallback for objects with circular references
	                                rep = "{" + Object.getOwnPropertyNames(rep).map(function (k) {
	                                    return k + ": " + String(rep[k]);
	                                }).join(", ") + "}";
	                            }
	                            break;
	                    }
	                    var plusPrefix = flags.indexOf("+") >= 0 && parseInt(rep) >= 0;
	                    if (!isNaN(pad = parseInt(pad))) {
	                        var ch = pad >= 0 && flags.indexOf("0") >= 0 ? "0" : " ";
	                        rep = FString.padLeft(rep, Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);
	                    }
	                    var once = prefix + (plusPrefix ? "+" + rep : rep);
	                    return once.replace(/%/g, "%%");
	                });
	            }
	            function makeFn(str) {
	                return function (rep) {
	                    var str2 = formatOnce(str, rep);
	                    return FString.fsFormatRegExp.test(str2) ? makeFn(str2) : _cont(str2.replace(/%%/g, "%"));
	                };
	            }
	            var _cont = void 0;
	            return function (cont) {
	                _cont = cont;
	                return FString.fsFormatRegExp.test(str) ? makeFn(str) : _cont(str);
	            };
	        };
	
	        FString.format = function format(str) {
	            for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	                args[_key3 - 1] = arguments[_key3];
	            }
	
	            return str.replace(FString.formatRegExp, function (match, idx, pad, format) {
	                var rep = args[idx],
	                    padSymbol = " ";
	                if (typeof rep === "number") {
	                    switch ((format || "").substring(0, 1)) {
	                        case "f":
	                        case "F":
	                            rep = format.length > 1 ? rep.toFixed(format.substring(1)) : rep.toFixed(2);
	                            break;
	                        case "g":
	                        case "G":
	                            rep = format.length > 1 ? rep.toPrecision(format.substring(1)) : rep.toPrecision();
	                            break;
	                        case "e":
	                        case "E":
	                            rep = format.length > 1 ? rep.toExponential(format.substring(1)) : rep.toExponential();
	                            break;
	                        case "p":
	                        case "P":
	                            rep = (format.length > 1 ? (rep * 100).toFixed(format.substring(1)) : (rep * 100).toFixed(2)) + " %";
	                            break;
	                        default:
	                            var m = /^(0+)(\.0+)?$/.exec(format);
	                            if (m != null) {
	                                var decs = 0;
	                                if (m[2] != null) rep = rep.toFixed(decs = m[2].length - 1);
	                                pad = "," + (m[1].length + (decs ? decs + 1 : 0)).toString();
	                                padSymbol = "0";
	                            } else if (format) {
	                                rep = format;
	                            }
	                    }
	                } else if (rep instanceof Date) {
	                    if (format.length === 1) {
	                        switch (format) {
	                            case "D":
	                                rep = rep.toDateString();
	                                break;
	                            case "T":
	                                rep = rep.toLocaleTimeString();
	                                break;
	                            case "d":
	                                rep = rep.toLocaleDateString();
	                                break;
	                            case "t":
	                                rep = rep.toLocaleTimeString().replace(/:\d\d(?!:)/, "");
	                                break;
	                            case "o":
	                            case "O":
	                                if (rep.kind === DateKind.Local) {
	                                    var offset = rep.getTimezoneOffset() * -1;
	                                    rep = FString.format("{0:yyyy-MM-dd}T{0:HH:mm}:{1:00.000}{2}{3:00}:{4:00}", rep, FDate.second(rep), offset >= 0 ? "+" : "-", ~~(offset / 60), offset % 60);
	                                } else {
	                                    rep = rep.toISOString();
	                                }
	                        }
	                    } else {
	                        rep = format.replace(/\w+/g, function (match2) {
	                            var rep2 = match2;
	                            switch (match2.substring(0, 1)) {
	                                case "y":
	                                    rep2 = match2.length < 4 ? FDate.year(rep) % 100 : FDate.year(rep);
	                                    break;
	                                case "h":
	                                    rep2 = rep.getHours() > 12 ? FDate.hour(rep) % 12 : FDate.hour(rep);
	                                    break;
	                                case "M":
	                                    rep2 = FDate.month(rep);
	                                    break;
	                                case "d":
	                                    rep2 = FDate.day(rep);
	                                    break;
	                                case "H":
	                                    rep2 = FDate.hour(rep);
	                                    break;
	                                case "m":
	                                    rep2 = FDate.minute(rep);
	                                    break;
	                                case "s":
	                                    rep2 = FDate.second(rep);
	                                    break;
	                            }
	                            if (rep2 !== match2 && rep2 < 10 && match2.length > 1) {
	                                rep2 = "0" + rep2;
	                            }
	                            return rep2;
	                        });
	                    }
	                }
	                if (!isNaN(pad = parseInt((pad || "").substring(1)))) {
	                    rep = FString.padLeft(rep, Math.abs(pad), padSymbol, pad < 0);
	                }
	                return rep;
	            });
	        };
	
	        FString.endsWith = function endsWith(str, search) {
	            var idx = str.lastIndexOf(search);
	            return idx >= 0 && idx == str.length - search.length;
	        };
	
	        FString.initialize = function initialize(n, f) {
	            if (n < 0) throw "String length must be non-negative";
	            var xs = new Array(n);
	            for (var i = 0; i < n; i++) {
	                xs[i] = f(i);
	            }return xs.join("");
	        };
	
	        FString.isNullOrEmpty = function isNullOrEmpty(str) {
	            return typeof str !== "string" || str.length == 0;
	        };
	
	        FString.isNullOrWhiteSpace = function isNullOrWhiteSpace(str) {
	            return typeof str !== "string" || /^\s*$/.test(str);
	        };
	
	        FString.join = function join(delimiter, xs) {
	            xs = typeof xs == "string" ? Util.getRestParams(arguments, 1) : xs;
	            return (Array.isArray(xs) ? xs : Array.from(xs)).join(delimiter);
	        };
	
	        FString.newGuid = function newGuid() {
	            var uuid = "";
	            for (var i = 0; i < 32; i++) {
	                var random = Math.random() * 16 | 0;
	                if (i === 8 || i === 12 || i === 16 || i === 20) uuid += "-";
	                uuid += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);
	            }
	            return uuid;
	        };
	
	        FString.padLeft = function padLeft(str, len, ch, isRight) {
	            ch = ch || " ";
	            str = String(str);
	            len = len - str.length;
	            for (var i = -1; ++i < len;) {
	                str = isRight ? str + ch : ch + str;
	            }return str;
	        };
	
	        FString.padRight = function padRight(str, len, ch) {
	            return FString.padLeft(str, len, ch, true);
	        };
	
	        FString.replace = function replace(str, search, _replace) {
	            return str.replace(new RegExp(FRegExp.escape(search), "g"), _replace);
	        };
	
	        FString.replicate = function replicate(n, x) {
	            return FString.initialize(n, function () {
	                return x;
	            });
	        };
	
	        FString.split = function split(str, splitters, count, removeEmpty) {
	            count = typeof count == "number" ? count : null;
	            removeEmpty = typeof removeEmpty == "number" ? removeEmpty : null;
	            if (count < 0) throw "Count cannot be less than zero";
	            if (count === 0) return [];
	            splitters = Array.isArray(splitters) ? splitters : Util.getRestParams(arguments, 1);
	            splitters = splitters.map(function (x) {
	                return FRegExp.escape(x);
	            });
	            splitters = splitters.length > 0 ? splitters : [" "];
	            var m = void 0;
	            var i = 0;
	            var splits = [];
	            var reg = new RegExp(splitters.join("|"), "g");
	            while ((count == null || count > 1) && (m = reg.exec(str)) !== null) {
	                if (!removeEmpty || m.index - i > 0) {
	                    count = count != null ? count - 1 : count;
	                    splits.push(str.substring(i, m.index));
	                }
	                i = reg.lastIndex;
	            }
	            if (!removeEmpty || str.length - i > 0) splits.push(str.substring(i));
	            return splits;
	        };
	
	        FString.trim = function trim(str, side) {
	            for (var _len4 = arguments.length, chars = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
	                chars[_key4 - 2] = arguments[_key4];
	            }
	
	            if (side == "both" && chars.length == 0) return str.trim();
	            if (side == "start" || side == "both") {
	                var reg = chars.length == 0 ? /^\s+/ : new RegExp("^[" + FRegExp.escape(chars.join("")) + "]+");
	                str = str.replace(reg, "");
	            }
	            if (side == "end" || side == "both") {
	                var _reg = chars.length == 0 ? /\s+$/ : new RegExp("[" + FRegExp.escape(chars.join("")) + "]+$");
	                str = str.replace(_reg, "");
	            }
	            return str;
	        };
	
	        return FString;
	    }();
	
	    FString.fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\d+)?(?:\.(\d+))?(\w)/;
	    FString.formatRegExp = /\{(\d+)(,-?\d+)?(?:\:(.+?))?\}/g;
	    exports.String = FString;
	
	    var FRegExp = function () {
	        function FRegExp() {
	            _classCallCheck(this, FRegExp);
	        }
	
	        FRegExp.create = function create(pattern, options) {
	            var flags = "g";
	            flags += options & 1 ? "i" : "";
	            flags += options & 2 ? "m" : "";
	            return new RegExp(pattern, flags);
	        };
	
	        FRegExp.escape = function escape(str) {
	            return str.replace(/[\-\[\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
	        };
	
	        FRegExp.unescape = function unescape(str) {
	            return str.replace(/\\([\-\[\/\{\}\(\)\*\+\?\.\\\^\$\|])/g, "$1");
	        };
	
	        FRegExp.isMatch = function isMatch(str, pattern) {
	            var options = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
	
	            var reg = str instanceof RegExp ? (reg = str, str = pattern, reg.lastIndex = options, reg) : reg = FRegExp.create(pattern, options);
	            return reg.test(str);
	        };
	
	        FRegExp.match = function match(str, pattern) {
	            var options = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
	
	            var reg = str instanceof RegExp ? (reg = str, str = pattern, reg.lastIndex = options, reg) : reg = FRegExp.create(pattern, options);
	            return reg.exec(str);
	        };
	
	        FRegExp.matches = function matches(str, pattern) {
	            var options = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
	
	            var reg = str instanceof RegExp ? (reg = str, str = pattern, reg.lastIndex = options, reg) : reg = FRegExp.create(pattern, options);
	            if (!reg.global) throw "Non-global RegExp"; // Prevent infinite loop
	            var m = void 0;
	            var matches = [];
	            while ((m = reg.exec(str)) !== null) {
	                matches.push(m);
	            }return matches;
	        };
	
	        FRegExp.options = function options(reg) {
	            var options = 256; // ECMAScript
	            options |= reg.ignoreCase ? 1 : 0;
	            options |= reg.multiline ? 2 : 0;
	            return options;
	        };
	
	        FRegExp.replace = function replace(reg, input, replacement, limit) {
	            var offset = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];
	
	            function replacer() {
	                var res = arguments[0];
	                if (limit !== 0) {
	                    limit--;
	                    var match = [];
	                    var len = arguments.length;
	                    for (var i = 0; i < len - 2; i++) {
	                        match.push(arguments[i]);
	                    }match.index = arguments[len - 2];
	                    match.input = arguments[len - 1];
	                    res = replacement(match);
	                }
	                return res;
	            }
	            if (typeof reg == "string") {
	                var tmp = reg;
	                reg = FRegExp.create(input, limit);
	                input = tmp;
	                limit = undefined;
	            }
	            if (typeof replacement == "function") {
	                limit = limit == null ? -1 : limit;
	                return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);
	            } else {
	                if (limit != null) {
	                    var m = void 0;
	                    var sub1 = input.substring(offset);
	                    var matches = FRegExp.matches(reg, sub1);
	                    var sub2 = matches.length > limit ? (m = matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;
	                    return input.substring(0, offset) + sub2.replace(reg, replacement) + input.substring(offset + sub2.length);
	                } else {
	                    return input.replace(reg, replacement);
	                }
	            }
	        };
	
	        FRegExp.split = function split(reg, input, limit) {
	            var offset = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];
	
	            if (typeof reg == "string") {
	                var tmp = reg;
	                reg = FRegExp.create(input, limit);
	                input = tmp;
	                limit = undefined;
	            }
	            input = input.substring(offset);
	            return input.split(reg, limit);
	        };
	
	        return FRegExp;
	    }();
	
	    exports.RegExp = FRegExp;
	
	    var FArray = function () {
	        function FArray() {
	            _classCallCheck(this, FArray);
	        }
	
	        FArray.addRangeInPlace = function addRangeInPlace(range, xs) {
	            Seq.iterate(function (x) {
	                return xs.push(x);
	            }, range);
	        };
	
	        FArray.copyTo = function copyTo(source, sourceIndex, target, targetIndex, count) {
	            while (count--) {
	                target[targetIndex++] = source[sourceIndex++];
	            }
	        };
	
	        FArray.partition = function partition(f, xs) {
	            var ys = [],
	                zs = [],
	                j = 0,
	                k = 0;
	            for (var i = 0; i < xs.length; i++) {
	                if (f(xs[i])) ys[j++] = xs[i];else zs[k++] = xs[i];
	            }return Tuple(ys, zs);
	        };
	
	        FArray.permute = function permute(f, xs) {
	            // Keep the type of the array
	            var ys = xs.map(function () {
	                return null;
	            });
	            var checkFlags = new Array(xs.length);
	            for (var i = 0; i < xs.length; i++) {
	                var j = f(i);
	                if (j < 0 || j >= xs.length) throw "Not a valid permutation";
	                ys[j] = xs[i];
	                checkFlags[j] = 1;
	            }
	            for (var _i2 = 0; _i2 < xs.length; _i2++) {
	                if (checkFlags[_i2] != 1) throw "Not a valid permutation";
	            }return ys;
	        };
	
	        FArray.removeInPlace = function removeInPlace(item, xs) {
	            var i = xs.indexOf(item);
	            if (i > -1) {
	                xs.splice(i, 1);
	                return true;
	            }
	            return false;
	        };
	
	        FArray.setSlice = function setSlice(target, lower, upper, source) {
	            var length = (upper || target.length - 1) - lower;
	            if (ArrayBuffer.isView(target) && source.length <= length) target.set(source, lower);else for (var i = lower | 0, j = 0; j <= length; i++, j++) {
	                target[i] = source[j];
	            }
	        };
	
	        FArray.sortInPlaceBy = function sortInPlaceBy(f, xs) {
	            var dir = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
	
	            return xs.sort(function (x, y) {
	                x = f(x);
	                y = f(y);
	                return (x < y ? -1 : x == y ? 0 : 1) * dir;
	            });
	        };
	
	        FArray.unzip = function unzip(xs) {
	            var bs = new Array(xs.length),
	                cs = new Array(xs.length);
	            for (var i = 0; i < xs.length; i++) {
	                bs[i] = xs[i][0];
	                cs[i] = xs[i][1];
	            }
	            return Tuple(bs, cs);
	        };
	
	        FArray.unzip3 = function unzip3(xs) {
	            var bs = new Array(xs.length),
	                cs = new Array(xs.length),
	                ds = new Array(xs.length);
	            for (var i = 0; i < xs.length; i++) {
	                bs[i] = xs[i][0];
	                cs[i] = xs[i][1];
	                ds[i] = xs[i][2];
	            }
	            return Tuple3(bs, cs, ds);
	        };
	
	        return FArray;
	    }();
	
	    exports.Array = FArray;
	
	    var List = exports.List = function () {
	        function List(head, tail) {
	            _classCallCheck(this, List);
	
	            this.head = head;
	            this.tail = tail;
	        }
	
	        List.prototype.ToString = function ToString() {
	            return "[" + Array.from(this).map(Util.toString).join("; ") + "]";
	        };
	
	        List.prototype.Equals = function Equals(x) {
	            var iter1 = this[Symbol.iterator](),
	                iter2 = x[Symbol.iterator]();
	            for (var i = 0;; i++) {
	                var cur1 = iter1.next(),
	                    cur2 = iter2.next();
	                if (cur1.done) return cur2.done ? true : false;else if (cur2.done) return false;else if (!Util.equals(cur1.value, cur2.value)) return false;
	            }
	        };
	
	        List.prototype.CompareTo = function CompareTo(x) {
	            var acc = 0;
	            var iter1 = this[Symbol.iterator](),
	                iter2 = x[Symbol.iterator]();
	            for (var i = 0;; i++) {
	                var cur1 = iter1.next(),
	                    cur2 = iter2.next();
	                if (cur1.done) return cur2.done ? acc : -1;else if (cur2.done) return 1;else {
	                    acc = Util.compare(cur1.value, cur2.value);
	                    if (acc != 0) return acc;
	                }
	            }
	        };
	
	        List.ofArray = function ofArray(args, base) {
	            var acc = base || new List();
	            for (var i = args.length - 1; i >= 0; i--) {
	                acc = new List(args[i], acc);
	            }
	            return acc;
	        };
	
	        List.prototype[Symbol.iterator] = function () {
	            var cur = this;
	            return {
	                next: function next() {
	                    var tmp = cur;
	                    cur = cur.tail;
	                    return { done: tmp.tail == null, value: tmp.head };
	                }
	            };
	        };
	
	        List.prototype.append = function append(ys) {
	            return List.append(this, ys);
	        };
	
	        List.append = function append(xs, ys) {
	            return Seq.fold(function (acc, x) {
	                return new List(x, acc);
	            }, ys, List.reverse(xs));
	        };
	
	        List.prototype.choose = function choose(f, xs) {
	            return List.choose(f, this);
	        };
	
	        List.choose = function choose(f, xs) {
	            var r = Seq.fold(function (acc, x) {
	                var y = f(x);
	                return y != null ? new List(y, acc) : acc;
	            }, new List(), xs);
	            return List.reverse(r);
	        };
	
	        List.prototype.collect = function collect(f) {
	            return List.collect(f, this);
	        };
	
	        List.collect = function collect(f, xs) {
	            return Seq.fold(function (acc, x) {
	                return acc.append(f(x));
	            }, new List(), xs);
	        };
	        // TODO: should be xs: Iterable<List<T>>
	
	
	        List.concat = function concat(xs) {
	            return List.collect(function (x) {
	                return x;
	            }, xs);
	        };
	
	        List.prototype.filter = function filter(f) {
	            return List.filter(f, this);
	        };
	
	        List.filter = function filter(f, xs) {
	            return List.reverse(Seq.fold(function (acc, x) {
	                return f(x) ? new List(x, acc) : acc;
	            }, new List(), xs));
	        };
	
	        List.prototype.where = function where(f) {
	            return List.filter(f, this);
	        };
	
	        List.where = function where(f, xs) {
	            return List.filter(f, xs);
	        };
	
	        List.initialize = function initialize(n, f) {
	            if (n < 0) {
	                throw "List length must be non-negative";
	            }
	            var xs = new List();
	            for (var i = 1; i <= n; i++) {
	                xs = new List(f(n - i), xs);
	            }
	            return xs;
	        };
	
	        List.prototype.map = function map(f) {
	            return List.map(f, this);
	        };
	
	        List.map = function map(f, xs) {
	            return List.reverse(Seq.fold(function (acc, x) {
	                return new List(f(x), acc);
	            }, new List(), xs));
	        };
	
	        List.prototype.mapIndexed = function mapIndexed(f) {
	            return List.mapIndexed(f, this);
	        };
	
	        List.mapIndexed = function mapIndexed(f, xs) {
	            return List.reverse(Seq.fold(function (acc, x, i) {
	                return new List(f(i, x), acc);
	            }, new List(), xs));
	        };
	
	        List.prototype.partition = function partition(f) {
	            return List.partition(f, this);
	        };
	
	        List.partition = function partition(f, xs) {
	            return Seq.fold(function (acc, x) {
	                var lacc = acc[0],
	                    racc = acc[1];
	                return f(x) ? Tuple(new List(x, lacc), racc) : Tuple(lacc, new List(x, racc));
	            }, Tuple(new List(), new List()), List.reverse(xs));
	        };
	
	        List.replicate = function replicate(n, x) {
	            return List.initialize(n, function () {
	                return x;
	            });
	        };
	
	        List.prototype.reverse = function reverse() {
	            return List.reverse(this);
	        };
	
	        List.reverse = function reverse(xs) {
	            return Seq.fold(function (acc, x) {
	                return new List(x, acc);
	            }, new List(), xs);
	        };
	
	        List.singleton = function singleton(x) {
	            return new List(x, new List());
	        };
	
	        List.prototype.slice = function slice(lower, upper) {
	            return List.slice(lower, upper, this);
	        };
	
	        List.slice = function slice(lower, upper, xs) {
	            var noLower = lower == null;
	            var noUpper = upper == null;
	            return List.reverse(Seq.fold(function (acc, x, i) {
	                return (noLower || lower <= i) && (noUpper || i <= upper) ? new List(x, acc) : acc;
	            }, new List(), xs));
	        };
	        /* ToDo: instance unzip() */
	
	
	        List.unzip = function unzip(xs) {
	            return Seq.foldBack(function (xy, acc) {
	                return Tuple(new List(xy[0], acc[0]), new List(xy[1], acc[1]));
	            }, xs, Tuple(new List(), new List()));
	        };
	        /* ToDo: instance unzip3() */
	
	
	        List.unzip3 = function unzip3(xs) {
	            return Seq.foldBack(function (xyz, acc) {
	                return Tuple3(new List(xyz[0], acc[0]), new List(xyz[1], acc[1]), new List(xyz[2], acc[2]));
	            }, xs, Tuple3(new List(), new List(), new List()));
	        };
	
	        _createClass(List, [{
	            key: "length",
	            get: function get() {
	                return Seq.fold(function (acc, x) {
	                    return acc + 1;
	                }, 0, this);
	            }
	        }]);
	
	        return List;
	    }();
	
	    Util.setInterfaces(List.prototype, ["System.IEquatable", "System.IComparable"], "Microsoft.FSharp.Collections.FSharpList");
	
	    var Seq = exports.Seq = function () {
	        function Seq() {
	            _classCallCheck(this, Seq);
	        }
	
	        Seq.__failIfNone = function __failIfNone(res) {
	            if (res == null) throw "Seq did not contain any matching element";
	            return res;
	        };
	
	        Seq.toList = function toList(xs) {
	            return Seq.foldBack(function (x, acc) {
	                return new List(x, acc);
	            }, xs, new List());
	        };
	
	        Seq.ofList = function ofList(xs) {
	            return Seq.delay(function () {
	                return Seq.unfold(function (x) {
	                    return x.tail != null ? [x.head, x.tail] : null;
	                }, xs);
	            });
	        };
	
	        Seq.ofArray = function ofArray(xs) {
	            return Seq.delay(function () {
	                return Seq.unfold(function (i) {
	                    return i < xs.length ? [xs[i], i + 1] : null;
	                }, 0);
	            });
	        };
	
	        Seq.append = function append(xs, ys) {
	            return Seq.delay(function () {
	                var firstDone = false;
	                var i = xs[Symbol.iterator]();
	                var iters = Tuple(i, null);
	                return Seq.unfold(function () {
	                    var cur = void 0;
	                    if (!firstDone) {
	                        cur = iters[0].next();
	                        if (!cur.done) {
	                            return [cur.value, iters];
	                        } else {
	                            firstDone = true;
	                            iters = [null, ys[Symbol.iterator]()];
	                        }
	                    }
	                    cur = iters[1].next();
	                    return !cur.done ? [cur.value, iters] : null;
	                }, iters);
	            });
	        };
	
	        Seq.average = function average(xs) {
	            var count = 1;
	            var sum = Seq.reduce(function (acc, x) {
	                count++;
	                return acc + x;
	            }, xs);
	            return sum / count;
	        };
	
	        Seq.averageBy = function averageBy(f, xs) {
	            var count = 1;
	            var sum = Seq.reduce(function (acc, x) {
	                count++;
	                return (count === 2 ? f(acc) : acc) + f(x);
	            }, xs);
	            return sum / count;
	        };
	
	        Seq.countBy = function countBy(f, xs) {
	            return Seq.map(function (kv) {
	                return Tuple(kv[0], Seq.count(kv[1]));
	            }, Seq.groupBy(f, xs));
	        };
	
	        Seq.concat = function concat(xs) {
	            return Seq.delay(function () {
	                var iter = xs[Symbol.iterator]();
	                var output = null;
	                return Seq.unfold(function (innerIter) {
	                    var hasFinished = false;
	                    while (!hasFinished) {
	                        if (innerIter == null) {
	                            var cur = iter.next();
	                            if (!cur.done) {
	                                innerIter = cur.value[Symbol.iterator]();
	                            } else {
	                                hasFinished = true;
	                            }
	                        } else {
	                            var _cur = innerIter.next();
	                            if (!_cur.done) {
	                                output = _cur.value;
	                                hasFinished = true;
	                            } else {
	                                innerIter = null;
	                            }
	                        }
	                    }
	                    return innerIter != null && output != null ? [output, innerIter] : null;
	                }, null);
	            });
	        };
	
	        Seq.collect = function collect(f, xs) {
	            return Seq.concat(Seq.map(f, xs));
	        };
	
	        Seq.choose = function choose(f, xs) {
	            var trySkipToNext = function trySkipToNext(iter) {
	                var cur = iter.next();
	                if (!cur.done) {
	                    var y = f(cur.value);
	                    return y != null ? Tuple(y, iter) : trySkipToNext(iter);
	                }
	                return void 0;
	            };
	            return Seq.delay(function () {
	                return Seq.unfold(function (iter) {
	                    return trySkipToNext(iter);
	                }, xs[Symbol.iterator]());
	            });
	        };
	
	        Seq.compareWith = function compareWith(f, xs, ys) {
	            var nonZero = Seq.tryFind(function (i) {
	                return i != 0;
	            }, Seq.map2(function (x, y) {
	                return f(x, y);
	            }, xs, ys));
	            return nonZero != null ? nonZero : Seq.count(xs) - Seq.count(ys);
	        };
	
	        Seq.delay = function delay(f) {
	            return _defineProperty({}, Symbol.iterator, function () {
	                return f()[Symbol.iterator]();
	            });
	        };
	
	        Seq.distinctBy = function distinctBy(f, xs) {
	            return Seq.choose(function (tup) {
	                return tup[0];
	            }, Seq.scan(function (tup, x) {
	                var acc = tup[1];
	                var k = f(x);
	                return acc.has(k) ? Tuple(null, acc) : Tuple(x, FSet.add(k, acc));
	            }, Tuple(null, FSet.create()), xs));
	        };
	
	        Seq.distinct = function distinct(xs) {
	            return Seq.distinctBy(function (x) {
	                return x;
	            }, xs);
	        };
	
	        Seq.empty = function empty() {
	            return Seq.unfold(function () {
	                return void 0;
	            });
	        };
	
	        Seq.enumerateWhile = function enumerateWhile(cond, xs) {
	            return Seq.concat(Seq.unfold(function () {
	                return cond() ? [xs, true] : null;
	            }));
	        };
	
	        Seq.enumerateThenFinally = function enumerateThenFinally(xs, finalFn) {
	            return Seq.delay(function () {
	                var iter = void 0;
	                try {
	                    iter = xs[Symbol.iterator]();
	                } finally {
	                    finalFn();
	                }
	                return Seq.unfold(function (iter) {
	                    try {
	                        var cur = iter.next();
	                        return !cur.done ? [cur.value, iter] : null;
	                    } finally {
	                        finalFn();
	                    }
	                    return void 0;
	                }, iter);
	            });
	        };
	
	        Seq.enumerateUsing = function enumerateUsing(disp, work) {
	            var isDisposed = false;
	            var disposeOnce = function disposeOnce() {
	                if (!isDisposed) {
	                    isDisposed = true;
	                    disp.Dispose();
	                }
	            };
	            try {
	                return Seq.enumerateThenFinally(work(disp), disposeOnce);
	            } finally {
	                disposeOnce();
	            }
	            return void 0;
	        };
	
	        Seq.exactlyOne = function exactlyOne(xs) {
	            var iter = xs[Symbol.iterator]();
	            var fst = iter.next();
	            if (fst.done) throw "Seq was empty";
	            var snd = iter.next();
	            if (!snd.done) throw "Seq had multiple items";
	            return fst.value;
	        };
	
	        Seq.except = function except(itemsToExclude, source) {
	            var exclusionItems = Array.from(itemsToExclude);
	            var testIsNotInExclusionItems = function testIsNotInExclusionItems(element) {
	                return !exclusionItems.some(function (excludedItem) {
	                    return Util.equals(excludedItem, element);
	                });
	            };
	            return Seq.filter(testIsNotInExclusionItems, source);
	        };
	
	        Seq.exists = function exists(f, xs) {
	            function aux(iter) {
	                var cur = iter.next();
	                return !cur.done && (f(cur.value) || aux(iter));
	            }
	            return aux(xs[Symbol.iterator]());
	        };
	
	        Seq.exists2 = function exists2(f, xs, ys) {
	            function aux(iter1, iter2) {
	                var cur1 = iter1.next(),
	                    cur2 = iter2.next();
	                return !cur1.done && !cur2.done && (f(cur1.value, cur2.value) || aux(iter1, iter2));
	            }
	            return aux(xs[Symbol.iterator](), ys[Symbol.iterator]());
	        };
	
	        Seq.filter = function filter(f, xs) {
	            function trySkipToNext(iter) {
	                var cur = iter.next();
	                if (!cur.done) return f(cur.value) ? [cur.value, iter] : trySkipToNext(iter);
	                return void 0;
	            }
	            return Seq.delay(function () {
	                return Seq.unfold(trySkipToNext, xs[Symbol.iterator]());
	            });
	        };
	
	        Seq.where = function where(f, xs) {
	            return Seq.filter(f, xs);
	        };
	
	        Seq.fold = function fold(f, acc, xs) {
	            if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {
	                return xs.reduce(f, acc);
	            } else {
	                var cur = void 0;
	                for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                    cur = iter.next();
	                    if (cur.done) break;
	                    acc = f(acc, cur.value, i);
	                }
	                return acc;
	            }
	        };
	
	        Seq.foldBack = function foldBack(f, xs, acc) {
	            var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);
	            for (var i = arr.length - 1; i >= 0; i--) {
	                acc = f(arr[i], acc, i);
	            }
	            return acc;
	        };
	
	        Seq.fold2 = function fold2(f, acc, xs, ys) {
	            var iter1 = xs[Symbol.iterator](),
	                iter2 = ys[Symbol.iterator]();
	            var cur1 = void 0,
	                cur2 = void 0;
	            for (var i = 0;; i++) {
	                cur1 = iter1.next();
	                cur2 = iter2.next();
	                if (cur1.done || cur2.done) {
	                    break;
	                }
	                acc = f(acc, cur1.value, cur2.value, i);
	            }
	            return acc;
	        };
	
	        Seq.foldBack2 = function foldBack2(f, xs, ys, acc) {
	            var ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);
	            var ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);
	            for (var i = ar1.length - 1; i >= 0; i--) {
	                acc = f(ar1[i], ar2[i], acc, i);
	            }
	            return acc;
	        };
	
	        Seq.forAll = function forAll(f, xs) {
	            return Seq.fold(function (acc, x) {
	                return acc && f(x);
	            }, true, xs);
	        };
	
	        Seq.forAll2 = function forAll2(f, xs, ys) {
	            return Seq.fold2(function (acc, x, y) {
	                return acc && f(x, y);
	            }, true, xs, ys);
	        };
	        // TODO: Should return a Iterable<Tuple<K, Iterable<T>>> instead of a Map<K, Iterable<T>>
	        // Seq.groupBy : ('T -> 'Key) -> seq<'T> -> seq<'Key * seq<'T>>
	
	
	        Seq.groupBy = function groupBy(f, xs) {
	            return Seq.fold(function (acc, x) {
	                var k = f(x),
	                    vs = acc.get(k);
	                return vs != null ? acc.set(k, new List(x, vs)) : acc.set(k, List.singleton(x));
	            }, new Map(), xs);
	        };
	
	        Seq.tryHead = function tryHead(xs) {
	            var iter = xs[Symbol.iterator]();
	            var cur = iter.next();
	            return cur.done ? null : cur.value;
	        };
	
	        Seq.head = function head(xs) {
	            return Seq.__failIfNone(Seq.tryHead(xs));
	        };
	
	        Seq.initialize = function initialize(n, f) {
	            return Seq.delay(function () {
	                return Seq.unfold(function (i) {
	                    return i < n ? [f(i), i + 1] : null;
	                }, 0);
	            });
	        };
	
	        Seq.initializeInfinite = function initializeInfinite(f) {
	            return Seq.delay(function () {
	                return Seq.unfold(function (i) {
	                    return [f(i), i + 1];
	                }, 0);
	            });
	        };
	
	        Seq.tryItem = function tryItem(i, xs) {
	            if (i < 0) return null;
	            if (Array.isArray(xs) || ArrayBuffer.isView(xs)) return i < xs.length ? xs[i] : null;
	            for (var j = 0, iter = xs[Symbol.iterator]();; j++) {
	                var cur = iter.next();
	                if (cur.done) return null;
	                if (j === i) return cur.value;
	            }
	        };
	
	        Seq.item = function item(i, xs) {
	            return Seq.__failIfNone(Seq.tryItem(i, xs));
	        };
	
	        Seq.iterate = function iterate(f, xs) {
	            Seq.fold(function (_, x) {
	                return f(x);
	            }, null, xs);
	        };
	
	        Seq.iterate2 = function iterate2(f, xs, ys) {
	            Seq.fold2(function (_, x, y) {
	                return f(x, y);
	            }, null, xs, ys);
	        };
	
	        Seq.iterateIndexed = function iterateIndexed(f, xs) {
	            Seq.fold(function (_, x, i) {
	                return f(i, x);
	            }, null, xs);
	        };
	
	        Seq.iterateIndexed2 = function iterateIndexed2(f, xs, ys) {
	            Seq.fold2(function (_, x, y, i) {
	                return f(i, x, y);
	            }, null, xs, ys);
	        };
	
	        Seq.isEmpty = function isEmpty(xs) {
	            var i = xs[Symbol.iterator]();
	            return i.next().done;
	        };
	
	        Seq.tryLast = function tryLast(xs) {
	            try {
	                return Seq.reduce(function (_, x) {
	                    return x;
	                }, xs);
	            } catch (err) {
	                return null;
	            }
	        };
	
	        Seq.last = function last(xs) {
	            return Seq.__failIfNone(Seq.tryLast(xs));
	        };
	        // A static 'length' method causes problems in JavaScript -- https://github.com/Microsoft/TypeScript/issues/442
	
	
	        Seq.count = function count(xs) {
	            return Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.length : Seq.fold(function (acc, x) {
	                return acc + 1;
	            }, 0, xs);
	        };
	
	        Seq.map = function map(f, xs) {
	            return Seq.delay(function () {
	                return Seq.unfold(function (iter) {
	                    var cur = iter.next();
	                    return !cur.done ? [f(cur.value), iter] : null;
	                }, xs[Symbol.iterator]());
	            });
	        };
	
	        Seq.mapIndexed = function mapIndexed(f, xs) {
	            return Seq.delay(function () {
	                var i = 0;
	                return Seq.unfold(function (iter) {
	                    var cur = iter.next();
	                    return !cur.done ? [f(i++, cur.value), iter] : null;
	                }, xs[Symbol.iterator]());
	            });
	        };
	
	        Seq.map2 = function map2(f, xs, ys) {
	            return Seq.delay(function () {
	                var iter1 = xs[Symbol.iterator]();
	                var iter2 = ys[Symbol.iterator]();
	                return Seq.unfold(function () {
	                    var cur1 = iter1.next(),
	                        cur2 = iter2.next();
	                    return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;
	                });
	            });
	        };
	
	        Seq.mapIndexed2 = function mapIndexed2(f, xs, ys) {
	            return Seq.delay(function () {
	                var i = 0;
	                var iter1 = xs[Symbol.iterator]();
	                var iter2 = ys[Symbol.iterator]();
	                return Seq.unfold(function () {
	                    var cur1 = iter1.next(),
	                        cur2 = iter2.next();
	                    return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;
	                });
	            });
	        };
	
	        Seq.map3 = function map3(f, xs, ys, zs) {
	            return Seq.delay(function () {
	                var iter1 = xs[Symbol.iterator]();
	                var iter2 = ys[Symbol.iterator]();
	                var iter3 = zs[Symbol.iterator]();
	                return Seq.unfold(function () {
	                    var cur1 = iter1.next(),
	                        cur2 = iter2.next(),
	                        cur3 = iter3.next();
	                    return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;
	                });
	            });
	        };
	
	        Seq.mapFold = function mapFold(f, acc, xs) {
	            var result = [];
	            var r = void 0;
	            var cur = void 0;
	            for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                cur = iter.next();
	                if (cur.done) break;
	
	                var _f = f(acc, cur.value);
	
	                var _f2 = _slicedToArray(_f, 2);
	
	                r = _f2[0];
	                acc = _f2[1];
	
	                result.push(r);
	            }
	            return Tuple(result, acc);
	        };
	
	        Seq.mapFoldBack = function mapFoldBack(f, xs, acc) {
	            var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);
	            var result = [];
	            var r = void 0;
	            for (var i = arr.length - 1; i >= 0; i--) {
	                var _f3 = f(arr[i], acc);
	
	                var _f4 = _slicedToArray(_f3, 2);
	
	                r = _f4[0];
	                acc = _f4[1];
	
	                result.push(r);
	            }
	            return Tuple(result, acc);
	        };
	
	        Seq.max = function max(xs) {
	            return Seq.reduce(function (acc, x) {
	                return Util.compare(acc, x) === 1 ? acc : x;
	            }, xs);
	        };
	
	        Seq.maxBy = function maxBy(f, xs) {
	            return Seq.reduce(function (acc, x) {
	                return Util.compare(f(acc), f(x)) === 1 ? acc : x;
	            }, xs);
	        };
	
	        Seq.min = function min(xs) {
	            return Seq.reduce(function (acc, x) {
	                return Util.compare(acc, x) === -1 ? acc : x;
	            }, xs);
	        };
	
	        Seq.minBy = function minBy(f, xs) {
	            return Seq.reduce(function (acc, x) {
	                return Util.compare(f(acc), f(x)) === -1 ? acc : x;
	            }, xs);
	        };
	
	        Seq.pairwise = function pairwise(xs) {
	            return Seq.skip(1, Seq.scan(function (last, next) {
	                return Tuple(last[1], next);
	            }, Tuple(0, 0), xs));
	        };
	
	        Seq.permute = function permute(f, xs) {
	            return Seq.ofArray(FArray.permute(f, Array.from(xs)));
	        };
	
	        Seq.rangeStep = function rangeStep(first, step, last) {
	            if (step === 0) throw "Step cannot be 0";
	            return Seq.unfold(function (x) {
	                return step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null;
	            }, first);
	        };
	
	        Seq.rangeChar = function rangeChar(first, last) {
	            return Seq.unfold(function (x) {
	                return x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null;
	            }, first);
	        };
	
	        Seq.range = function range(first, last) {
	            return Seq.rangeStep(first, 1, last);
	        };
	
	        Seq.readOnly = function readOnly(xs) {
	            return Seq.map(function (x) {
	                return x;
	            }, xs);
	        };
	
	        Seq.reduce = function reduce(f, xs) {
	            if (Array.isArray(xs) || ArrayBuffer.isView(xs)) return xs.reduce(f);
	            var iter = xs[Symbol.iterator]();
	            var cur = iter.next();
	            if (cur.done) throw "Seq was empty";
	            var acc = cur.value;
	            for (;;) {
	                cur = iter.next();
	                if (cur.done) break;
	                acc = f(acc, cur.value);
	            }
	            return acc;
	        };
	
	        Seq.reduceBack = function reduceBack(f, xs) {
	            var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);
	            if (ar.length === 0) throw "Seq was empty";
	            var acc = ar[ar.length - 1];
	            for (var i = ar.length - 2; i >= 0; i--) {
	                acc = f(ar[i], acc, i);
	            }return acc;
	        };
	
	        Seq.replicate = function replicate(n, x) {
	            return Seq.initialize(n, function () {
	                return x;
	            });
	        };
	
	        Seq.reverse = function reverse(xs) {
	            var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);
	            return Seq.ofArray(ar.reverse());
	        };
	
	        Seq.scan = function scan(f, seed, xs) {
	            return Seq.delay(function () {
	                var iter = xs[Symbol.iterator]();
	                return Seq.unfold(function (acc) {
	                    if (acc == null) return [seed, seed];
	                    var cur = iter.next();
	                    if (!cur.done) {
	                        acc = f(acc, cur.value);
	                        return [acc, acc];
	                    }
	                    return void 0;
	                }, null);
	            });
	        };
	
	        Seq.scanBack = function scanBack(f, xs, seed) {
	            return Seq.reverse(Seq.scan(function (acc, x) {
	                return f(x, acc);
	            }, seed, Seq.reverse(xs)));
	        };
	
	        Seq.singleton = function singleton(x) {
	            return Seq.unfold(function (x) {
	                return x != null ? [x, null] : null;
	            }, x);
	        };
	
	        Seq.skip = function skip(n, xs) {
	            return _defineProperty({}, Symbol.iterator, function () {
	                var iter = xs[Symbol.iterator]();
	                for (var i = 1; i <= n; i++) {
	                    if (iter.next().done) throw "Seq has not enough elements";
	                }return iter;
	            });
	        };
	
	        Seq.skipWhile = function skipWhile(f, xs) {
	            return Seq.delay(function () {
	                var hasPassed = false;
	                return Seq.filter(function (x) {
	                    return hasPassed || (hasPassed = !f(x));
	                }, xs);
	            });
	        };
	
	        Seq.sortWith = function sortWith(f, xs) {
	            var ys = Array.from(xs);
	            return Seq.ofArray(ys.sort(f));
	        };
	
	        Seq.sum = function sum(xs) {
	            return Seq.fold(function (acc, x) {
	                return acc + x;
	            }, 0, xs);
	        };
	
	        Seq.sumBy = function sumBy(f, xs) {
	            return Seq.fold(function (acc, x) {
	                return acc + f(x);
	            }, 0, xs);
	        };
	
	        Seq.tail = function tail(xs) {
	            var iter = xs[Symbol.iterator]();
	            var cur = iter.next();
	            if (cur.done) throw "Seq was empty";
	            return _defineProperty({}, Symbol.iterator, function () {
	                return iter;
	            });
	        };
	
	        Seq.take = function take(n, xs) {
	            var truncate = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
	
	            return Seq.delay(function () {
	                var iter = xs[Symbol.iterator]();
	                return Seq.unfold(function (i) {
	                    if (i < n) {
	                        var cur = iter.next();
	                        if (!cur.done) return [cur.value, i + 1];
	                        if (!truncate) throw "Seq has not enough elements";
	                    }
	                    return void 0;
	                }, 0);
	            });
	        };
	
	        Seq.truncate = function truncate(n, xs) {
	            return Seq.take(n, xs, true);
	        };
	
	        Seq.takeWhile = function takeWhile(f, xs) {
	            return Seq.delay(function () {
	                var iter = xs[Symbol.iterator]();
	                return Seq.unfold(function (i) {
	                    var cur = iter.next();
	                    if (!cur.done && f(cur.value)) return [cur.value, null];
	                    return void 0;
	                }, 0);
	            });
	        };
	
	        Seq.tryFind = function tryFind(f, xs, defaultValue) {
	            for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                var cur = iter.next();
	                if (cur.done) return defaultValue === void 0 ? null : defaultValue;
	                if (f(cur.value, i)) return cur.value;
	            }
	        };
	
	        Seq.find = function find(f, xs) {
	            return Seq.__failIfNone(Seq.tryFind(f, xs));
	        };
	
	        Seq.tryFindBack = function tryFindBack(f, xs, defaultValue) {
	            var match = null;
	            for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                var cur = iter.next();
	                if (cur.done) return match === null ? defaultValue === void 0 ? null : defaultValue : match;
	                if (f(cur.value, i)) match = cur.value;
	            }
	        };
	
	        Seq.findBack = function findBack(f, xs) {
	            return Seq.__failIfNone(Seq.tryFindBack(f, xs));
	        };
	
	        Seq.tryFindIndex = function tryFindIndex(f, xs) {
	            for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                var cur = iter.next();
	                if (cur.done) return null;
	                if (f(cur.value, i)) return i;
	            }
	        };
	
	        Seq.findIndex = function findIndex(f, xs) {
	            return Seq.__failIfNone(Seq.tryFindIndex(f, xs));
	        };
	
	        Seq.tryFindIndexBack = function tryFindIndexBack(f, xs) {
	            var match = -1;
	            for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                var cur = iter.next();
	                if (cur.done) return match === -1 ? null : match;
	                if (f(cur.value, i)) match = i;
	            }
	        };
	
	        Seq.findIndexBack = function findIndexBack(f, xs) {
	            return Seq.__failIfNone(Seq.tryFindIndexBack(f, xs));
	        };
	
	        Seq.tryPick = function tryPick(f, xs) {
	            for (var i = 0, iter = xs[Symbol.iterator]();; i++) {
	                var cur = iter.next();
	                if (cur.done) break;
	                var y = f(cur.value, i);
	                if (y != null) return y;
	            }
	            return void 0;
	        };
	
	        Seq.pick = function pick(f, xs) {
	            return Seq.__failIfNone(Seq.tryPick(f, xs));
	        };
	
	        Seq.unfold = function unfold(f, acc) {
	            return _defineProperty({}, Symbol.iterator, function () {
	                return {
	                    next: function next() {
	                        var res = f(acc);
	                        if (res != null) {
	                            acc = res[1];
	                            return { done: false, value: res[0] };
	                        }
	                        return { done: true };
	                    }
	                };
	            });
	        };
	
	        Seq.zip = function zip(xs, ys) {
	            return Seq.map2(function (x, y) {
	                return [x, y];
	            }, xs, ys);
	        };
	
	        Seq.zip3 = function zip3(xs, ys, zs) {
	            return Seq.map3(function (x, y, z) {
	                return [x, y, z];
	            }, xs, ys, zs);
	        };
	
	        return Seq;
	    }();
	
	    var SetTree = function () {
	        function SetTree(caseName, fields) {
	            _classCallCheck(this, SetTree);
	
	            this.Case = caseName;
	            this.Fields = fields;
	        }
	
	        SetTree.countAux = function countAux(s, acc) {
	            return s.Case === "SetOne" ? acc + 1 : s.Case === "SetEmpty" ? acc : SetTree.countAux(s.Fields[1], SetTree.countAux(s.Fields[2], acc + 1));
	        };
	
	        SetTree.count = function count(s) {
	            return SetTree.countAux(s, 0);
	        };
	
	        SetTree.SetOne = function SetOne(n) {
	            return new SetTree("SetOne", [n]);
	        };
	
	        SetTree.SetNode = function SetNode(x, l, r, h) {
	            return new SetTree("SetNode", [x, l, r, h]);
	        };
	
	        SetTree.height = function height(t) {
	            return t.Case === "SetOne" ? 1 : t.Case === "SetNode" ? t.Fields[3] : 0;
	        };
	
	        SetTree.mk = function mk(l, k, r) {
	            var matchValue = [l, r];
	            var $target1 = function $target1() {
	                var hl = SetTree.height(l);
	                var hr = SetTree.height(r);
	                var m = hl < hr ? hr : hl;
	                return SetTree.SetNode(k, l, r, m + 1);
	            };
	            if (matchValue[0].Case === "SetEmpty") {
	                if (matchValue[1].Case === "SetEmpty") {
	                    return SetTree.SetOne(k);
	                } else {
	                    return $target1();
	                }
	            } else {
	                return $target1();
	            }
	        };
	
	        SetTree.rebalance = function rebalance(t1, k, t2) {
	            var t1h = SetTree.height(t1);
	            var t2h = SetTree.height(t2);
	            if (t2h > t1h + SetTree.tolerance) {
	                if (t2.Case === "SetNode") {
	                    if (SetTree.height(t2.Fields[1]) > t1h + 1) {
	                        if (t2.Fields[1].Case === "SetNode") {
	                            return SetTree.mk(SetTree.mk(t1, k, t2.Fields[1].Fields[1]), t2.Fields[1].Fields[0], SetTree.mk(t2.Fields[1].Fields[2], t2.Fields[0], t2.Fields[2]));
	                        } else {
	                            throw "rebalance";
	                        }
	                    } else {
	                        return SetTree.mk(SetTree.mk(t1, k, t2.Fields[1]), t2.Fields[0], t2.Fields[2]);
	                    }
	                } else {
	                    throw "rebalance";
	                }
	            } else {
	                if (t1h > t2h + SetTree.tolerance) {
	                    if (t1.Case === "SetNode") {
	                        if (SetTree.height(t1.Fields[2]) > t2h + 1) {
	                            if (t1.Fields[2].Case === "SetNode") {
	                                return SetTree.mk(SetTree.mk(t1.Fields[1], t1.Fields[0], t1.Fields[2].Fields[1]), t1.Fields[2].Fields[0], SetTree.mk(t1.Fields[2].Fields[2], k, t2));
	                            } else {
	                                throw "rebalance";
	                            }
	                        } else {
	                            return SetTree.mk(t1.Fields[1], t1.Fields[0], SetTree.mk(t1.Fields[2], k, t2));
	                        }
	                    } else {
	                        throw "rebalance";
	                    }
	                } else {
	                    return SetTree.mk(t1, k, t2);
	                }
	            }
	        };
	
	        SetTree.add = function add(comparer, k, t) {
	            return t.Case === "SetOne" ? function () {
	                var c = comparer.Compare(k, t.Fields[0]);
	                if (c < 0) {
	                    return SetTree.SetNode(k, new SetTree("SetEmpty", []), t, 2);
	                } else {
	                    if (c === 0) {
	                        return t;
	                    } else {
	                        return SetTree.SetNode(k, t, new SetTree("SetEmpty", []), 2);
	                    }
	                }
	            }() : t.Case === "SetEmpty" ? SetTree.SetOne(k) : function () {
	                var c = comparer.Compare(k, t.Fields[0]);
	                if (c < 0) {
	                    return SetTree.rebalance(SetTree.add(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);
	                } else {
	                    if (c === 0) {
	                        return t;
	                    } else {
	                        return SetTree.rebalance(t.Fields[1], t.Fields[0], SetTree.add(comparer, k, t.Fields[2]));
	                    }
	                }
	            }();
	        };
	
	        SetTree.balance = function balance(comparer, t1, k, t2) {
	            var matchValue = [t1, t2];
	            var $target1 = function $target1(t1_1) {
	                return SetTree.add(comparer, k, t1_1);
	            };
	            var $target2 = function $target2(k1, t2_1) {
	                return SetTree.add(comparer, k, SetTree.add(comparer, k1, t2_1));
	            };
	            if (matchValue[0].Case === "SetOne") {
	                if (matchValue[1].Case === "SetEmpty") {
	                    return $target1(matchValue[0]);
	                } else {
	                    if (matchValue[1].Case === "SetOne") {
	                        return $target2(matchValue[0].Fields[0], matchValue[1]);
	                    } else {
	                        return $target2(matchValue[0].Fields[0], matchValue[1]);
	                    }
	                }
	            } else {
	                if (matchValue[0].Case === "SetNode") {
	                    if (matchValue[1].Case === "SetOne") {
	                        var k2 = matchValue[1].Fields[0];
	                        var t1_1 = matchValue[0];
	                        return SetTree.add(comparer, k, SetTree.add(comparer, k2, t1_1));
	                    } else {
	                        if (matchValue[1].Case === "SetNode") {
	                            var h1 = matchValue[0].Fields[3];
	                            var h2 = matchValue[1].Fields[3];
	                            var k1 = matchValue[0].Fields[0];
	                            var k2 = matchValue[1].Fields[0];
	                            var t11 = matchValue[0].Fields[1];
	                            var t12 = matchValue[0].Fields[2];
	                            var t21 = matchValue[1].Fields[1];
	                            var t22 = matchValue[1].Fields[2];
	                            if (h1 + SetTree.tolerance < h2) {
	                                return SetTree.rebalance(SetTree.balance(comparer, t1, k, t21), k2, t22);
	                            } else {
	                                if (h2 + SetTree.tolerance < h1) {
	                                    return SetTree.rebalance(t11, k1, SetTree.balance(comparer, t12, k, t2));
	                                } else {
	                                    return SetTree.mk(t1, k, t2);
	                                }
	                            }
	                        } else {
	                            return $target1(matchValue[0]);
	                        }
	                    }
	                } else {
	                    var t2_1 = matchValue[1];
	                    return SetTree.add(comparer, k, t2_1);
	                }
	            }
	        };
	
	        SetTree.split = function split(comparer, pivot, t) {
	            return t.Case === "SetOne" ? function () {
	                var c = comparer.Compare(t.Fields[0], pivot);
	                if (c < 0) {
	                    return [t, false, new SetTree("SetEmpty", [])];
	                } else {
	                    if (c === 0) {
	                        return [new SetTree("SetEmpty", []), true, new SetTree("SetEmpty", [])];
	                    } else {
	                        return [new SetTree("SetEmpty", []), false, t];
	                    }
	                }
	            }() : t.Case === "SetEmpty" ? [new SetTree("SetEmpty", []), false, new SetTree("SetEmpty", [])] : function () {
	                var c = comparer.Compare(pivot, t.Fields[0]);
	                if (c < 0) {
	                    var patternInput = SetTree.split(comparer, pivot, t.Fields[1]);
	                    var t11Lo = patternInput[0];
	                    var t11Hi = patternInput[2];
	                    var havePivot = patternInput[1];
	                    return [t11Lo, havePivot, SetTree.balance(comparer, t11Hi, t.Fields[0], t.Fields[2])];
	                } else {
	                    if (c === 0) {
	                        return [t.Fields[1], true, t.Fields[2]];
	                    } else {
	                        var patternInput = SetTree.split(comparer, pivot, t.Fields[2]);
	                        var t12Lo = patternInput[0];
	                        var t12Hi = patternInput[2];
	                        var havePivot = patternInput[1];
	                        return [SetTree.balance(comparer, t.Fields[1], t.Fields[0], t12Lo), havePivot, t12Hi];
	                    }
	                }
	            }();
	        };
	
	        SetTree.spliceOutSuccessor = function spliceOutSuccessor(t) {
	            return t.Case === "SetOne" ? [t.Fields[0], new SetTree("SetEmpty", [])] : t.Case === "SetNode" ? t.Fields[1].Case === "SetEmpty" ? [t.Fields[0], t.Fields[2]] : function () {
	                var patternInput = SetTree.spliceOutSuccessor(t.Fields[1]);
	                var l_ = patternInput[1];
	                var k3 = patternInput[0];
	                return [k3, SetTree.mk(l_, t.Fields[0], t.Fields[2])];
	            }() : function () {
	                throw "internal error: Map.spliceOutSuccessor";
	            }();
	        };
	
	        SetTree.remove = function remove(comparer, k, t) {
	            return t.Case === "SetOne" ? function () {
	                var c = comparer.Compare(k, t.Fields[0]);
	                if (c === 0) {
	                    return new SetTree("SetEmpty", []);
	                } else {
	                    return t;
	                }
	            }() : t.Case === "SetNode" ? function () {
	                var c = comparer.Compare(k, t.Fields[0]);
	                if (c < 0) {
	                    return SetTree.rebalance(SetTree.remove(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);
	                } else {
	                    if (c === 0) {
	                        var matchValue = [t.Fields[1], t.Fields[2]];
	                        if (matchValue[0].Case === "SetEmpty") {
	                            return t.Fields[2];
	                        } else {
	                            if (matchValue[1].Case === "SetEmpty") {
	                                return t.Fields[1];
	                            } else {
	                                var patternInput = SetTree.spliceOutSuccessor(t.Fields[2]);
	                                var sk = patternInput[0];
	                                var r_ = patternInput[1];
	                                return SetTree.mk(t.Fields[1], sk, r_);
	                            }
	                        }
	                    } else {
	                        return SetTree.rebalance(t.Fields[1], t.Fields[0], SetTree.remove(comparer, k, t.Fields[2]));
	                    }
	                }
	            }() : t;
	        };
	
	        SetTree.mem = function mem(comparer, k, t) {
	            return t.Case === "SetOne" ? comparer.Compare(k, t.Fields[0]) === 0 : t.Case === "SetEmpty" ? false : function () {
	                var c = comparer.Compare(k, t.Fields[0]);
	                if (c < 0) {
	                    return SetTree.mem(comparer, k, t.Fields[1]);
	                } else {
	                    if (c === 0) {
	                        return true;
	                    } else {
	                        return SetTree.mem(comparer, k, t.Fields[2]);
	                    }
	                }
	            }();
	        };
	
	        SetTree.iter = function iter(f, t) {
	            if (t.Case === "SetOne") {
	                f(t.Fields[0]);
	            } else {
	                if (t.Case === "SetEmpty") {} else {
	                    SetTree.iter(f, t.Fields[1]);
	                    f(t.Fields[0]);
	                    SetTree.iter(f, t.Fields[2]);
	                }
	            }
	        };
	
	        SetTree.foldBack = function foldBack(f, m, x) {
	            return m.Case === "SetOne" ? f(m.Fields[0], x) : m.Case === "SetEmpty" ? x : SetTree.foldBack(f, m.Fields[1], f(m.Fields[0], SetTree.foldBack(f, m.Fields[2], x)));
	        };
	
	        SetTree.fold = function fold(f, x, m) {
	            return m.Case === "SetOne" ? f(x, m.Fields[0]) : m.Case === "SetEmpty" ? x : function () {
	                var x_1 = SetTree.fold(f, x, m.Fields[1]);
	                var x_2 = f(x_1, m.Fields[0]);
	                return SetTree.fold(f, x_2, m.Fields[2]);
	            }();
	        };
	
	        SetTree.forall = function forall(f, m) {
	            return m.Case === "SetOne" ? f(m.Fields[0]) : m.Case === "SetEmpty" ? true : (f(m.Fields[0]) ? SetTree.forall(f, m.Fields[1]) : false) ? SetTree.forall(f, m.Fields[2]) : false;
	        };
	
	        SetTree.exists = function exists(f, m) {
	            return m.Case === "SetOne" ? f(m.Fields[0]) : m.Case === "SetEmpty" ? false : (f(m.Fields[0]) ? true : SetTree.exists(f, m.Fields[1])) ? true : SetTree.exists(f, m.Fields[2]);
	        };
	
	        SetTree.isEmpty = function isEmpty(m) {
	            return m.Case === "SetEmpty" ? true : false;
	        };
	
	        SetTree.subset = function subset(comparer, a, b) {
	            return SetTree.forall(function (x) {
	                return SetTree.mem(comparer, x, b);
	            }, a);
	        };
	
	        SetTree.psubset = function psubset(comparer, a, b) {
	            return SetTree.forall(function (x) {
	                return SetTree.mem(comparer, x, b);
	            }, a) ? SetTree.exists(function (x) {
	                return !SetTree.mem(comparer, x, a);
	            }, b) : false;
	        };
	
	        SetTree.filterAux = function filterAux(comparer, f, s, acc) {
	            return s.Case === "SetOne" ? f(s.Fields[0]) ? SetTree.add(comparer, s.Fields[0], acc) : acc : s.Case === "SetEmpty" ? acc : function () {
	                var acc_1 = f(s.Fields[0]) ? SetTree.add(comparer, s.Fields[0], acc) : acc;
	                return SetTree.filterAux(comparer, f, s.Fields[1], SetTree.filterAux(comparer, f, s.Fields[2], acc_1));
	            }();
	        };
	
	        SetTree.filter = function filter(comparer, f, s) {
	            return SetTree.filterAux(comparer, f, s, new SetTree("SetEmpty", []));
	        };
	
	        SetTree.diffAux = function diffAux(comparer, m, acc) {
	            return m.Case === "SetOne" ? SetTree.remove(comparer, m.Fields[0], acc) : m.Case === "SetEmpty" ? acc : SetTree.diffAux(comparer, m.Fields[1], SetTree.diffAux(comparer, m.Fields[2], SetTree.remove(comparer, m.Fields[0], acc)));
	        };
	
	        SetTree.diff = function diff(comparer, a, b) {
	            return SetTree.diffAux(comparer, b, a);
	        };
	
	        SetTree.union = function union(comparer, t1, t2) {
	            var matchValue = [t1, t2];
	            var $target2 = function $target2(t) {
	                return t;
	            };
	            var $target3 = function $target3(k1, t2_1) {
	                return SetTree.add(comparer, k1, t2_1);
	            };
	            if (matchValue[0].Case === "SetEmpty") {
	                var t = matchValue[1];
	                return t;
	            } else {
	                if (matchValue[0].Case === "SetOne") {
	                    if (matchValue[1].Case === "SetEmpty") {
	                        return $target2(matchValue[0]);
	                    } else {
	                        if (matchValue[1].Case === "SetOne") {
	                            return $target3(matchValue[0].Fields[0], matchValue[1]);
	                        } else {
	                            return $target3(matchValue[0].Fields[0], matchValue[1]);
	                        }
	                    }
	                } else {
	                    if (matchValue[1].Case === "SetEmpty") {
	                        return $target2(matchValue[0]);
	                    } else {
	                        if (matchValue[1].Case === "SetOne") {
	                            var k2 = matchValue[1].Fields[0];
	                            var t1_1 = matchValue[0];
	                            return SetTree.add(comparer, k2, t1_1);
	                        } else {
	                            var h1 = matchValue[0].Fields[3];
	                            var h2 = matchValue[1].Fields[3];
	                            var k1 = matchValue[0].Fields[0];
	                            var k2 = matchValue[1].Fields[0];
	                            var t11 = matchValue[0].Fields[1];
	                            var t12 = matchValue[0].Fields[2];
	                            var t21 = matchValue[1].Fields[1];
	                            var t22 = matchValue[1].Fields[2];
	                            if (h1 > h2) {
	                                var patternInput = SetTree.split(comparer, k1, t2);
	                                var lo = patternInput[0];
	                                var hi = patternInput[2];
	                                return SetTree.balance(comparer, SetTree.union(comparer, t11, lo), k1, SetTree.union(comparer, t12, hi));
	                            } else {
	                                var patternInput = SetTree.split(comparer, k2, t1);
	                                var lo = patternInput[0];
	                                var hi = patternInput[2];
	                                return SetTree.balance(comparer, SetTree.union(comparer, t21, lo), k2, SetTree.union(comparer, t22, hi));
	                            }
	                        }
	                    }
	                }
	            }
	        };
	
	        SetTree.intersectionAux = function intersectionAux(comparer, b, m, acc) {
	            return m.Case === "SetOne" ? SetTree.mem(comparer, m.Fields[0], b) ? SetTree.add(comparer, m.Fields[0], acc) : acc : m.Case === "SetEmpty" ? acc : function () {
	                var acc_1 = SetTree.intersectionAux(comparer, b, m.Fields[2], acc);
	                var acc_2 = SetTree.mem(comparer, m.Fields[0], b) ? SetTree.add(comparer, m.Fields[0], acc_1) : acc_1;
	                return SetTree.intersectionAux(comparer, b, m.Fields[1], acc_2);
	            }();
	        };
	
	        SetTree.intersection = function intersection(comparer, a, b) {
	            return SetTree.intersectionAux(comparer, b, a, new SetTree("SetEmpty", []));
	        };
	
	        SetTree.partition1 = function partition1(comparer, f, k, acc1, acc2) {
	            return f(k) ? [SetTree.add(comparer, k, acc1), acc2] : [acc1, SetTree.add(comparer, k, acc2)];
	        };
	
	        SetTree.partitionAux = function partitionAux(comparer, f, s, acc_0, acc_1) {
	            var acc = [acc_0, acc_1];
	            if (s.Case === "SetOne") {
	                var acc1 = acc[0];
	                var acc2 = acc[1];
	                return SetTree.partition1(comparer, f, s.Fields[0], acc1, acc2);
	            } else {
	                if (s.Case === "SetEmpty") {
	                    return acc;
	                } else {
	                    var acc_2 = function () {
	                        var arg30_ = acc[0];
	                        var arg31_ = acc[1];
	                        return SetTree.partitionAux(comparer, f, s.Fields[2], arg30_, arg31_);
	                    }();
	                    var acc_3 = function () {
	                        var acc1 = acc_2[0];
	                        var acc2 = acc_2[1];
	                        return SetTree.partition1(comparer, f, s.Fields[0], acc1, acc2);
	                    }();
	                    var arg30_ = acc_3[0];
	                    var arg31_ = acc_3[1];
	                    return SetTree.partitionAux(comparer, f, s.Fields[1], arg30_, arg31_);
	                }
	            }
	        };
	
	        SetTree.partition = function partition(comparer, f, s) {
	            var seed = [new SetTree("SetEmpty", []), new SetTree("SetEmpty", [])];
	            var arg30_ = seed[0];
	            var arg31_ = seed[1];
	            return SetTree.partitionAux(comparer, f, s, arg30_, arg31_);
	        };
	
	        SetTree.minimumElementAux = function minimumElementAux(s, n) {
	            return s.Case === "SetOne" ? s.Fields[0] : s.Case === "SetEmpty" ? n : SetTree.minimumElementAux(s.Fields[1], s.Fields[0]);
	        };
	
	        SetTree.minimumElementOpt = function minimumElementOpt(s) {
	            return s.Case === "SetOne" ? s.Fields[0] : s.Case === "SetEmpty" ? null : SetTree.minimumElementAux(s.Fields[1], s.Fields[0]);
	        };
	
	        SetTree.maximumElementAux = function maximumElementAux(s, n) {
	            return s.Case === "SetOne" ? s.Fields[0] : s.Case === "SetEmpty" ? n : SetTree.maximumElementAux(s.Fields[2], s.Fields[0]);
	        };
	
	        SetTree.maximumElementOpt = function maximumElementOpt(s) {
	            return s.Case === "SetOne" ? s.Fields[0] : s.Case === "SetEmpty" ? null : SetTree.maximumElementAux(s.Fields[2], s.Fields[0]);
	        };
	
	        SetTree.minimumElement = function minimumElement(s) {
	            var matchValue = SetTree.minimumElementOpt(s);
	            if (matchValue == null) {
	                throw "Set contains no elements";
	            } else {
	                return matchValue;
	            }
	        };
	
	        SetTree.maximumElement = function maximumElement(s) {
	            var matchValue = SetTree.maximumElementOpt(s);
	            if (matchValue == null) {
	                throw "Set contains no elements";
	            } else {
	                return matchValue;
	            }
	        };
	
	        SetTree.collapseLHS = function collapseLHS(stack) {
	            return stack.tail != null ? stack.head.Case === "SetOne" ? stack : stack.head.Case === "SetNode" ? SetTree.collapseLHS(List.ofArray([stack.head.Fields[1], SetTree.SetOne(stack.head.Fields[0]), stack.head.Fields[2]], stack.tail)) : SetTree.collapseLHS(stack.tail) : new List();
	        };
	
	        SetTree.mkIterator = function mkIterator(s) {
	            return { stack: SetTree.collapseLHS(new List(s, new List())), started: false };
	        };
	
	        SetTree.moveNext = function moveNext(i) {
	            function current(i) {
	                if (i.stack.tail == null) {
	                    return null;
	                } else if (i.stack.head.Case === "SetOne") {
	                    return i.stack.head.Fields[0];
	                }
	                throw "Please report error: Set iterator, unexpected stack for current";
	            }
	            if (i.started) {
	                if (i.stack.tail == null) {
	                    return { done: true };
	                } else {
	                    if (i.stack.head.Case === "SetOne") {
	                        i.stack = SetTree.collapseLHS(i.stack.tail);
	                        return {
	                            done: i.stack.tail == null,
	                            value: current(i)
	                        };
	                    } else {
	                        throw "Please report error: Set iterator, unexpected stack for moveNext";
	                    }
	                }
	            } else {
	                i.started = true;
	                return {
	                    done: i.stack.tail == null,
	                    value: current(i)
	                };
	            }
	            ;
	        };
	
	        SetTree.compareStacks = function compareStacks(comparer, l1, l2) {
	            var $target8 = function $target8(n1k, t1) {
	                return SetTree.compareStacks(comparer, List.ofArray([new SetTree("SetEmpty", []), SetTree.SetOne(n1k)], t1), l2);
	            };
	            var $target9 = function $target9(n1k, n1l, n1r, t1) {
	                return SetTree.compareStacks(comparer, List.ofArray([n1l, SetTree.SetNode(n1k, new SetTree("SetEmpty", []), n1r, 0)], t1), l2);
	            };
	            var $target11 = function $target11(n2k, n2l, n2r, t2) {
	                return SetTree.compareStacks(comparer, l1, List.ofArray([n2l, SetTree.SetNode(n2k, new SetTree("SetEmpty", []), n2r, 0)], t2));
	            };
	            if (l1.tail != null) {
	                if (l2.tail != null) {
	                    if (l2.head.Case === "SetOne") {
	                        if (l1.head.Case === "SetOne") {
	                            var n1k = l1.head.Fields[0],
	                                n2k = l2.head.Fields[0],
	                                t1 = l1.tail,
	                                t2 = l2.tail,
	                                c = comparer.Compare(n1k, n2k);
	                            if (c !== 0) {
	                                return c;
	                            } else {
	                                return SetTree.compareStacks(comparer, t1, t2);
	                            }
	                        } else {
	                            if (l1.head.Case === "SetNode") {
	                                if (l1.head.Fields[1].Case === "SetEmpty") {
	                                    var emp = l1.head.Fields[1],
	                                        _n1k = l1.head.Fields[0],
	                                        n1r = l1.head.Fields[2],
	                                        _n2k = l2.head.Fields[0],
	                                        _t = l1.tail,
	                                        _t2 = l2.tail,
	                                        _c = comparer.Compare(_n1k, _n2k);
	                                    if (_c !== 0) {
	                                        return _c;
	                                    } else {
	                                        return SetTree.compareStacks(comparer, List.ofArray([n1r], _t), List.ofArray([emp], _t2));
	                                    }
	                                } else {
	                                    return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);
	                                }
	                            } else {
	                                var _n2k2 = l2.head.Fields[0],
	                                    _t3 = l2.tail;
	                                return SetTree.compareStacks(comparer, l1, List.ofArray([new SetTree("SetEmpty", []), SetTree.SetOne(_n2k2)], _t3));
	                            }
	                        }
	                    } else {
	                        if (l2.head.Case === "SetNode") {
	                            if (l2.head.Fields[1].Case === "SetEmpty") {
	                                if (l1.head.Case === "SetOne") {
	                                    var _n1k2 = l1.head.Fields[0],
	                                        _n2k3 = l2.head.Fields[0],
	                                        n2r = l2.head.Fields[2],
	                                        _t4 = l1.tail,
	                                        _t5 = l2.tail,
	                                        _c2 = comparer.Compare(_n1k2, _n2k3);
	                                    if (_c2 !== 0) {
	                                        return _c2;
	                                    } else {
	                                        return SetTree.compareStacks(comparer, List.ofArray([new SetTree("SetEmpty", [])], _t4), List.ofArray([n2r], _t5));
	                                    }
	                                } else {
	                                    if (l1.head.Case === "SetNode") {
	                                        if (l1.head.Fields[1].Case === "SetEmpty") {
	                                            var _n1k3 = l1.head.Fields[0],
	                                                _n1r = l1.head.Fields[2],
	                                                _n2k4 = l2.head.Fields[0],
	                                                _n2r = l2.head.Fields[2],
	                                                _t6 = l1.tail,
	                                                _t7 = l2.tail,
	                                                _c3 = comparer.Compare(_n1k3, _n2k4);
	                                            if (_c3 !== 0) {
	                                                return _c3;
	                                            } else {
	                                                return SetTree.compareStacks(comparer, List.ofArray([_n1r], _t6), List.ofArray([_n2r], _t7));
	                                            }
	                                        } else {
	                                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);
	                                        }
	                                    } else {
	                                        return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);
	                                    }
	                                }
	                            } else {
	                                if (l1.head.Case === "SetOne") {
	                                    return $target8(l1.head.Fields[0], l1.tail);
	                                } else {
	                                    if (l1.head.Case === "SetNode") {
	                                        return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);
	                                    } else {
	                                        return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);
	                                    }
	                                }
	                            }
	                        } else {
	                            if (l1.head.Case === "SetOne") {
	                                return $target8(l1.head.Fields[0], l1.tail);
	                            } else {
	                                if (l1.head.Case === "SetNode") {
	                                    return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);
	                                } else {
	                                    return SetTree.compareStacks(comparer, l1.tail, l2.tail);
	                                }
	                            }
	                        }
	                    }
	                } else {
	                    return 1;
	                }
	            } else {
	                if (l2.tail != null) {
	                    return -1;
	                } else {
	                    return 0;
	                }
	            }
	        };
	
	        SetTree.compare = function compare(comparer, s1, s2) {
	            if (s1.Case === "SetEmpty") {
	                if (s2.Case === "SetEmpty") {
	                    return 0;
	                } else {
	                    return -1;
	                }
	            } else {
	                if (s2.Case === "SetEmpty") {
	                    return 1;
	                } else {
	                    return SetTree.compareStacks(comparer, List.ofArray([s1]), List.ofArray([s2]));
	                }
	            }
	        };
	
	        SetTree.mkFromEnumerator = function mkFromEnumerator(comparer, acc, e) {
	            var cur = e.next();
	            while (!cur.done) {
	                acc = SetTree.add(comparer, cur.value, acc);
	                cur = e.next();
	            }
	            return acc;
	        };
	
	        SetTree.ofSeq = function ofSeq(comparer, c) {
	            var ie = c[Symbol.iterator]();
	            return SetTree.mkFromEnumerator(comparer, new SetTree("SetEmpty", []), ie);
	        };
	
	        return SetTree;
	    }();
	
	    SetTree.tolerance = 2;
	
	    var FSet = function () {
	        /** Do not call, use Set.create instead. */
	        function FSet() {
	            _classCallCheck(this, FSet);
	        }
	
	        FSet.from = function from(comparer, tree) {
	            var s = new FSet();
	            s.tree = tree;
	            s.comparer = comparer || new GenericComparer();
	            return s;
	        };
	
	        FSet.create = function create(ie, comparer) {
	            comparer = comparer || new GenericComparer();
	            return FSet.from(comparer, ie ? SetTree.ofSeq(comparer, ie) : new SetTree("SetEmpty", []));
	        };
	
	        FSet.prototype.ToString = function ToString() {
	            return "set [" + Array.from(this).map(Util.toString).join("; ") + "]";
	        };
	
	        FSet.prototype.Equals = function Equals(s2) {
	            return this.CompareTo(s2) === 0;
	        };
	
	        FSet.prototype.CompareTo = function CompareTo(s2) {
	            return SetTree.compare(this.comparer, this.tree, s2.tree);
	        };
	
	        FSet.prototype[Symbol.iterator] = function () {
	            var i = SetTree.mkIterator(this.tree);
	            return {
	                next: function next() {
	                    return SetTree.moveNext(i);
	                }
	            };
	        };
	
	        FSet.prototype.values = function values() {
	            return this[Symbol.iterator]();
	        };
	
	        FSet.prototype.has = function has(v) {
	            return SetTree.mem(this.comparer, v, this.tree);
	        };
	
	        FSet.prototype.add = function add(v) {
	            throw "not supported";
	        };
	
	        FSet.prototype.delete = function _delete(v) {
	            throw "not supported";
	        };
	
	        FSet.prototype.clear = function clear() {
	            throw "not supported";
	        };
	
	        FSet.isEmpty = function isEmpty(s) {
	            return SetTree.isEmpty(s.tree);
	        };
	
	        FSet.add = function add(item, s) {
	            return FSet.from(s.comparer, SetTree.add(s.comparer, item, s.tree));
	        };
	
	        FSet.addInPlace = function addInPlace(item, s) {
	            return s.has(item) ? false : (s.add(item), true);
	        };
	
	        FSet.remove = function remove(item, s) {
	            return FSet.from(s.comparer, SetTree.remove(s.comparer, item, s.tree));
	        };
	
	        FSet.union = function union(set1, set2) {
	            return set2.tree.Case === "SetEmpty" ? set1 : set1.tree.Case === "SetEmpty" ? set2 : FSet.from(set1.comparer, SetTree.union(set1.comparer, set1.tree, set2.tree));
	        };
	
	        FSet.unionInPlace = function unionInPlace(set1, set2) {
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;
	
	            try {
	                for (var _iterator = set2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var x = _step.value;
	
	                    set1.add(x);
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	        };
	
	        FSet.unionMany = function unionMany(sets) {
	            // Pass args as FSet.union(s, acc) instead of FSet.union(acc, s)
	            // to discard the comparer of the first empty set 
	            return Seq.fold(function (acc, s) {
	                return FSet.union(s, acc);
	            }, FSet.create(), sets);
	        };
	
	        FSet.difference = function difference(set1, set2) {
	            return set1.tree.Case === "SetEmpty" ? set1 : set2.tree.Case === "SetEmpty" ? set1 : FSet.from(set1.comparer, SetTree.diff(set1.comparer, set1.tree, set2.tree));
	        };
	
	        FSet.differenceInPlace = function differenceInPlace(set1, set2) {
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;
	
	            try {
	                for (var _iterator2 = set2[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var x = _step2.value;
	
	                    set1.delete(x);
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        };
	
	        FSet.intersect = function intersect(set1, set2) {
	            return set2.tree.Case === "SetEmpty" ? set2 : set1.tree.Case === "SetEmpty" ? set1 : FSet.from(set1.comparer, SetTree.intersection(set1.comparer, set1.tree, set2.tree));
	        };
	
	        FSet.intersectInPlace = function intersectInPlace(set1, set2) {
	            var set2_ = set2 instanceof Set ? set2 : new Set(set2);
	            var _iteratorNormalCompletion3 = true;
	            var _didIteratorError3 = false;
	            var _iteratorError3 = undefined;
	
	            try {
	                for (var _iterator3 = set1[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                    var x = _step3.value;
	
	                    if (!set2_.has(x)) {
	                        set1.delete(x);
	                    }
	                }
	            } catch (err) {
	                _didIteratorError3 = true;
	                _iteratorError3 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                        _iterator3.return();
	                    }
	                } finally {
	                    if (_didIteratorError3) {
	                        throw _iteratorError3;
	                    }
	                }
	            }
	        };
	
	        FSet.intersectMany = function intersectMany(sets) {
	            return Seq.reduce(function (s1, s2) {
	                return FSet.intersect(s1, s2);
	            }, sets);
	        };
	
	        FSet.isProperSubsetOf = function isProperSubsetOf(set1, set2) {
	            if (set1 instanceof FSet && set2 instanceof FSet) {
	                return SetTree.psubset(set1.comparer, set1.tree, set2.tree);
	            } else {
	                set2 = set2 instanceof Set ? set2 : new Set(set2);
	                return Seq.forAll(function (x) {
	                    return set2.has(x);
	                }, set1) && Seq.exists(function (x) {
	                    return !set1.has(x);
	                }, set2);
	            }
	        };
	
	        FSet.isSubsetOf = function isSubsetOf(set1, set2) {
	            if (set1 instanceof FSet && set2 instanceof FSet) {
	                return SetTree.subset(set1.comparer, set1.tree, set2.tree);
	            } else {
	                set2 = set2 instanceof Set ? set2 : new Set(set2);
	                return Seq.forAll(function (x) {
	                    return set2.has(x);
	                }, set1);
	            }
	        };
	
	        FSet.isProperSupersetOf = function isProperSupersetOf(set1, set2) {
	            if (set1 instanceof FSet && set2 instanceof FSet) {
	                return SetTree.psubset(set1.comparer, set2.tree, set1.tree);
	            } else {
	                return FSet.isProperSubset(set2 instanceof Set ? set2 : new Set(set2), set1);
	            }
	        };
	
	        FSet.isSupersetOf = function isSupersetOf(set1, set2) {
	            if (set1 instanceof FSet && set2 instanceof FSet) {
	                return SetTree.subset(set1.comparer, set2.tree, set1.tree);
	            } else {
	                return FSet.isSubset(set2 instanceof Set ? set2 : new Set(set2), set1);
	            }
	        };
	
	        FSet.copyTo = function copyTo(xs, arr, arrayIndex, count) {
	            if (!Array.isArray(arr) && !ArrayBuffer.isView(arr)) throw "Array is invalid";
	            count = count || arr.length;
	            var i = arrayIndex || 0;
	            var iter = xs[Symbol.iterator]();
	            while (count--) {
	                var el = iter.next();
	                if (el.done) break;
	                arr[i++] = el.value;
	            }
	        };
	
	        FSet.partition = function partition(f, s) {
	            if (s.tree.Case === "SetEmpty") {
	                return [s, s];
	            } else {
	                var tuple = SetTree.partition(s.comparer, f, s.tree);
	                return [FSet.from(s.comparer, tuple[0]), FSet.from(s.comparer, tuple[1])];
	            }
	        };
	
	        FSet.filter = function filter(f, s) {
	            if (s.tree.Case === "SetEmpty") {
	                return s;
	            } else {
	                return FSet.from(s.comparer, SetTree.filter(s.comparer, f, s.tree));
	            }
	        };
	
	        FSet.map = function map(f, s) {
	            var comparer = new GenericComparer();
	            return FSet.from(comparer, SetTree.fold(function (acc, k) {
	                return SetTree.add(comparer, f(k), acc);
	            }, new SetTree("SetEmpty", []), s.tree));
	        };
	
	        FSet.exists = function exists(f, s) {
	            return SetTree.exists(f, s.tree);
	        };
	
	        FSet.forAll = function forAll(f, s) {
	            return SetTree.forall(f, s.tree);
	        };
	
	        FSet.fold = function fold(f, seed, s) {
	            return SetTree.fold(f, seed, s.tree);
	        };
	
	        FSet.foldBack = function foldBack(f, s, seed) {
	            return SetTree.foldBack(f, s.tree, seed);
	        };
	
	        FSet.iterate = function iterate(f, s) {
	            SetTree.iter(f, s.tree);
	        };
	
	        FSet.minimumElement = function minimumElement(s) {
	            return SetTree.minimumElement(s.tree);
	        };
	
	        FSet.maximumElement = function maximumElement(s) {
	            return SetTree.maximumElement(s.tree);
	        };
	
	        _createClass(FSet, [{
	            key: "size",
	            get: function get() {
	                return SetTree.count(this.tree);
	            }
	        }]);
	
	        return FSet;
	    }();
	
	    FSet.op_Addition = FSet.union;
	    FSet.op_Subtraction = FSet.difference;
	    FSet.isProperSubset = FSet.isProperSubsetOf;
	    FSet.isSubset = FSet.isSubsetOf;
	    FSet.isProperSuperset = FSet.isProperSupersetOf;
	    FSet.isSuperset = FSet.isSupersetOf;
	    FSet.minElement = FSet.minimumElement;
	    FSet.maxElement = FSet.maximumElement;
	    Util.setInterfaces(FSet.prototype, ["System.IEquatable", "System.IComparable"], "Microsoft.FSharp.Collections.FSharpSet");
	    exports.Set = FSet;
	
	    var MapTree = function () {
	        function MapTree(caseName, fields) {
	            _classCallCheck(this, MapTree);
	
	            this.Case = caseName;
	            this.Fields = fields;
	        }
	
	        MapTree.sizeAux = function sizeAux(acc, m) {
	            return m.Case === "MapOne" ? acc + 1 : m.Case === "MapNode" ? MapTree.sizeAux(MapTree.sizeAux(acc + 1, m.Fields[2]), m.Fields[3]) : acc;
	        };
	
	        MapTree.size = function size(x) {
	            return MapTree.sizeAux(0, x);
	        };
	
	        MapTree.empty = function empty() {
	            return new MapTree("MapEmpty", []);
	        };
	
	        MapTree.height = function height(_arg1) {
	            return _arg1.Case === "MapOne" ? 1 : _arg1.Case === "MapNode" ? _arg1.Fields[4] : 0;
	        };
	
	        MapTree.isEmpty = function isEmpty(m) {
	            return m.Case === "MapEmpty" ? true : false;
	        };
	
	        MapTree.mk = function mk(l, k, v, r) {
	            var matchValue = [l, r];
	            var $target1 = function $target1() {
	                var hl = MapTree.height(l);
	                var hr = MapTree.height(r);
	                var m = hl < hr ? hr : hl;
	                return new MapTree("MapNode", [k, v, l, r, m + 1]);
	            };
	            if (matchValue[0].Case === "MapEmpty") {
	                if (matchValue[1].Case === "MapEmpty") {
	                    return new MapTree("MapOne", [k, v]);
	                } else {
	                    return $target1();
	                }
	            } else {
	                return $target1();
	            }
	        };
	
	        MapTree.rebalance = function rebalance(t1, k, v, t2) {
	            var t1h = MapTree.height(t1);
	            var t2h = MapTree.height(t2);
	            if (t2h > t1h + 2) {
	                if (t2.Case === "MapNode") {
	                    if (MapTree.height(t2.Fields[2]) > t1h + 1) {
	                        if (t2.Fields[2].Case === "MapNode") {
	                            return MapTree.mk(MapTree.mk(t1, k, v, t2.Fields[2].Fields[2]), t2.Fields[2].Fields[0], t2.Fields[2].Fields[1], MapTree.mk(t2.Fields[2].Fields[3], t2.Fields[0], t2.Fields[1], t2.Fields[3]));
	                        } else {
	                            throw "rebalance";
	                        }
	                    } else {
	                        return MapTree.mk(MapTree.mk(t1, k, v, t2.Fields[2]), t2.Fields[0], t2.Fields[1], t2.Fields[3]);
	                    }
	                } else {
	                    throw "rebalance";
	                }
	            } else {
	                if (t1h > t2h + 2) {
	                    if (t1.Case === "MapNode") {
	                        if (MapTree.height(t1.Fields[3]) > t2h + 1) {
	                            if (t1.Fields[3].Case === "MapNode") {
	                                return MapTree.mk(MapTree.mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], t1.Fields[3].Fields[2]), t1.Fields[3].Fields[0], t1.Fields[3].Fields[1], MapTree.mk(t1.Fields[3].Fields[3], k, v, t2));
	                            } else {
	                                throw "rebalance";
	                            }
	                        } else {
	                            return MapTree.mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], MapTree.mk(t1.Fields[3], k, v, t2));
	                        }
	                    } else {
	                        throw "rebalance";
	                    }
	                } else {
	                    return MapTree.mk(t1, k, v, t2);
	                }
	            }
	        };
	
	        MapTree.add = function add(comparer, k, v, m) {
	            if (m.Case === "MapOne") {
	                var c = comparer.Compare(k, m.Fields[0]);
	                if (c < 0) {
	                    return new MapTree("MapNode", [k, v, new MapTree("MapEmpty", []), m, 2]);
	                } else if (c === 0) {
	                    return new MapTree("MapOne", [k, v]);
	                }
	                return new MapTree("MapNode", [k, v, m, new MapTree("MapEmpty", []), 2]);
	            } else if (m.Case === "MapNode") {
	                var c = comparer.Compare(k, m.Fields[0]);
	                if (c < 0) {
	                    return MapTree.rebalance(MapTree.add(comparer, k, v, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);
	                } else if (c === 0) {
	                    return new MapTree("MapNode", [k, v, m.Fields[2], m.Fields[3], m.Fields[4]]);
	                }
	                return MapTree.rebalance(m.Fields[2], m.Fields[0], m.Fields[1], MapTree.add(comparer, k, v, m.Fields[3]));
	            }
	            return new MapTree("MapOne", [k, v]);
	        };
	
	        MapTree.find = function find(comparer, k, m) {
	            var res = MapTree.tryFind(comparer, k, m);
	            if (res != null) return res;
	            throw "key not found";
	        };
	
	        MapTree.tryFind = function tryFind(comparer, k, m) {
	            if (m.Case === "MapOne") {
	                var c = comparer.Compare(k, m.Fields[0]);
	                return c === 0 ? m.Fields[1] : null;
	            } else if (m.Case === "MapNode") {
	                var c = comparer.Compare(k, m.Fields[0]);
	                if (c < 0) {
	                    return MapTree.tryFind(comparer, k, m.Fields[2]);
	                } else {
	                    if (c === 0) {
	                        return m.Fields[1];
	                    } else {
	                        return MapTree.tryFind(comparer, k, m.Fields[3]);
	                    }
	                }
	            }
	            return null;
	        };
	
	        MapTree.partition1 = function partition1(comparer, f, k, v, acc1, acc2) {
	            return f(k, v) ? [MapTree.add(comparer, k, v, acc1), acc2] : [acc1, MapTree.add(comparer, k, v, acc2)];
	        };
	
	        MapTree.partitionAux = function partitionAux(comparer, f, s, acc_0, acc_1) {
	            var acc = [acc_0, acc_1];
	            if (s.Case === "MapOne") {
	                return MapTree.partition1(comparer, f, s.Fields[0], s.Fields[1], acc[0], acc[1]);
	            } else if (s.Case === "MapNode") {
	                var acc_2 = MapTree.partitionAux(comparer, f, s.Fields[3], acc[0], acc[1]);
	                var acc_3 = MapTree.partition1(comparer, f, s.Fields[0], s.Fields[1], acc_2[0], acc_2[1]);
	                return MapTree.partitionAux(comparer, f, s.Fields[2], acc_3[0], acc_3[1]);
	            }
	            return acc;
	        };
	
	        MapTree.partition = function partition(comparer, f, s) {
	            return MapTree.partitionAux(comparer, f, s, MapTree.empty(), MapTree.empty());
	        };
	
	        MapTree.filter1 = function filter1(comparer, f, k, v, acc) {
	            return f(k, v) ? MapTree.add(comparer, k, v, acc) : acc;
	        };
	
	        MapTree.filterAux = function filterAux(comparer, f, s, acc) {
	            return s.Case === "MapOne" ? MapTree.filter1(comparer, f, s.Fields[0], s.Fields[1], acc) : s.Case === "MapNode" ? function () {
	                var acc_1 = MapTree.filterAux(comparer, f, s.Fields[2], acc);
	                var acc_2 = MapTree.filter1(comparer, f, s.Fields[0], s.Fields[1], acc_1);
	                return MapTree.filterAux(comparer, f, s.Fields[3], acc_2);
	            }() : acc;
	        };
	
	        MapTree.filter = function filter(comparer, f, s) {
	            return MapTree.filterAux(comparer, f, s, MapTree.empty());
	        };
	
	        MapTree.spliceOutSuccessor = function spliceOutSuccessor(m) {
	            if (m.Case === "MapOne") {
	                return [m.Fields[0], m.Fields[1], new MapTree("MapEmpty", [])];
	            } else if (m.Case === "MapNode") {
	                if (m.Fields[2].Case === "MapEmpty") {
	                    return [m.Fields[0], m.Fields[1], m.Fields[3]];
	                } else {
	                    var kvl = MapTree.spliceOutSuccessor(m.Fields[2]);
	                    return [kvl[0], kvl[1], MapTree.mk(kvl[2], m.Fields[0], m.Fields[1], m.Fields[3])];
	                }
	            }
	            throw "internal error: Map.spliceOutSuccessor";
	        };
	
	        MapTree.remove = function remove(comparer, k, m) {
	            if (m.Case === "MapOne") {
	                var c = comparer.Compare(k, m.Fields[0]);
	                if (c === 0) {
	                    return new MapTree("MapEmpty", []);
	                } else {
	                    return m;
	                }
	            } else if (m.Case === "MapNode") {
	                var c = comparer.Compare(k, m.Fields[0]);
	                if (c < 0) {
	                    return MapTree.rebalance(MapTree.remove(comparer, k, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);
	                } else {
	                    if (c === 0) {
	                        var matchValue = [m.Fields[2], m.Fields[3]];
	                        if (matchValue[0].Case === "MapEmpty") {
	                            return m.Fields[3];
	                        } else {
	                            if (matchValue[1].Case === "MapEmpty") {
	                                return m.Fields[2];
	                            } else {
	                                var patternInput = MapTree.spliceOutSuccessor(m.Fields[3]);
	                                var sv = patternInput[1];
	                                var sk = patternInput[0];
	                                var r_ = patternInput[2];
	                                return MapTree.mk(m.Fields[2], sk, sv, r_);
	                            }
	                        }
	                    } else {
	                        return MapTree.rebalance(m.Fields[2], m.Fields[0], m.Fields[1], MapTree.remove(comparer, k, m.Fields[3]));
	                    }
	                }
	            } else {
	                return MapTree.empty();
	            }
	        };
	
	        MapTree.mem = function mem(comparer, k, m) {
	            return m.Case === "MapOne" ? comparer.Compare(k, m.Fields[0]) === 0 : m.Case === "MapNode" ? function () {
	                var c = comparer.Compare(k, m.Fields[0]);
	                if (c < 0) {
	                    return MapTree.mem(comparer, k, m.Fields[2]);
	                } else {
	                    if (c === 0) {
	                        return true;
	                    } else {
	                        return MapTree.mem(comparer, k, m.Fields[3]);
	                    }
	                }
	            }() : false;
	        };
	
	        MapTree.iter = function iter(f, m) {
	            if (m.Case === "MapOne") {
	                f(m.Fields[0], m.Fields[1]);
	            } else if (m.Case === "MapNode") {
	                MapTree.iter(f, m.Fields[2]);
	                f(m.Fields[0], m.Fields[1]);
	                MapTree.iter(f, m.Fields[3]);
	            }
	        };
	
	        MapTree.tryPick = function tryPick(f, m) {
	            return m.Case === "MapOne" ? f(m.Fields[0], m.Fields[1]) : m.Case === "MapNode" ? function () {
	                var matchValue = MapTree.tryPick(f, m.Fields[2]);
	                if (matchValue == null) {
	                    var matchValue_1 = f(m.Fields[0], m.Fields[1]);
	                    if (matchValue_1 == null) {
	                        return MapTree.tryPick(f, m.Fields[3]);
	                    } else {
	                        var res = matchValue_1;
	                        return res;
	                    }
	                } else {
	                    var res = matchValue;
	                    return res;
	                }
	            }() : null;
	        };
	
	        MapTree.exists = function exists(f, m) {
	            return m.Case === "MapOne" ? f(m.Fields[0], m.Fields[1]) : m.Case === "MapNode" ? (MapTree.exists(f, m.Fields[2]) ? true : f(m.Fields[0], m.Fields[1])) ? true : MapTree.exists(f, m.Fields[3]) : false;
	        };
	
	        MapTree.forall = function forall(f, m) {
	            return m.Case === "MapOne" ? f(m.Fields[0], m.Fields[1]) : m.Case === "MapNode" ? (MapTree.forall(f, m.Fields[2]) ? f(m.Fields[0], m.Fields[1]) : false) ? MapTree.forall(f, m.Fields[3]) : false : true;
	        };
	
	        MapTree.mapi = function mapi(f, m) {
	            return m.Case === "MapOne" ? new MapTree("MapOne", [m.Fields[0], f(m.Fields[0], m.Fields[1])]) : m.Case === "MapNode" ? function () {
	                var l2 = MapTree.mapi(f, m.Fields[2]);
	                var v2 = f(m.Fields[0], m.Fields[1]);
	                var r2 = MapTree.mapi(f, m.Fields[3]);
	                return new MapTree("MapNode", [m.Fields[0], v2, l2, r2, m.Fields[4]]);
	            }() : MapTree.empty();
	        };
	
	        MapTree.foldBack = function foldBack(f, m, x) {
	            return m.Case === "MapOne" ? f(m.Fields[0], m.Fields[1], x) : m.Case === "MapNode" ? function () {
	                var x_1 = MapTree.foldBack(f, m.Fields[3], x);
	                var x_2 = f(m.Fields[0], m.Fields[1], x_1);
	                return MapTree.foldBack(f, m.Fields[2], x_2);
	            }() : x;
	        };
	
	        MapTree.fold = function fold(f, x, m) {
	            return m.Case === "MapOne" ? f(x, m.Fields[0], m.Fields[1]) : m.Case === "MapNode" ? function () {
	                var x_1 = MapTree.fold(f, x, m.Fields[2]);
	                var x_2 = f(x_1, m.Fields[0], m.Fields[1]);
	                return MapTree.fold(f, x_2, m.Fields[3]);
	            }() : x;
	        };
	
	        MapTree.mkFromEnumerator = function mkFromEnumerator(comparer, acc, e) {
	            var cur = e.next();
	            while (!cur.done) {
	                acc = MapTree.add(comparer, cur.value[0], cur.value[1], acc);
	                cur = e.next();
	            }
	            return acc;
	        };
	
	        MapTree.ofSeq = function ofSeq(comparer, c) {
	            var ie = c[Symbol.iterator]();
	            return MapTree.mkFromEnumerator(comparer, MapTree.empty(), ie);
	        };
	
	        MapTree.collapseLHS = function collapseLHS(stack) {
	            if (stack.tail != null) {
	                if (stack.head.Case === "MapOne") {
	                    return stack;
	                } else if (stack.head.Case === "MapNode") {
	                    return MapTree.collapseLHS(List.ofArray([stack.head.Fields[2], new MapTree("MapOne", [stack.head.Fields[0], stack.head.Fields[1]]), stack.head.Fields[3]], stack.tail));
	                } else {
	                    return MapTree.collapseLHS(stack.tail);
	                }
	            } else {
	                return new List();
	            }
	        };
	
	        MapTree.mkIterator = function mkIterator(s) {
	            return { stack: MapTree.collapseLHS(new List(s, new List())), started: false };
	        };
	
	        MapTree.moveNext = function moveNext(i) {
	            function current(i) {
	                if (i.stack.tail == null) {
	                    return null;
	                } else if (i.stack.head.Case === "MapOne") {
	                    return [i.stack.head.Fields[0], i.stack.head.Fields[1]];
	                }
	                throw "Please report error: Map iterator, unexpected stack for current";
	            }
	            if (i.started) {
	                if (i.stack.tail == null) {
	                    return { done: true };
	                } else {
	                    if (i.stack.head.Case === "MapOne") {
	                        i.stack = MapTree.collapseLHS(i.stack.tail);
	                        return {
	                            done: i.stack.tail == null,
	                            value: current(i)
	                        };
	                    } else {
	                        throw "Please report error: Map iterator, unexpected stack for moveNext";
	                    }
	                }
	            } else {
	                i.started = true;
	                return {
	                    done: i.stack.tail == null,
	                    value: current(i)
	                };
	            }
	            ;
	        };
	
	        return MapTree;
	    }();
	
	    var FMap = function () {
	        /** Do not call, use Map.create instead. */
	        function FMap() {
	            _classCallCheck(this, FMap);
	        }
	
	        FMap.from = function from(comparer, tree) {
	            var map = new FMap();
	            map.tree = tree;
	            map.comparer = comparer || new GenericComparer();
	            return map;
	        };
	
	        FMap.create = function create(ie, comparer) {
	            comparer = comparer || new GenericComparer();
	            return FMap.from(comparer, ie ? MapTree.ofSeq(comparer, ie) : MapTree.empty());
	        };
	
	        FMap.prototype.ToString = function ToString() {
	            return "map [" + Array.from(this).map(Util.toString).join("; ") + "]";
	        };
	
	        FMap.prototype.Equals = function Equals(m2) {
	            return this.CompareTo(m2) === 0;
	        };
	
	        FMap.prototype.CompareTo = function CompareTo(m2) {
	            var _this4 = this;
	
	            return Seq.compareWith(function (kvp1, kvp2) {
	                var c = _this4.comparer.Compare(kvp1[0], kvp2[0]);
	                return c !== 0 ? c : Util.compare(kvp1[1], kvp2[1]);
	            }, this, m2);
	        };
	
	        FMap.prototype[Symbol.iterator] = function () {
	            var i = MapTree.mkIterator(this.tree);
	            return {
	                next: function next() {
	                    return MapTree.moveNext(i);
	                }
	            };
	        };
	
	        FMap.prototype.entries = function entries() {
	            return this[Symbol.iterator]();
	        };
	
	        FMap.prototype.keys = function keys() {
	            return Seq.map(function (kv) {
	                return kv[0];
	            }, this);
	        };
	
	        FMap.prototype.values = function values() {
	            return Seq.map(function (kv) {
	                return kv[1];
	            }, this);
	        };
	
	        FMap.prototype.get = function get(k) {
	            return MapTree.find(this.comparer, k, this.tree);
	        };
	
	        FMap.prototype.has = function has(k) {
	            return MapTree.mem(this.comparer, k, this.tree);
	        };
	
	        FMap.prototype.set = function set(k, v) {
	            throw "not supported";
	        };
	
	        FMap.prototype.delete = function _delete(k) {
	            throw "not supported";
	        };
	
	        FMap.prototype.clear = function clear() {
	            throw "not supported";
	        };
	
	        FMap.add = function add(k, v, map) {
	            return FMap.from(map.comparer, MapTree.add(map.comparer, k, v, map.tree));
	        };
	
	        FMap.remove = function remove(item, map) {
	            return FMap.from(map.comparer, MapTree.remove(map.comparer, item, map.tree));
	        };
	
	        FMap.containsValue = function containsValue(v, map) {
	            return Seq.fold(function (acc, k) {
	                return acc || Util.equals(map.get(k), v);
	            }, false, map.keys());
	        };
	
	        FMap.exists = function exists(f, map) {
	            return MapTree.exists(f, map.tree);
	        };
	
	        FMap.find = function find(k, map) {
	            return MapTree.find(map.comparer, k, map.tree);
	        };
	
	        FMap.tryFind = function tryFind(k, map) {
	            return MapTree.tryFind(map.comparer, k, map.tree);
	        };
	
	        FMap.filter = function filter(f, map) {
	            return FMap.from(map.comparer, MapTree.filter(map.comparer, f, map.tree));
	        };
	
	        FMap.fold = function fold(f, seed, map) {
	            return MapTree.fold(f, seed, map.tree);
	        };
	
	        FMap.foldBack = function foldBack(f, map, seed) {
	            return MapTree.foldBack(f, map.tree, seed);
	        };
	
	        FMap.forAll = function forAll(f, map) {
	            return MapTree.forall(f, map.tree);
	        };
	
	        FMap.isEmpty = function isEmpty(map) {
	            return MapTree.isEmpty(map.tree);
	        };
	
	        FMap.iterate = function iterate(f, map) {
	            MapTree.iter(f, map.tree);
	        };
	
	        FMap.map = function map(f, _map) {
	            return FMap.from(_map.comparer, MapTree.mapi(f, _map.tree));
	        };
	
	        FMap.partition = function partition(f, map) {
	            var rs = MapTree.partition(map.comparer, f, map.tree);
	            return [FMap.from(map.comparer, rs[0]), FMap.from(map.comparer, rs[1])];
	        };
	
	        FMap.findKey = function findKey(f, map) {
	            return Seq.pick(function (kv) {
	                return f(kv[0], kv[1]) ? kv[0] : null;
	            }, map);
	        };
	
	        FMap.tryFindKey = function tryFindKey(f, map) {
	            return Seq.tryPick(function (kv) {
	                return f(kv[0], kv[1]) ? kv[0] : null;
	            }, map);
	        };
	
	        FMap.pick = function pick(f, map) {
	            var res = FMap.tryPick(f, map);
	            if (res != null) return res;
	            throw "key not found";
	        };
	
	        FMap.tryPick = function tryPick(f, map) {
	            return MapTree.tryPick(f, map.tree);
	        };
	
	        _createClass(FMap, [{
	            key: "size",
	            get: function get() {
	                return MapTree.size(this.tree);
	            }
	        }]);
	
	        return FMap;
	    }();
	
	    Util.setInterfaces(FMap.prototype, ["System.IEquatable", "System.IComparable"], "Microsoft.FSharp.Collections.FSharpMap");
	    exports.Map = FMap;
	    var Nothing = exports.Nothing = void 0;
	    var maxTrampolineCallCount = 2000;
	
	    var Trampoline = exports.Trampoline = function () {
	        function Trampoline() {
	            _classCallCheck(this, Trampoline);
	
	            this.callCount = 0;
	        }
	
	        Trampoline.prototype.incrementAndCheck = function incrementAndCheck() {
	            return this.callCount++ > maxTrampolineCallCount;
	        };
	
	        Trampoline.prototype.hijack = function hijack(f) {
	            this.callCount = 0;
	            setTimeout(f, 0);
	        };
	
	        return Trampoline;
	    }();
	
	    var AsyncImpl = {
	        protectedCont: function protectedCont(f) {
	            return function (ctx) {
	                if (ctx.cancelToken.isCancelled) ctx.onCancel("cancelled");else if (ctx.trampoline.incrementAndCheck()) ctx.trampoline.hijack(function () {
	                    try {
	                        return f(ctx);
	                    } catch (err) {
	                        ctx.onError(err);
	                    }
	                });else try {
	                    return f(ctx);
	                } catch (err) {
	                    ctx.onError(err);
	                }
	            };
	        },
	        bind: function bind(computation, binder) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                computation({
	                    onSuccess: function onSuccess(x) {
	                        return binder(x)(ctx);
	                    },
	                    onError: ctx.onError,
	                    onCancel: ctx.onCancel,
	                    cancelToken: ctx.cancelToken,
	                    trampoline: ctx.trampoline
	                });
	            });
	        },
	        return: function _return(value) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                return ctx.onSuccess(value);
	            });
	        }
	    };
	
	    var AsyncBuilder = exports.AsyncBuilder = function () {
	        function AsyncBuilder() {
	            _classCallCheck(this, AsyncBuilder);
	        }
	
	        AsyncBuilder.prototype.Bind = function Bind(computation, binder) {
	            return AsyncImpl.bind(computation, binder);
	        };
	
	        AsyncBuilder.prototype.Combine = function Combine(computation1, computation2) {
	            return this.Bind(computation1, function () {
	                return computation2;
	            });
	        };
	
	        AsyncBuilder.prototype.Delay = function Delay(generator) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                return generator()(ctx);
	            });
	        };
	
	        AsyncBuilder.prototype.For = function For(sequence, body) {
	            var iter = sequence[Symbol.iterator]();
	            var cur = iter.next();
	            return this.While(function () {
	                return !cur.done;
	            }, this.Delay(function () {
	                var res = body(cur.value);
	                cur = iter.next();
	                return res;
	            }));
	        };
	
	        AsyncBuilder.prototype.Return = function Return(value) {
	            return AsyncImpl.return(value);
	        };
	
	        AsyncBuilder.prototype.ReturnFrom = function ReturnFrom(computation) {
	            return computation;
	        };
	
	        AsyncBuilder.prototype.TryFinally = function TryFinally(computation, compensation) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                computation({
	                    onSuccess: function onSuccess(x) {
	                        compensation();
	                        ctx.onSuccess(x);
	                    },
	                    onError: function onError(x) {
	                        compensation();
	                        ctx.onError(x);
	                    },
	                    onCancel: function onCancel(x) {
	                        compensation();
	                        ctx.onCancel(x);
	                    },
	                    cancelToken: ctx.cancelToken,
	                    trampoline: ctx.trampoline
	                });
	            });
	        };
	
	        AsyncBuilder.prototype.TryWith = function TryWith(computation, catchHandler) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                computation({
	                    onSuccess: ctx.onSuccess,
	                    onCancel: ctx.onCancel,
	                    cancelToken: ctx.cancelToken,
	                    trampoline: ctx.trampoline,
	                    onError: function onError(ex) {
	                        return catchHandler(ex)(ctx);
	                    }
	                });
	            });
	        };
	
	        AsyncBuilder.prototype.Using = function Using(resource, binder) {
	            return this.TryFinally(binder(resource), function () {
	                return resource.Dispose();
	            });
	        };
	
	        AsyncBuilder.prototype.While = function While(guard, computation) {
	            var _this5 = this;
	
	            if (guard()) return this.Bind(computation, function () {
	                return _this5.While(guard, computation);
	            });else return this.Return(Nothing);
	        };
	
	        AsyncBuilder.prototype.Zero = function Zero() {
	            return AsyncImpl.protectedCont(function (ctx) {
	                return ctx.onSuccess(Nothing);
	            });
	        };
	
	        return AsyncBuilder;
	    }();
	
	    AsyncBuilder.singleton = new AsyncBuilder();
	
	    var Async = exports.Async = function () {
	        function Async() {
	            _classCallCheck(this, Async);
	        }
	
	        Async.awaitPromise = function awaitPromise(p) {
	            return Async.fromContinuations(function (conts) {
	                return p.then(conts[0]).catch(function (err) {
	                    return (err == "cancelled" ? conts[2] : conts[1])(err);
	                });
	            });
	        };
	
	        Async.catch = function _catch(work) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                work({
	                    onSuccess: function onSuccess(x) {
	                        return ctx.onSuccess(Choice.Choice1Of2(x));
	                    },
	                    onError: function onError(ex) {
	                        return ctx.onSuccess(Choice.Choice2Of2(ex));
	                    },
	                    onCancel: ctx.onCancel,
	                    cancelToken: ctx.cancelToken,
	                    trampoline: ctx.trampoline
	                });
	            });
	        };
	
	        Async.fromContinuations = function fromContinuations(f) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                return f([ctx.onSuccess, ctx.onError, ctx.onCancel]);
	            });
	        };
	
	        Async.ignore = function ignore(computation) {
	            return AsyncImpl.bind(computation, function (x) {
	                return AsyncImpl.return(Nothing);
	            });
	        };
	
	        Async.parallel = function parallel(computations) {
	            return Async.awaitPromise(Promise.all(Seq.map(function (w) {
	                return Async.startAsPromise(w);
	            }, computations)));
	        };
	
	        Async.sleep = function sleep(millisecondsDueTime) {
	            return AsyncImpl.protectedCont(function (ctx) {
	                setTimeout(function () {
	                    return ctx.cancelToken.isCancelled ? ctx.onCancel("cancelled") : ctx.onSuccess(Nothing);
	                }, millisecondsDueTime);
	            });
	        };
	
	        Async.start = function start(computation, cancellationToken) {
	            return Async.startWithContinuations(computation, cancellationToken);
	        };
	
	        Async.emptyContinuation = function emptyContinuation(x) {
	            // NOP
	        };
	
	        Async.startWithContinuations = function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {
	            if (typeof continuation !== "function") {
	                cancelToken = continuation;
	                continuation = null;
	            }
	            var trampoline = new Trampoline();
	            computation({
	                onSuccess: continuation ? continuation : Async.emptyContinuation,
	                onError: exceptionContinuation ? exceptionContinuation : Async.emptyContinuation,
	                onCancel: cancellationContinuation ? cancellationContinuation : Async.emptyContinuation,
	                cancelToken: cancelToken ? cancelToken : Async.defaultCancellationToken,
	                trampoline: trampoline
	            });
	        };
	
	        Async.startAsPromise = function startAsPromise(computation, cancellationToken) {
	            return new Promise(function (resolve, reject) {
	                return Async.startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : Async.defaultCancellationToken);
	            });
	        };
	
	        _createClass(Async, null, [{
	            key: "cancellationToken",
	            get: function get() {
	                return AsyncImpl.protectedCont(function (ctx) {
	                    return ctx.onSuccess(ctx.cancelToken);
	                });
	            }
	        }]);
	
	        return Async;
	    }();
	
	    Async.defaultCancellationToken = {
	        isCancelled: false
	    };
	    Async.startImmediate = Async.start;
	
	    var QueueCell = function QueueCell(message) {
	        _classCallCheck(this, QueueCell);
	
	        this.value = message;
	    };
	
	    var MailboxQueue = function () {
	        function MailboxQueue() {
	            _classCallCheck(this, MailboxQueue);
	        }
	
	        MailboxQueue.prototype.add = function add(message) {
	            var itCell = new QueueCell(message);
	            if (this.firstAndLast) {
	                this.firstAndLast[1].next = itCell;
	                this.firstAndLast = [this.firstAndLast[0], itCell];
	            } else this.firstAndLast = [itCell, itCell];
	        };
	
	        MailboxQueue.prototype.tryGet = function tryGet() {
	            if (this.firstAndLast) {
	                var value = this.firstAndLast[0].value;
	                if (this.firstAndLast[0].next) this.firstAndLast = [this.firstAndLast[0].next, this.firstAndLast[1]];else delete this.firstAndLast;
	                return value;
	            }
	            return void 0;
	        };
	
	        return MailboxQueue;
	    }();
	
	    var MailboxProcessor = exports.MailboxProcessor = function () {
	        function MailboxProcessor(body, cancellationToken) {
	            _classCallCheck(this, MailboxProcessor);
	
	            this.body = body;
	            this.cancellationToken = cancellationToken || Async.defaultCancellationToken;
	            this.messages = new MailboxQueue();
	        }
	
	        MailboxProcessor.start = function start(body, cancellationToken) {
	            var mbox = new MailboxProcessor(body, cancellationToken);
	            mbox.start();
	            return mbox;
	        };
	
	        MailboxProcessor.prototype.__processEvents = function __processEvents() {
	            if (this.continuation) {
	                var value = this.messages.tryGet();
	                if (value) {
	                    var cont = this.continuation;
	                    delete this.continuation;
	                    cont(value);
	                }
	            }
	        };
	
	        MailboxProcessor.prototype.start = function start() {
	            Async.startImmediate(this.body(this), this.cancellationToken);
	        };
	
	        MailboxProcessor.prototype.receive = function receive() {
	            var _this6 = this;
	
	            return Async.fromContinuations(function (conts) {
	                if (_this6.continuation) throw "Receive can only be called once!";
	                _this6.continuation = conts[0];
	                _this6.__processEvents();
	            });
	        };
	
	        MailboxProcessor.prototype.post = function post(message) {
	            this.messages.add(message);
	            this.__processEvents();
	        };
	
	        MailboxProcessor.prototype.postAndAsyncReply = function postAndAsyncReply(buildMessage) {
	            var result = void 0;
	            var continuation = void 0;
	            function checkCompletion() {
	                if (result && continuation) continuation(result);
	            }
	            var reply = {
	                reply: function reply(res) {
	                    result = res;
	                    checkCompletion();
	                }
	            };
	            this.messages.add(buildMessage(reply));
	            this.__processEvents();
	            return Async.fromContinuations(function (conts) {
	                continuation = conts[0];
	                checkCompletion();
	            });
	        };
	
	        return MailboxProcessor;
	    }();
	
	    var Observer = function Observer(onNext, onError, onCompleted) {
	        _classCallCheck(this, Observer);
	
	        this.OnNext = onNext;
	        this.OnError = onError || function (e) {};
	        this.OnCompleted = onCompleted || function () {};
	    };
	
	    Util.setInterfaces(Observer.prototype, ["System.IObserver"]);
	
	    var Observable = function Observable(subscribe) {
	        _classCallCheck(this, Observable);
	
	        this.Subscribe = subscribe;
	    };
	
	    Util.setInterfaces(Observable.prototype, ["System.IObservable"]);
	
	    var FObservable = function () {
	        function FObservable() {
	            _classCallCheck(this, FObservable);
	        }
	
	        FObservable.__protect = function __protect(f, succeed, fail) {
	            try {
	                return succeed(f());
	            } catch (e) {
	                fail(e);
	            }
	        };
	
	        FObservable.add = function add(callback, source) {
	            source.Subscribe(new Observer(callback));
	        };
	
	        FObservable.choose = function choose(chooser, source) {
	            return new Observable(function (observer) {
	                return source.Subscribe(new Observer(function (t) {
	                    return FObservable.__protect(function () {
	                        return chooser(t);
	                    }, function (u) {
	                        if (u != null) observer.OnNext(u);
	                    }, observer.OnError);
	                }, observer.OnError, observer.OnCompleted));
	            });
	        };
	
	        FObservable.filter = function filter(predicate, source) {
	            return FObservable.choose(function (x) {
	                return predicate(x) ? x : null;
	            }, source);
	        };
	
	        FObservable.map = function map(mapping, source) {
	            return new Observable(function (observer) {
	                return source.Subscribe(new Observer(function (t) {
	                    FObservable.__protect(function () {
	                        return mapping(t);
	                    }, observer.OnNext, observer.OnError);
	                }, observer.OnError, observer.OnCompleted));
	            });
	        };
	
	        FObservable.merge = function merge(source1, source2) {
	            return new Observable(function (observer) {
	                var stopped = false,
	                    completed1 = false,
	                    completed2 = false;
	                var h1 = source1.Subscribe(new Observer(function (v) {
	                    if (!stopped) observer.OnNext(v);
	                }, function (e) {
	                    if (!stopped) {
	                        stopped = true;
	                        observer.OnError(e);
	                    }
	                }, function () {
	                    if (!stopped) {
	                        completed1 = true;
	                        if (completed2) {
	                            stopped = true;
	                            observer.OnCompleted();
	                        }
	                    }
	                }));
	                var h2 = source2.Subscribe(new Observer(function (v) {
	                    if (!stopped) {
	                        observer.OnNext(v);
	                    }
	                }, function (e) {
	                    if (!stopped) {
	                        stopped = true;
	                        observer.OnError(e);
	                    }
	                }, function () {
	                    if (!stopped) {
	                        completed2 = true;
	                        if (completed1) {
	                            stopped = true;
	                            observer.OnCompleted();
	                        }
	                    }
	                }));
	                return Util.createDisposable(function () {
	                    h1.Dispose();
	                    h2.Dispose();
	                });
	            });
	        };
	
	        FObservable.pairwise = function pairwise(source) {
	            return new Observable(function (observer) {
	                var last = null;
	                return source.Subscribe(new Observer(function (next) {
	                    if (last != null) observer.OnNext([last, next]);
	                    last = next;
	                }, observer.OnError, observer.OnCompleted));
	            });
	        };
	
	        FObservable.partition = function partition(predicate, source) {
	            return Tuple(FObservable.filter(predicate, source), FObservable.filter(function (x) {
	                return !predicate(x);
	            }, source));
	        };
	
	        FObservable.scan = function scan(collector, state, source) {
	            return new Observable(function (observer) {
	                return source.Subscribe(new Observer(function (t) {
	                    FObservable.__protect(function () {
	                        return collector(state, t);
	                    }, function (u) {
	                        state = u;observer.OnNext(u);
	                    }, observer.OnError);
	                }, observer.OnError, observer.OnCompleted));
	            });
	        };
	
	        FObservable.split = function split(splitter, source) {
	            return Tuple(FObservable.choose(function (v) {
	                return splitter(v).valueIfChoice1;
	            }, source), FObservable.choose(function (v) {
	                return splitter(v).valueIfChoice2;
	            }, source));
	        };
	
	        FObservable.subscribe = function subscribe(callback, source) {
	            return source.Subscribe(new Observer(callback));
	        };
	
	        return FObservable;
	    }();
	
	    exports.Observable = FObservable;
	
	    var Event = exports.Event = function () {
	        function Event(_subscriber, delegates) {
	            _classCallCheck(this, Event);
	
	            this._subscriber = _subscriber;
	            this.delegates = delegates || new Array();
	        }
	
	        Event.prototype.Add = function Add(f) {
	            this._addHandler(f);
	        };
	        // IEvent<T> methods
	
	
	        Event.prototype.Trigger = function Trigger(value) {
	            Seq.iterate(function (f) {
	                return f(value);
	            }, this.delegates);
	        };
	        // IDelegateEvent<T> methods
	
	
	        Event.prototype._addHandler = function _addHandler(f) {
	            this.delegates.push(f);
	        };
	
	        Event.prototype._removeHandler = function _removeHandler(f) {
	            var index = this.delegates.findIndex(function (el) {
	                return "" + el == "" + f;
	            }); // Special dedication to Chet Husk.
	            if (index > -1) this.delegates.splice(index, 1);
	        };
	
	        Event.prototype.AddHandler = function AddHandler(handler) {
	            this._addHandler(function (x) {
	                return handler(undefined, x);
	            });
	        };
	
	        Event.prototype.RemoveHandler = function RemoveHandler(handler) {
	            this._removeHandler(function (x) {
	                return handler(undefined, x);
	            });
	        };
	        // IObservable<T> methods
	
	
	        Event.prototype._subscribeFromObserver = function _subscribeFromObserver(observer) {
	            var _this7 = this;
	
	            if (this._subscriber) return this._subscriber(observer);
	            var callback = observer.OnNext;
	            this._addHandler(callback);
	            return Util.createDisposable(function () {
	                return _this7._removeHandler(callback);
	            });
	        };
	
	        Event.prototype._subscribeFromCallback = function _subscribeFromCallback(callback) {
	            var _this8 = this;
	
	            this._addHandler(callback);
	            return Util.createDisposable(function () {
	                return _this8._removeHandler(callback);
	            });
	        };
	
	        Event.prototype.Subscribe = function Subscribe(arg) {
	            return typeof arg == "function" ? this._subscribeFromCallback(arg) : this._subscribeFromObserver(arg);
	        };
	
	        Event.add = function add(callback, sourceEvent) {
	            sourceEvent.Subscribe(new Observer(callback));
	        };
	
	        Event.choose = function choose(chooser, sourceEvent) {
	            var source = sourceEvent;
	            return new Event(function (observer) {
	                return source.Subscribe(new Observer(function (t) {
	                    return FObservable.__protect(function () {
	                        return chooser(t);
	                    }, function (u) {
	                        if (u != null) observer.OnNext(u);
	                    }, observer.OnError);
	                }, observer.OnError, observer.OnCompleted));
	            }, source.delegates);
	        };
	
	        Event.filter = function filter(predicate, sourceEvent) {
	            return Event.choose(function (x) {
	                return predicate(x) ? x : null;
	            }, sourceEvent);
	        };
	
	        Event.map = function map(mapping, sourceEvent) {
	            var source = sourceEvent;
	            return new Event(function (observer) {
	                return source.Subscribe(new Observer(function (t) {
	                    return FObservable.__protect(function () {
	                        return mapping(t);
	                    }, observer.OnNext, observer.OnError);
	                }, observer.OnError, observer.OnCompleted));
	            }, source.delegates);
	        };
	
	        Event.merge = function merge(event1, event2) {
	            var source1 = event1;
	            var source2 = event2;
	            return new Event(function (observer) {
	                var stopped = false,
	                    completed1 = false,
	                    completed2 = false;
	                var h1 = source1.Subscribe(new Observer(function (v) {
	                    if (!stopped) observer.OnNext(v);
	                }, function (e) {
	                    if (!stopped) {
	                        stopped = true;
	                        observer.OnError(e);
	                    }
	                }, function () {
	                    if (!stopped) {
	                        completed1 = true;
	                        if (completed2) {
	                            stopped = true;
	                            observer.OnCompleted();
	                        }
	                    }
	                }));
	                var h2 = source2.Subscribe(new Observer(function (v) {
	                    if (!stopped) observer.OnNext(v);
	                }, function (e) {
	                    if (!stopped) {
	                        stopped = true;
	                        observer.OnError(e);
	                    }
	                }, function () {
	                    if (!stopped) {
	                        completed2 = true;
	                        if (completed1) {
	                            stopped = true;
	                            observer.OnCompleted();
	                        }
	                    }
	                }));
	                return Util.createDisposable(function () {
	                    h1.Dispose();
	                    h2.Dispose();
	                });
	            }, source1.delegates.concat(source2.delegates));
	        };
	
	        Event.pairwise = function pairwise(sourceEvent) {
	            var source = sourceEvent;
	            return new Event(function (observer) {
	                var last = null;
	                return source.Subscribe(new Observer(function (next) {
	                    if (last != null) observer.OnNext([last, next]);
	                    last = next;
	                }, observer.OnError, observer.OnCompleted));
	            }, source.delegates);
	        };
	
	        Event.partition = function partition(predicate, sourceEvent) {
	            return Tuple(Event.filter(predicate, sourceEvent), Event.filter(function (x) {
	                return !predicate(x);
	            }, sourceEvent));
	        };
	
	        Event.scan = function scan(collector, state, sourceEvent) {
	            var source = sourceEvent;
	            return new Event(function (observer) {
	                return source.Subscribe(new Observer(function (t) {
	                    FObservable.__protect(function () {
	                        return collector(state, t);
	                    }, function (u) {
	                        state = u;observer.OnNext(u);
	                    }, observer.OnError);
	                }, observer.OnError, observer.OnCompleted));
	            }, source.delegates);
	        };
	
	        Event.split = function split(splitter, sourceEvent) {
	            return Tuple(Event.choose(function (v) {
	                return splitter(v).valueIfChoice1;
	            }, sourceEvent), Event.choose(function (v) {
	                return splitter(v).valueIfChoice2;
	            }, sourceEvent));
	        };
	
	        _createClass(Event, [{
	            key: "Publish",
	            get: function get() {
	                return this;
	            }
	        }]);
	
	        return Event;
	    }();
	
	    var Lazy = exports.Lazy = function () {
	        function Lazy(factory) {
	            _classCallCheck(this, Lazy);
	
	            this.factory = factory;
	            this.isValueCreated = false;
	        }
	
	        Lazy.createFromValue = function createFromValue(v) {
	            return new Lazy(function () {
	                return v;
	            });
	        };
	
	        _createClass(Lazy, [{
	            key: "value",
	            get: function get() {
	                if (!this.isValueCreated) {
	                    this.createdValue = this.factory();
	                    this.isValueCreated = true;
	                }
	                return this.createdValue;
	            }
	        }]);
	
	        return Lazy;
	    }();
	});
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(462)], __WEBPACK_AMD_DEFINE_RESULT__ = function (exports, _fableCore) {
	    "use strict";
	
	    Object.defineProperty(exports, "__esModule", {
	        value: true
	    });
	    exports.ProgramModule = exports.Program = exports.CmdModule = undefined;
	
	    function _classCallCheck(instance, Constructor) {
	        if (!(instance instanceof Constructor)) {
	            throw new TypeError("Cannot call a class as a function");
	        }
	    }
	
	    var CmdModule = exports.CmdModule = function ($exports) {
	        var none = $exports.none = function none() {
	            return new _fableCore.List();
	        };
	
	        var ofMsg = $exports.ofMsg = function ofMsg(msg) {
	            return _fableCore.List.ofArray([function (dispatch) {
	                dispatch(msg);
	            }]);
	        };
	
	        var map = $exports.map = function map(f, cmd) {
	            return _fableCore.List.map(function (g) {
	                return function ($var2) {
	                    return g(function (post) {
	                        return function ($var1) {
	                            return post(f($var1));
	                        };
	                    }($var2));
	                };
	            }, cmd);
	        };
	
	        var batch = $exports.batch = function batch(cmds) {
	            return _fableCore.List.collect(function (x) {
	                return x;
	            }, cmds);
	        };
	
	        var ofAsync = $exports.ofAsync = function ofAsync(task, ofSuccess, ofError) {
	            var bind = function bind(dispatch) {
	                return function (builder_) {
	                    return builder_.Delay(function (unitVar) {
	                        return builder_.Bind(_fableCore.Async.catch(task), function (_arg1) {
	                            dispatch(_arg1.Case === "Choice2Of2" ? ofError(_arg1.Fields[0]) : ofSuccess(_arg1.Fields[0]));
	                            return builder_.Zero();
	                        });
	                    });
	                }(_fableCore.AsyncBuilder.singleton);
	            };
	
	            return _fableCore.List.ofArray([function ($var3) {
	                return function (arg00) {
	                    _fableCore.Async.startImmediate(arg00);
	                }(bind($var3));
	            }]);
	        };
	
	        var ofFunc = $exports.ofFunc = function ofFunc(task, ofSuccess, ofError) {
	            var bind = function bind(dispatch) {
	                try {
	                    (function ($var4) {
	                        return dispatch(ofSuccess($var4));
	                    })(task());
	                } catch (x) {
	                    (function ($var5) {
	                        return dispatch(ofError($var5));
	                    })(x);
	                }
	            };
	
	            return _fableCore.List.ofArray([bind]);
	        };
	
	        var ofSub = $exports.ofSub = function ofSub(sub) {
	            return _fableCore.List.ofArray([sub]);
	        };
	
	        return $exports;
	    }({});
	
	    var Program = exports.Program = function Program(init, update, subscribe, trace) {
	        _classCallCheck(this, Program);
	
	        this.init = init;
	        this.update = update;
	        this.subscribe = subscribe;
	        this.trace = trace;
	    };
	
	    _fableCore.Util.setInterfaces(Program.prototype, ["FSharpRecord"], "Fable.Elmish.Program");
	
	    var ProgramModule = exports.ProgramModule = function ($exports) {
	        var mkProgram = $exports.mkProgram = function mkProgram(init, update) {
	            return new Program(init, update, function (_arg1) {
	                return CmdModule.none();
	            }, function (_arg2) {
	                return function (value) {
	                    value;
	                };
	            });
	        };
	
	        var mkSimple = $exports.mkSimple = function mkSimple(init, update) {
	            return new Program(function ($var6) {
	                return function (state) {
	                    return [state, CmdModule.none()];
	                }(init($var6));
	            }, function (msg) {
	                return function ($var7) {
	                    return function (state) {
	                        return [state, CmdModule.none()];
	                    }(update(msg)($var7));
	                };
	            }, function (_arg1) {
	                return CmdModule.none();
	            }, function (_arg2) {
	                return function (value) {
	                    value;
	                };
	            });
	        };
	
	        var withSubscription = $exports.withSubscription = function withSubscription(subscribe, program) {
	            return new Program(program.init, program.update, subscribe, program.trace);
	        };
	
	        var withConsoleTrace = $exports.withConsoleTrace = function withConsoleTrace(program) {
	            var trace = function trace(text) {
	                return function (tupledArg) {
	                    console.log(text, tupledArg[0], tupledArg[1]);
	                };
	            };
	
	            var trace_1 = trace;
	            return new Program(program.init, program.update, program.subscribe, trace_1);
	        };
	
	        var withTrace = $exports.withTrace = function withTrace(program, trace) {
	            return new Program(program.init, program.update, program.subscribe, trace);
	        };
	
	        var run = $exports.run = function run(setState, program) {
	            var patternInput = program.init();
	
	            var inbox = _fableCore.MailboxProcessor.start(function (mb) {
	                var loop = function loop(state) {
	                    return function (builder_) {
	                        return builder_.Delay(function (unitVar) {
	                            return builder_.Combine(builder_.TryWith(builder_.Delay(function (unitVar_1) {
	                                setState(state);
	                                return builder_.Zero();
	                            }), function (_arg1) {
	                                console.error("unable to setState:", state, _arg1);
	                                return builder_.Zero();
	                            }), builder_.Delay(function (unitVar_1) {
	                                return builder_.Bind(mb.receive(), function (_arg2) {
	                                    program.trace("Updating: ")([state, _arg2]);
	                                    return builder_.TryWith(builder_.Delay(function (unitVar_2) {
	                                        var patternInput_1 = program.update(_arg2)(state);
	
	                                        _fableCore.Seq.iterate(function (sub) {
	                                            sub(function (arg00) {
	                                                mb.post(arg00);
	                                            });
	                                        }, patternInput_1[1]);
	
	                                        return builder_.ReturnFrom(loop(patternInput_1[0]));
	                                    }), function (_arg3) {
	                                        console.error("unable to update:", _arg3);
	                                        return builder_.ReturnFrom(loop(state));
	                                    });
	                                });
	                            }));
	                        });
	                    }(_fableCore.AsyncBuilder.singleton);
	                };
	
	                return loop(patternInput[0]);
	            });
	
	            _fableCore.Seq.iterate(function (sub) {
	                sub(function (arg00) {
	                    inbox.post(arg00);
	                });
	            }, _fableCore.List.append(program.subscribe(patternInput[0]), patternInput[1]));
	
	            return function (arg00) {
	                inbox.post(arg00);
	            };
	        };
	
	        return $exports;
	    }({});
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map